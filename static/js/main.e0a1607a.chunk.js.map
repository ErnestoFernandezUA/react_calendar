{"version":3,"sources":["pages/NotFound.tsx","constants/FORMAT.ts","store/features/Interval/intervalSlice.ts","store/hooks.ts","components/Day.tsx","components/Month.tsx","helpers/divideYear.ts","components/Year.tsx","pages/HomePage/HomePage.tsx","helpers/buildInterval.ts","utils/axiosClient.ts","store/features/Posts/postsSlice.ts","api/post.ts","pages/PostPage/PostPage.tsx","components/Controls.tsx","App.tsx","store/index.ts","index.tsx"],"names":["NotFound","FORMAT","DAY","WEEK","MONTH","YEAR","initialState","currentDate","start","end","storage","formatCalendar","intervalSlice","createAsyncThunk","a","createSlice","name","reducers","setCurrentDate","state","Date","valueOf","setSpecialDate","action","payload","addTodo","push","setFormat","console","log","setIntervalCalendar","toDateString","getFullYear","getMonth","getDate","toString","date","dayOfWeek","getDay","IS_MONDAY_FIRST_DAY_OF_WEEK","resetState","actions","selectCurrentDate","interval","selectStartInterval","selectEndInterval","selectFormat","useAppDispatch","useDispatch","useAppSelector","useSelector","Wrapper","styled","div","format","css","isWeekend","isNotCurrentMonth","isCurrentDay","DayTitle","DayOfWeek","DateString","DayListTodos","Day","startDay","disabled","dispatch","split","month","day","year","current","anyDay","isCurrentYear","isCurrentMonth","useCurrentHook","onClick","Month","countEmptyItem","empty","i","map","emptyItem","Year","prepared","useRef","length","currentMonth","divideYear","HomePage","buildInterval","useEffect","baseURL","instance","axios","create","client","url","get","response","data","statusLoading","error","getPostsAsync","postsSlice","addPosts","setStatus","setError","extraReducers","builder","addCase","pending","fulfilled","rejected","selectPosts","posts","PostPage","id","useParams","post","find","p","String","className","to","title","body","Controls","defaultValue","onChange","e","formatValue","target","value","Object","keys","item","formatKey","Header","header","Main","main","App","router","createHashRouter","path","element","errorElement","children","rootReducer","combineReducers","postsReducer","persistConfig","key","whitelist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","createRoot","document","getElementById","render","loading"],"mappings":"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","file":"static/js/main.e0a1607a.chunk.js","sourcesContent":["import { FunctionComponent } from 'react';\n\nexport const NotFound: FunctionComponent = () => {\n  return (\n    <div>\n      This page doesn&nbsp;t exist.\n    </div>\n  );\n};\n","import { FormatKeys, FormatValue } from '../type/FormatType';\n\nexport const FORMAT: { [key in FormatKeys]: FormatValue } = {\n  DAY: 'day',\n  WEEK: 'week',\n  MONTH: 'month',\n  YEAR: 'year',\n};\n","/* eslint-disable no-case-declarations */\n/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../..';\nimport { FORMAT } from '../../../constants/FORMAT';\nimport { FormatValue } from '../../../type/FormatType';\nimport { Todo } from '../../../type/Todo';\n\nexport const IS_MONDAY_FIRST_DAY_OF_WEEK = 1;\n\nexport interface IntervalState {\n  currentDate: number;\n  start: number;\n  end: number;\n\n  storage: Todo[];\n  formatCalendar: FormatValue;\n}\n\nconst initialState: IntervalState = {\n  currentDate: 0,\n  start: 0,\n  end: 0,\n\n  storage: [],\n  formatCalendar: FORMAT.MONTH,\n};\n\nexport const getIntervalAsync = createAsyncThunk(\n  'Interval/fetchInterval',\n  async () => {\n    // const response: Post[] = await getAllInterval();\n\n    // eslint-disable-next-line no-console\n    // console.log(response);\n\n    // return response;\n  },\n);\n\nconst intervalSlice = createSlice({\n  name: 'post',\n  initialState,\n  reducers: {\n    setCurrentDate: (\n      state: IntervalState,\n    ) => {\n      state.currentDate = (new Date()).valueOf();\n    },\n    setSpecialDate: (\n      state: IntervalState,\n      action,\n    ) => {\n      state.currentDate = new Date(action.payload).valueOf();\n    },\n    addTodo: (state: IntervalState, action: PayloadAction<Todo>) => {\n      state.storage.push(action.payload);\n    },\n    setFormat: (\n      state: IntervalState,\n      action: PayloadAction<FormatValue>,\n    ) => {\n      state.formatCalendar = action.payload;\n\n      // eslint-disable-next-line no-console\n      console.log('setFormat', state.formatCalendar);\n    },\n    setIntervalCalendar: (state: IntervalState) => {\n      // eslint-disable-next-line no-console\n      console.log('setIntervalCalendar//',\n        'format calendar:', state.formatCalendar,\n        'current date:', new Date(state.currentDate).toDateString());\n\n      if (!state.currentDate) {\n        // eslint-disable-next-line no-console\n        console.log('break');\n\n        return;\n      }\n\n      switch (state.formatCalendar) {\n        case FORMAT.DAY:\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            new Date(state.currentDate).getDate(),\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            new Date(state.currentDate).getDate() + 1,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          console.log('day start', new Date(state.start).toString());\n          // eslint-disable-next-line no-console\n          console.log('day end', new Date(state.end).toString());\n          break;\n\n        case FORMAT.WEEK:\n          const date = new Date(state.currentDate).getDate();\n          const dayOfWeek = new Date(state.currentDate).getDay();\n\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            dayOfWeek === 0\n              ? date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK - 7\n              : date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK,\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            dayOfWeek === 0\n              ? date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK - 7\n              : date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK\n            + 7,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          console.log('week start', new Date(state.start).toDateString());\n          // eslint-disable-next-line no-console\n          console.log('week end', new Date(state.end).toDateString());\n          break;\n\n        case FORMAT.MONTH:\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            IS_MONDAY_FIRST_DAY_OF_WEEK\n            - (new Date(\n              new Date(state.currentDate).getFullYear(),\n              new Date(state.currentDate).getMonth(),\n              0,\n            )).getDay(),\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth() + 1,\n            (IS_MONDAY_FIRST_DAY_OF_WEEK\n            + 7\n            - (new Date(\n              new Date(state.currentDate).getFullYear(),\n              new Date(state.currentDate).getMonth() + 1,\n              0,\n            )).getDay()) % 7,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          console.log('start month', new Date(state.start).toString());\n          // eslint-disable-next-line no-console\n          console.log('end month', new Date(state.end).toString());\n\n          break;\n\n        case FORMAT.YEAR:\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            0,\n            1,\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear() + 1,\n            0,\n            1,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          console.log('start year', new Date(state.start).toString());\n          // eslint-disable-next-line no-console\n          console.log('end year', new Date(state.end).toString());\n          break;\n\n        default:\n      }\n    },\n    resetState: (state: IntervalState) => {\n      return { ...state, ...initialState };\n    },\n  },\n  // extraReducers: (builder) => {\n  //   builder\n  //     .addCase(getIntervalAsync.pending, (state: IntervalState) => {\n  //       state.statusLoading = 'loading';\n  //     })\n  //     .addCase(getIntervalAsync.fulfilled, (state, action) => {\n  //       state.storage.push(...action.payload);\n  //       state.statusLoading = 'idle';\n  //     })\n  //     .addCase(getIntervalAsync.rejected, (state, action) => {\n  //       state.statusLoading = 'failed';\n\n  //       // eslint-disable-next-line no-console\n  //       console.log(action);\n  //     });\n  // },\n});\n\nexport default intervalSlice.reducer;\nexport const {\n  setCurrentDate,\n  setSpecialDate,\n  setFormat,\n  setIntervalCalendar,\n  addTodo,\n  resetState,\n} = intervalSlice.actions;\n\nexport const selectTodos = (state: RootState) => state.interval.storage;\nexport const selectCurrentDate\n= (state: RootState) => state.interval.currentDate;\nexport const selectStartInterval\n= (state: RootState) => state.interval.start;\nexport const selectEndInterval\n= (state: RootState) => state.interval.end;\n\nexport const selectFormat\n= (state: RootState) => state.interval.formatCalendar;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '.';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { FunctionComponent } from 'react';\nimport styled, { css } from 'styled-components';\nimport { FORMAT } from '../constants/FORMAT';\nimport {\n  selectCurrentDate,\n  selectFormat,\n  setIntervalCalendar,\n  setSpecialDate,\n} from '../store/features/Interval/intervalSlice';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\n\ntype WrapperType = {\n  format?: string,\n  isWeekend?: boolean,\n  isNotCurrentMonth: boolean,\n  isCurrentDay: boolean;\n};\n\nconst Wrapper = styled.div<WrapperType>`\n  box-sizing: border-box;\n  padding: 10px;\n  font-size: 14px;\n  cursor: pointer;\n\n  ${({ format }) => (format === FORMAT.DAY) && css`\n    height: 100vh;\n  `}\n\n  ${({ format }) => (format === FORMAT.WEEK || format === FORMAT.MONTH) && css`\n    height: 200px;\n  `}\n\n  ${({ format, isWeekend }) => (format === FORMAT.YEAR && isWeekend) && css`\n    color: red;\n  `}\n\n  ${({ isNotCurrentMonth }) => isNotCurrentMonth && css`\n    opacity: 0.4;\n  `}\n\n  ${({ isCurrentDay }) => isCurrentDay && css`\n    background-color: #79c6c6;\n  `}\n\n`;\n\nconst DayTitle = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst DayOfWeek = styled.div<{ isWeekend: boolean }>`\n ${({ isWeekend }) => {\n    if (isWeekend) {\n      return css`\n        color: #a16e73;\n        font-weight: bold;\n      `;\n    }\n\n    return '';\n  }}\n`;\n\nconst DateString = styled.div`\n`;\n\nconst DayListTodos = styled.div<{ format?: string }>`\n  ${({ format }) => {\n    if (format === FORMAT.YEAR) {\n      return css`\n        display: none;\n      `;\n    }\n\n    return '';\n  }}\n`;\n\ninterface DayProps {\n  startDay: number;\n  // eslint-disable-next-line react/require-default-props\n  disabled?: boolean;\n}\n\nconst useDayHook = (value: number) => new Date(value).toDateString().split(' ');\n\nconst useCurrentHook = (current: number, anyDay: number) => {\n  const isCurrentYear\n  = new Date(current).getFullYear() === new Date(anyDay).getFullYear();\n\n  const isCurrentMonth\n  = new Date(current).getMonth() === new Date(anyDay).getMonth()\n  && new Date(current).getFullYear() === new Date(anyDay).getFullYear();\n\n  const isCurrentDay\n   = new Date(current).getDate() === new Date(anyDay).getDate()\n   && new Date(current).getMonth() === new Date(anyDay).getMonth()\n   && new Date(current).getFullYear() === new Date(anyDay).getFullYear();\n\n  return [isCurrentDay, isCurrentMonth, isCurrentYear];\n};\n\nexport const Day: FunctionComponent<DayProps> = ({\n  startDay,\n  disabled = false,\n}) => {\n  const dispatch = useAppDispatch();\n  const currentDate = useAppSelector(selectCurrentDate);\n  const format = useAppSelector(selectFormat);\n  const isWeekend = (new Date(startDay).getDay() === 0\n  || new Date(startDay).getDay() === 6);\n  const [dayOfWeek, month, day, year] = useDayHook(startDay);\n  const [isCurrentDay, isCurrentMonth] = useCurrentHook(currentDate, startDay);\n\n  const isTodosToday = true;\n\n  const onClick = () => {\n    if (!disabled) {\n      dispatch(setSpecialDate(startDay));\n    }\n\n    if (!disabled && !isCurrentMonth) {\n      dispatch(setIntervalCalendar());\n    }\n  };\n\n  if (disabled) {\n    return (\n      <div />\n    );\n  }\n\n  return (\n    <Wrapper\n      format={format}\n      isWeekend={isWeekend}\n      isNotCurrentMonth={!isCurrentMonth}\n      isCurrentDay={isCurrentDay}\n      onClick={onClick}\n    >\n      <DayTitle>\n        <DayOfWeek isWeekend={isWeekend}>\n          {format !== FORMAT.YEAR && dayOfWeek}\n        </DayOfWeek>\n\n        <DateString>\n          {format === FORMAT.DAY ? `${day}/${month}/${year}` : day}\n        </DateString>\n      </DayTitle>\n\n      <DayListTodos format={format}>\n        {isTodosToday && <p>List of TODOS:</p>}\n      </DayListTodos>\n    </Wrapper>\n  );\n};\n","import { FunctionComponent } from 'react';\nimport styled, { css } from 'styled-components';\nimport { FORMAT } from '../constants/FORMAT';\nimport {\n  IS_MONDAY_FIRST_DAY_OF_WEEK,\n  selectFormat,\n} from '../store/features/Interval/intervalSlice';\nimport { useAppSelector } from '../store/hooks';\nimport { Day } from './Day';\n\nconst Wrapper = styled.div<{ format?: string }>`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n\n  ${({ format }) => {\n    if (format === FORMAT.DAY) {\n      return css`\n        display: block;\n      `;\n    }\n\n    if (format === FORMAT.YEAR) {\n      return css`\n        /* max-width: 200px; */\n      `;\n    }\n\n    return '';\n  }}\n`;\n\ninterface MonthProps {\n  interval: number[];\n}\n\nexport const Month: FunctionComponent<MonthProps> = ({ interval }) => {\n  const format = useAppSelector(selectFormat);\n\n  const countEmptyItem = (new Date(interval[0]).getDay()\n  + 7 - IS_MONDAY_FIRST_DAY_OF_WEEK) % 7;\n\n  const empty = [];\n\n  for (let i = 0; i < countEmptyItem; i += 1) {\n    empty.push(-i);\n  }\n\n  return (\n    <Wrapper format={format}>\n      {empty.map((emptyItem: number) => (\n        <Day key={emptyItem} startDay={emptyItem} disabled />\n      ))}\n\n      {interval.map((day: number) => (\n        <Day key={day} startDay={day} />\n      ))}\n    </Wrapper>\n  );\n};\n","export const divideYear = (interval: number[]) => {\n  const year = [];\n  let i = 0;\n\n  while (i < interval.length) {\n    const currentMonth = new Date(interval[i]).getMonth();\n    const month = [];\n\n    while (currentMonth === new Date(interval[i]).getMonth()) {\n      month.push(interval[i]);\n\n      i += 1;\n    }\n\n    year.push(month);\n  }\n\n  return year;\n};\n","import { FunctionComponent, useRef } from 'react';\nimport styled from 'styled-components';\nimport { divideYear } from '../helpers/divideYear';\nimport { Month } from './Month';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 2rem;\n  min-width: 1100px;\n`;\n\ninterface YearProps {\n  interval: number[];\n}\n\nexport const Year: FunctionComponent<YearProps> = ({ interval }) => {\n  const prepared = useRef(divideYear(interval));\n\n  return (\n    <Wrapper>\n      {prepared.current.map((month: number[]) => (\n        <Month key={month[0]} interval={month} />\n      ))}\n    </Wrapper>\n  );\n};\n","import { FunctionComponent, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { Month } from '../../components/Month';\nimport { buildInterval } from '../../helpers/buildInterval';\nimport {\n  selectCurrentDate,\n  selectEndInterval,\n  selectFormat,\n  selectStartInterval,\n  setCurrentDate,\n  setFormat,\n  setIntervalCalendar,\n} from '../../store/features/Interval/intervalSlice';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { FORMAT } from '../../constants/FORMAT';\nimport { Year } from '../../components/Year';\n\nconst Wrapper = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nexport const HomePage: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const currentDate = useAppSelector(selectCurrentDate);\n  const start = useAppSelector(selectStartInterval);\n  const end = useAppSelector(selectEndInterval);\n  const interval = buildInterval(start, end);\n  const format = useAppSelector(selectFormat);\n\n  useEffect(() => {\n    if (!currentDate) {\n      dispatch(setCurrentDate());\n      dispatch(setFormat(FORMAT.MONTH));\n    }\n\n    // dispatch(setSpecialDate(new Date(2023, 2, 19).valueOf()));\n    dispatch(setIntervalCalendar());\n  }, []);\n\n  // eslint-disable-next-line no-console\n  // console.log('HomePage//',\n  //   new Date(start).toDateString(),\n  //   '-----------',\n  //   new Date(end).toDateString());\n\n  return (\n    <Wrapper>\n      {format === FORMAT.YEAR ? (\n        <Year interval={interval} />\n      ) : (\n        <Month interval={interval} />\n      )}\n    </Wrapper>\n  );\n};\n","export function buildInterval(start: number, end: number) {\n  const interval = [];\n  let day = start;\n\n  // eslint-disable-next-line no-console\n  console.log('buildInterval//',\n    new Date(start).toDateString(),\n    '-----------',\n    new Date(end).toDateString());\n\n  while (day < end) {\n    interval.push(day);\n\n    day = new Date(\n      new Date(day).getFullYear(),\n      new Date(day).getMonth(),\n      new Date(day).getDate() + 1,\n    ).valueOf();\n  }\n\n  return interval;\n}\n","import axios from 'axios';\n\nconst baseURL = 'https://jsonplaceholder.typicode.com';\n\nconst instance = axios.create({\n  baseURL,\n});\n\ntype FetchData = {\n};\n\nexport const client = {\n  async get<T>(url: string) {\n    const response = await instance.get<T>(url);\n\n    // eslint-disable-next-line no-console\n    console.log('get', baseURL + url);\n\n    return response.data;\n  },\n\n  async post<T>(url: string, data: FetchData) {\n    const response = await instance.post<T>(url, data);\n\n    return response.data;\n  },\n\n  async patch<T>(url: string, data: FetchData) {\n    const response = await instance.patch<T>(url, data);\n\n    return response.data;\n  },\n\n  async delete(url: string) {\n    return instance.delete(url);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { getAllPosts } from '../../../api/post';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../..';\nimport { Post } from '../../../type/Post';\n\nexport interface PostsState {\n  storage: Post[];\n  statusLoading: 'idle' | 'loading' | 'failed';\n  error: unknown;\n}\n\nconst initialState: PostsState = {\n  storage: [],\n  statusLoading: 'idle',\n  error: null,\n};\n\nexport const getPostsAsync = createAsyncThunk('posts/fetchPosts', async () => {\n  const response: Post[] = await getAllPosts();\n\n  // eslint-disable-next-line no-console\n  console.log(response);\n\n  return response;\n});\n\nconst postsSlice = createSlice({\n  name: 'post',\n  initialState,\n  reducers: {\n    addPosts: (state: PostsState, action: PayloadAction<Post[]>) => {\n      state.storage.push(...action.payload);\n    },\n    setStatus: (\n      state: PostsState,\n      action: PayloadAction<'idle' | 'loading' | 'failed'>,\n    ) => {\n      state.statusLoading = action.payload;\n    },\n    setError: (state: PostsState, action: PayloadAction<unknown>) => {\n      state.error = action.payload;\n      state.statusLoading = 'failed';\n    },\n    resetState: (state: PostsState) => {\n      return { ...state, ...initialState };\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getPostsAsync.pending, (state: PostsState) => {\n        state.statusLoading = 'loading';\n      })\n      .addCase(getPostsAsync.fulfilled, (state, action) => {\n        state.storage.push(...action.payload);\n        state.statusLoading = 'idle';\n      })\n      .addCase(getPostsAsync.rejected, (state, action) => {\n        state.statusLoading = 'failed';\n\n        // eslint-disable-next-line no-console\n        console.log(action);\n      });\n  },\n});\n\nexport default postsSlice.reducer;\nexport const {\n  addPosts,\n  setStatus,\n  setError,\n  resetState,\n} = postsSlice.actions;\n\nexport const selectPosts = (state: RootState) => state.posts.storage;\nexport const selectPostStatusLoading\n= (state: RootState) => state.posts.statusLoading;\nexport const selectPostError = (state: RootState) => state.posts.error;\n","import { client } from '../utils/axiosClient';\nimport { Post } from '../type/Post';\n\nexport const getAllPosts = () => client.get<Post[]>('/posts/');\nexport const getPostById = (postId: number) => client.get<Post[]>(`/posts/${postId}`);\n","import { FunctionComponent } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { resetState, selectPosts } from '../../store/features/Posts/postsSlice';\n\nimport './PostPage.scss';\n\nexport const PostPage: FunctionComponent = () => {\n  const { id } = useParams();\n\n  // eslint-disable-next-line no-console\n  console.log(id);\n\n  const posts = useAppSelector(selectPosts);\n  const dispatch = useAppDispatch();\n\n  dispatch(resetState());\n\n  const post = posts.find(p => String(p.id) === String(id));\n\n  return (\n    <div\n      className=\"PostPage\"\n    >\n      <Link\n        to=\"/\"\n        className=\"PostPage__Link\"\n      >\n        Back\n      </Link>\n\n      {post ? (\n        <div>\n          <h1>{`PostPage: ${post.title}`}</h1>\n          <p>{post.body}</p>\n        </div>\n      ) : (\n        <>\n          post doesn&nbsp;t exist\n        </>\n      )}\n    </div>\n  );\n};\n","import {\n  FunctionComponent,\n} from 'react';\nimport styled from 'styled-components';\nimport { FORMAT } from '../constants/FORMAT';\nimport {\n  selectCurrentDate,\n  selectFormat,\n  setFormat,\n  setIntervalCalendar,\n} from '../store/features/Interval/intervalSlice';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { FormatKeys, FormatValue } from '../type/FormatType';\n\nconst Wrapper = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const Controls: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const currentDate = useAppSelector(selectCurrentDate);\n  const format = useAppSelector(selectFormat);\n\n  const onChange = (e:React.ChangeEvent<HTMLSelectElement>) => {\n    const formatValue = e.target.value as FormatValue;\n\n    // eslint-disable-next-line no-console\n    // console.log('Control onChange//', formatValue);\n\n    dispatch(setFormat(formatValue));\n    dispatch(setIntervalCalendar());\n  };\n\n  return (\n    <Wrapper>\n      <p>{new Date(currentDate).toDateString()}</p>\n\n      <select\n        defaultValue={format}\n        onChange={onChange}\n      >\n        {Object.keys(FORMAT).map((item) => {\n          const formatKey = item as FormatKeys;\n\n          return (\n            <option\n              value={FORMAT[formatKey]}\n              key={item}\n            >\n              {FORMAT[formatKey]}\n            </option>\n          );\n        })}\n      </select>\n    </Wrapper>\n  );\n};\n","import { createHashRouter, Outlet } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { NotFound } from './pages/NotFound';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { PostPage } from './pages/PostPage/PostPage';\nimport { Controls } from './components/Controls';\n\nconst Wrapper = styled.div`\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 100vh;\n  `;\n\nconst Header = styled.header`\n  max-width: 1200px;\n  margin: 0 auto;\n  text-align: center;\n  margin-bottom: 1rem;\n`;\n\nconst Main = styled.main`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nfunction App() {\n  return (\n    <Wrapper>\n      <Header>\n        <h1>Calendar</h1>\n        <Controls />\n      </Header>\n\n      <Main>\n        <Outlet />\n      </Main>\n    </Wrapper>\n  );\n}\n\nexport const router = createHashRouter([\n  {\n    path: '/',\n    element: <App />,\n    errorElement: <NotFound />,\n    id: 'root',\n    children: [\n      {\n        path: '/',\n        element: <HomePage />,\n        id: 'homepage',\n        errorElement: <>Error on Homepage</>,\n      },\n      {\n        path: '/post/:id',\n        element: <PostPage />,\n        errorElement: <>Error on PostPage</>,\n      },\n    ],\n  },\n]);\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n// eslint-disable-next-line import/no-cycle\nimport postsReducer from './features/Posts/postsSlice';\n// eslint-disable-next-line import/no-cycle\nimport intervalSlice from './features/Interval/intervalSlice';\n\nconst rootReducer = combineReducers({\n  posts: postsReducer,\n  interval: intervalSlice,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['interval'],\n  // blacklist: ['interval'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [\n        FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER,\n        'posts',\n      ],\n    },\n  }),\n});\n\nexport default store;\n\nexport const persistor = persistStore(store);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n\n/* eslint-disable @typescript-eslint/indent */\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { RouterProvider } from 'react-router-dom';\nimport { router } from './App';\nimport store, { persistor } from './store';\n\nimport './index.css';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement,\n);\n\nroot.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <RouterProvider router={router} />\n    </PersistGate>\n  </Provider>,\n);\n"],"sourceRoot":""}