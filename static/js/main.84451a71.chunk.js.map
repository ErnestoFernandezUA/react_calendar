{"version":3,"sources":["pages/NotFound.tsx","constants/FORMAT.ts","constants/MONTH.ts","store/features/Interval/intervalSlice.ts","store/hooks.ts","constants/WEEK.ts","components/Day.tsx","components/Month.tsx","helpers/divideYear.ts","components/Year.tsx","pages/HomePage/HomePage.tsx","helpers/buildInterval.ts","utils/axiosClient.ts","store/features/Posts/postsSlice.ts","api/post.ts","pages/PostPage/PostPage.tsx","components/Controls.tsx","App.tsx","store/index.ts","index.tsx"],"names":["NotFound","FORMAT","MONTH_NAMES","initialState","currentDate","start","end","storage","formatCalendar","intervalSlice","createAsyncThunk","a","createSlice","name","reducers","setCurrentDate","state","Date","valueOf","setSpecialDate","action","payload","addTodo","push","setFormat","console","log","setIntervalCalendar","toDateString","getFullYear","getMonth","getDate","toString","date","dayOfWeek","getDay","IS_MONDAY_FIRST_DAY_OF_WEEK","resetState","actions","selectCurrentDate","interval","selectStartInterval","selectEndInterval","selectFormat","useAppDispatch","useDispatch","useAppSelector","useSelector","WEEK","Wrapper","styled","div","format","css","isWeekend","isNotCurrentMonth","DayTitle","isCurrentDay","DayOfWeek","button","DateString","p","DayListTodos","Day","startDay","disabled","dispatch","value","day","arr","split","fullNameDayOfWeek","month","year","useDayHook","current","anyDay","isCurrentYear","isCurrentMonth","useCurrentHook","onClick","e","dayValue","target","HTMLButtonElement","dataset","onWeekClick","String","MonthTitle","MonthContainer","Month","currentMonthName","useRef","monthName","countEmptyItem","empty","i","type","monthValue","onMonthHandler","map","emptyItem","Year","prepared","length","currentMonth","divideYear","HomePage","buildInterval","useEffect","baseURL","instance","axios","create","client","url","get","response","data","statusLoading","error","getPostsAsync","postsSlice","addPosts","setStatus","setError","extraReducers","builder","addCase","pending","fulfilled","rejected","selectPosts","posts","PostPage","id","useParams","post","find","className","to","title","body","Back","Controls","fullNameMonth","fullYear","Header","header","Main","main","App","router","createHashRouter","path","element","errorElement","children","rootReducer","combineReducers","postsReducer","persistConfig","key","whitelist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","createRoot","document","getElementById","render","loading"],"mappings":"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","file":"static/js/main.84451a71.chunk.js","sourcesContent":["import { FunctionComponent } from 'react';\n\nexport const NotFound: FunctionComponent = () => {\n  return (\n    <div>\n      This page doesn&nbsp;t exist.\n    </div>\n  );\n};\n","import { FormatKeys, FormatValue } from '../type/FormatType';\n\nexport const FORMAT: { [key in FormatKeys]: FormatValue } = {\n  DAY: 'day',\n  WEEK: 'week',\n  MONTH: 'month',\n  YEAR: 'year',\n};\n","export const MONTH_NAMES = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n","/* eslint-disable no-case-declarations */\n/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../..';\nimport { FORMAT } from '../../../constants/FORMAT';\nimport { FormatValue } from '../../../type/FormatType';\nimport { Todo } from '../../../type/Todo';\n\nexport const IS_MONDAY_FIRST_DAY_OF_WEEK = 1;\n\nexport interface IntervalState {\n  currentDate: number;\n  start: number;\n  end: number;\n\n  storage: Todo[];\n  formatCalendar: FormatValue;\n}\n\nconst initialState: IntervalState = {\n  currentDate: 0,\n  start: 0,\n  end: 0,\n\n  storage: [],\n  formatCalendar: FORMAT.MONTH,\n};\n\nexport const getIntervalAsync = createAsyncThunk(\n  'Interval/fetchInterval',\n  async () => {\n    // const response: Post[] = await getAllInterval();\n\n    // eslint-disable-next-line no-console\n    // console.log(response);\n\n    // return response;\n  },\n);\n\nconst intervalSlice = createSlice({\n  name: 'post',\n  initialState,\n  reducers: {\n    setCurrentDate: (\n      state: IntervalState,\n    ) => {\n      state.currentDate = (new Date()).valueOf();\n    },\n    setSpecialDate: (\n      state: IntervalState,\n      action,\n    ) => {\n      state.currentDate = new Date(action.payload).valueOf();\n    },\n    addTodo: (state: IntervalState, action: PayloadAction<Todo>) => {\n      state.storage.push(action.payload);\n    },\n    setFormat: (\n      state: IntervalState,\n      action: PayloadAction<FormatValue>,\n    ) => {\n      state.formatCalendar = action.payload;\n\n      // eslint-disable-next-line no-console\n      console.log('setFormat', state.formatCalendar);\n    },\n    setIntervalCalendar: (state: IntervalState) => {\n      // eslint-disable-next-line no-console\n      console.log('setIntervalCalendar//',\n        'format calendar:', state.formatCalendar,\n        'current date:', new Date(state.currentDate).toDateString());\n\n      if (!state.currentDate) {\n        // eslint-disable-next-line no-console\n        console.log('break');\n\n        return;\n      }\n\n      switch (state.formatCalendar) {\n        case FORMAT.DAY:\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            new Date(state.currentDate).getDate(),\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            new Date(state.currentDate).getDate() + 1,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          console.log('day start', new Date(state.start).toString());\n          // eslint-disable-next-line no-console\n          console.log('day end', new Date(state.end).toString());\n          break;\n\n        case FORMAT.WEEK:\n          const date = new Date(state.currentDate).getDate();\n          const dayOfWeek = new Date(state.currentDate).getDay();\n\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            dayOfWeek === 0\n              ? date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK - 7\n              : date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK,\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            (dayOfWeek === 0\n              ? date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK - 7\n              : date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK) + 7,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          console.log('week start', new Date(state.start).toDateString());\n          // eslint-disable-next-line no-console\n          console.log('week end', new Date(state.end).toDateString());\n          break;\n\n        case FORMAT.MONTH:\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            IS_MONDAY_FIRST_DAY_OF_WEEK\n            - (new Date(\n              new Date(state.currentDate).getFullYear(),\n              new Date(state.currentDate).getMonth(),\n              0,\n            )).getDay(),\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth() + 1,\n            (IS_MONDAY_FIRST_DAY_OF_WEEK\n            + 7\n            - (new Date(\n              new Date(state.currentDate).getFullYear(),\n              new Date(state.currentDate).getMonth() + 1,\n              0,\n            )).getDay()) % 7,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          console.log('start month', new Date(state.start).toString());\n          // eslint-disable-next-line no-console\n          console.log('end month', new Date(state.end).toString());\n\n          break;\n\n        case FORMAT.YEAR:\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            0,\n            1,\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear() + 1,\n            0,\n            1,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          console.log('start year', new Date(state.start).toString());\n          // eslint-disable-next-line no-console\n          console.log('end year', new Date(state.end).toString());\n          break;\n\n        default:\n      }\n    },\n    resetState: (state: IntervalState) => {\n      return { ...state, ...initialState };\n    },\n  },\n  // extraReducers: (builder) => {\n  //   builder\n  //     .addCase(getIntervalAsync.pending, (state: IntervalState) => {\n  //       state.statusLoading = 'loading';\n  //     })\n  //     .addCase(getIntervalAsync.fulfilled, (state, action) => {\n  //       state.storage.push(...action.payload);\n  //       state.statusLoading = 'idle';\n  //     })\n  //     .addCase(getIntervalAsync.rejected, (state, action) => {\n  //       state.statusLoading = 'failed';\n\n  //       // eslint-disable-next-line no-console\n  //       console.log(action);\n  //     });\n  // },\n});\n\nexport default intervalSlice.reducer;\nexport const {\n  setCurrentDate,\n  setSpecialDate,\n  setFormat,\n  setIntervalCalendar,\n  addTodo,\n  resetState,\n} = intervalSlice.actions;\n\nexport const selectTodos = (state: RootState) => state.interval.storage;\nexport const selectCurrentDate\n= (state: RootState) => state.interval.currentDate;\nexport const selectStartInterval\n= (state: RootState) => state.interval.start;\nexport const selectEndInterval\n= (state: RootState) => state.interval.end;\n\nexport const selectFormat\n= (state: RootState) => state.interval.formatCalendar;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '.';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export const WEEK = [\n  'Sunday',\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n];\n","import {\n  FunctionComponent,\n  // MouseEvent,\n  // useEffect,\n} from 'react';\nimport styled, { css } from 'styled-components';\nimport { FORMAT } from '../constants/FORMAT';\nimport { WEEK } from '../constants/WEEK';\nimport {\n  selectCurrentDate,\n  selectFormat,\n  setFormat,\n  setIntervalCalendar,\n  setSpecialDate,\n} from '../store/features/Interval/intervalSlice';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\n\ntype WrapperType = {\n  format?: string,\n  isWeekend?: boolean,\n  isNotCurrentMonth: boolean,\n  isCurrentDay: boolean;\n};\n\nconst Wrapper = styled.div<WrapperType>`\n  box-sizing: border-box;\n  padding: 0;\n  font-size: 14px;\n  cursor: pointer;\n\n  ${({ format }) => (format === FORMAT.DAY) && css`\n    height: 100vh;\n  `}\n\n  ${({ format }) => (format === FORMAT.WEEK || format === FORMAT.MONTH) && css`\n    height: 200px;\n  `}\n\n  ${({ format, isWeekend }) => (format === FORMAT.YEAR && isWeekend) && css`\n    color: red;\n  `}\n\n  ${({ isNotCurrentMonth }) => isNotCurrentMonth && css`\n    opacity: 0.4;\n  `}\n\n\n\n`;\n\nconst DayTitle = styled.div<{ isCurrentDay: boolean }>`\n  border: 1px solid transparent;\n  box-sizing: border-box;\n  padding: 10px;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\n  ${({ isCurrentDay }) => isCurrentDay && css`\n    background-color: #79c6c6;\n  `}\n`;\n\nconst DayOfWeek = styled.button<{ isWeekend: boolean }>`\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n\n ${({ isWeekend }) => {\n    if (isWeekend) {\n      return css`\n        color: #a16e73;\n        font-weight: bold;\n      `;\n    }\n\n    return '';\n  }}\n`;\n\nconst DateString = styled.p<{ format?: string }>`\n  padding: 0;\n  margin: 0;\n  ${({ format }) => format === FORMAT.YEAR && css`\n    display: block;\n    text-align: right;\n  `}\n`;\n\nconst DayListTodos = styled.div<{ format?: string }>`\n  box-sizing: border-box;\n  padding: 10px;\n\n  ${({ format }) => {\n    if (format === FORMAT.YEAR) {\n      return css`\n        display: none;\n      `;\n    }\n\n    return '';\n  }}\n`;\n\ninterface DayProps {\n  startDay: number;\n  // eslint-disable-next-line react/require-default-props\n  disabled?: boolean;\n}\n\nconst useDayHook = (value: number) => {\n  const date = new Date(value);\n  const day = date.getDate();\n  const arr = date.toDateString().split(' ');\n  const fullNameDayOfWeek = WEEK[date.getDay()];\n\n  return {\n    dayOfWeek: arr[0],\n    month: arr[1],\n    day,\n    year: arr[3],\n    fullNameDayOfWeek,\n  };\n};\n\nconst useCurrentHook = (current: number, anyDay: number) => {\n  const isCurrentYear\n  = new Date(current).getFullYear() === new Date(anyDay).getFullYear();\n\n  const isCurrentMonth\n  = new Date(current).getMonth() === new Date(anyDay).getMonth()\n  && new Date(current).getFullYear() === new Date(anyDay).getFullYear();\n\n  const isCurrentDay\n   = new Date(current).getDate() === new Date(anyDay).getDate()\n   && new Date(current).getMonth() === new Date(anyDay).getMonth()\n   && new Date(current).getFullYear() === new Date(anyDay).getFullYear();\n\n  return { isCurrentDay, isCurrentMonth, isCurrentYear };\n};\n\nexport const Day: FunctionComponent<DayProps> = ({\n  startDay,\n  disabled = false,\n}) => {\n  const dispatch = useAppDispatch();\n  const currentDate = useAppSelector(selectCurrentDate);\n  const format = useAppSelector(selectFormat);\n  const isWeekend = (new Date(startDay).getDay() === 0\n  || new Date(startDay).getDay() === 6);\n  const {\n    dayOfWeek, month, day, year, fullNameDayOfWeek,\n  } = useDayHook(startDay);\n  const {\n    isCurrentDay,\n    isCurrentMonth,\n  } = useCurrentHook(currentDate, startDay);\n\n  const isTodosToday = false;\n\n  const onDayClick = () => {\n    // eslint-disable-next-line no-console\n    console.log('Day onClick');\n\n    if (isCurrentDay && format === FORMAT.DAY) {\n      return;\n    }\n\n    if (isCurrentDay) {\n      dispatch(setFormat(FORMAT.DAY));\n      dispatch(setIntervalCalendar());\n\n      return;\n    }\n\n    if (!disabled) {\n      dispatch(setSpecialDate(startDay));\n    }\n\n    if (!disabled && !isCurrentMonth) {\n      dispatch(setIntervalCalendar());\n    }\n  };\n\n  const onWeekClick = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    let dayValue: string | undefined;\n\n    if (e.target instanceof HTMLButtonElement) {\n      dayValue = e.target.dataset.dayValue;\n    }\n\n    if (dayValue) {\n      dispatch(setSpecialDate(+dayValue));\n      dispatch(setFormat(FORMAT.WEEK));\n      dispatch(setIntervalCalendar());\n    }\n  };\n\n  if (disabled) {\n    return (\n      <div />\n    );\n  }\n\n  return (\n    <Wrapper\n      format={format}\n      isWeekend={isWeekend}\n      isNotCurrentMonth={!isCurrentMonth}\n      isCurrentDay={isCurrentDay}\n    >\n      <DayTitle\n        isCurrentDay={isCurrentDay}\n        onClick={onDayClick}\n      >\n        <DayOfWeek\n          // value={String(startDay)}\n          // name={String(startDay)}\n          // dataValue={String(startDay)}\n          isWeekend={isWeekend}\n          onClick={(e) => onWeekClick(e)}\n          data-day-value={String(startDay)}\n        >\n          {format === FORMAT.DAY && fullNameDayOfWeek}\n          {(format === FORMAT.WEEK || format === FORMAT.MONTH) && dayOfWeek}\n        </DayOfWeek>\n\n        <DateString format={format}>\n          {format === FORMAT.DAY ? `${day}/${month}/${year}` : day}\n        </DateString>\n      </DayTitle>\n\n      {(format !== FORMAT.YEAR) && (\n        <DayListTodos format={format}>\n          {isTodosToday && <p>List of TODOS:</p>}\n        </DayListTodos>\n      )}\n    </Wrapper>\n  );\n};\n","import { FunctionComponent, useRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport { FORMAT } from '../constants/FORMAT';\nimport { MONTH_NAMES } from '../constants/MONTH';\nimport {\n  IS_MONDAY_FIRST_DAY_OF_WEEK,\n  selectCurrentDate,\n  selectFormat,\n  setFormat,\n  setIntervalCalendar,\n  setSpecialDate,\n} from '../store/features/Interval/intervalSlice';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { Day } from './Day';\n\nconst Wrapper = styled.div<{ format?: string }>`\n\n\n  ${({ format }) => {\n    if (format === FORMAT.DAY) {\n      return css`\n        display: block;\n      `;\n    }\n\n    if (format === FORMAT.YEAR) {\n      return css`\n        /* max-width: 200px; */\n      `;\n    }\n\n    return '';\n  }}\n`;\n\nconst MonthTitle = styled.div<{ format?: string }>`\n\n  cursor: pointer;\n\n  ${({ format }) => (format === FORMAT.DAY) && css`\n    display: none;\n  `}\n\n  ${({ format }) => (format === FORMAT.YEAR) && css`\n    padding: 10px;\n  `}\n\n  & button {\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n  }\n`;\n\nconst MonthContainer = styled.div<{ format?: string }>`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n\n  ${({ format }) => (format === FORMAT.DAY) && css`\n    display: block;\n  `}\n`;\n\ninterface MonthProps {\n  interval: number[];\n}\n\nexport const Month: FunctionComponent<MonthProps> = ({ interval }) => {\n  const dispatch = useAppDispatch();\n  const format = useAppSelector(selectFormat);\n  const currentDate = useAppSelector(selectCurrentDate);\n  const currentMonthName = useRef(new Date(currentDate).getMonth());\n  const monthName = useRef(new Date(interval[0]).getMonth());\n  const countEmptyItem = useRef((new Date(interval[0]).getDay()\n  + 7 - IS_MONDAY_FIRST_DAY_OF_WEEK) % 7);\n\n  const empty = [];\n\n  for (let i = 0; i < countEmptyItem.current; i += 1) {\n    empty.push(-i);\n  }\n\n  const onMonthHandler = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    if (format === FORMAT.MONTH) {\n      return;\n    }\n\n    let monthValue: string | undefined;\n\n    if (e.target instanceof HTMLButtonElement) {\n      monthValue = e.target.dataset.monthValue;\n    }\n\n    if (monthValue) {\n      dispatch(setSpecialDate(+monthValue));\n      dispatch(setFormat(FORMAT.MONTH));\n      dispatch(setIntervalCalendar());\n    }\n  };\n\n  return (\n    <Wrapper format={format}>\n      <MonthTitle\n        format={format}\n      >\n        <button\n          type=\"button\"\n          onClick={e => onMonthHandler(e)}\n          data-month-value={String(interval[0])}\n        >\n          {format === FORMAT.YEAR && MONTH_NAMES[monthName.current]}\n          {format === FORMAT.MONTH && MONTH_NAMES[currentMonthName.current]}\n        </button>\n      </MonthTitle>\n\n      <MonthContainer\n        format={format}\n      >\n        {empty.map((emptyItem: number) => (\n          <Day key={emptyItem} startDay={emptyItem} disabled />\n        ))}\n\n        {interval.map((day: number) => (\n          <Day key={day} startDay={day} />\n        ))}\n      </MonthContainer>\n    </Wrapper>\n  );\n};\n","export const divideYear = (interval: number[]) => {\n  const year = [];\n  let i = 0;\n\n  while (i < interval.length) {\n    const currentMonth = new Date(interval[i]).getMonth();\n    const month = [];\n\n    while (currentMonth === new Date(interval[i]).getMonth()) {\n      month.push(interval[i]);\n\n      i += 1;\n    }\n\n    year.push(month);\n  }\n\n  return year;\n};\n","import { FunctionComponent, useRef } from 'react';\nimport styled from 'styled-components';\nimport { divideYear } from '../helpers/divideYear';\nimport { Month } from './Month';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 2rem;\n  min-width: 1100px;\n`;\n\ninterface YearProps {\n  interval: number[];\n}\n\nexport const Year: FunctionComponent<YearProps> = ({ interval }) => {\n  const prepared = useRef(divideYear(interval));\n\n  return (\n    <Wrapper>\n      {prepared.current.map((month: number[]) => (\n        <Month key={month[0]} interval={month} />\n      ))}\n    </Wrapper>\n  );\n};\n","import { FunctionComponent, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { Month } from '../../components/Month';\nimport { buildInterval } from '../../helpers/buildInterval';\nimport {\n  selectCurrentDate,\n  selectEndInterval,\n  selectFormat,\n  selectStartInterval,\n  setCurrentDate,\n  setFormat,\n  setIntervalCalendar,\n} from '../../store/features/Interval/intervalSlice';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { FORMAT } from '../../constants/FORMAT';\nimport { Year } from '../../components/Year';\nimport { Day } from '../../components/Day';\n\nconst Wrapper = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nexport const HomePage: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const currentDate = useAppSelector(selectCurrentDate);\n  const start = useAppSelector(selectStartInterval);\n  const end = useAppSelector(selectEndInterval);\n  const interval = buildInterval(start, end);\n  const format = useAppSelector(selectFormat);\n\n  useEffect(() => {\n    if (!currentDate) {\n      dispatch(setCurrentDate());\n      dispatch(setFormat(FORMAT.MONTH));\n    }\n\n    // dispatch(setSpecialDate(new Date(2023, 2, 19).valueOf()));\n    dispatch(setIntervalCalendar());\n  }, []);\n\n  // eslint-disable-next-line no-console\n  // console.log('HomePage//',\n  //   new Date(start).toDateString(),\n  //   '-----------',\n  //   new Date(end).toDateString());\n\n  return (\n    <Wrapper>\n      {format === FORMAT.YEAR && <Year interval={interval} />}\n      {(format === FORMAT.MONTH || format === FORMAT.WEEK)\n      && <Month interval={interval} />}\n      {format === FORMAT.DAY && <Day startDay={interval[0]} />}\n    </Wrapper>\n  );\n};\n","export function buildInterval(start: number, end: number) {\n  const interval = [];\n  let day = start;\n\n  // eslint-disable-next-line no-console\n  // console.log('buildInterval//',\n  //   new Date(start).toDateString(),\n  //   '-----------',\n  //   new Date(end).toDateString());\n\n  while (day < end) {\n    interval.push(day);\n\n    day = new Date(\n      new Date(day).getFullYear(),\n      new Date(day).getMonth(),\n      new Date(day).getDate() + 1,\n    ).valueOf();\n  }\n\n  return interval;\n}\n","import axios from 'axios';\n\nconst baseURL = 'https://jsonplaceholder.typicode.com';\n\nconst instance = axios.create({\n  baseURL,\n});\n\ntype FetchData = {\n};\n\nexport const client = {\n  async get<T>(url: string) {\n    const response = await instance.get<T>(url);\n\n    // eslint-disable-next-line no-console\n    console.log('get', baseURL + url);\n\n    return response.data;\n  },\n\n  async post<T>(url: string, data: FetchData) {\n    const response = await instance.post<T>(url, data);\n\n    return response.data;\n  },\n\n  async patch<T>(url: string, data: FetchData) {\n    const response = await instance.patch<T>(url, data);\n\n    return response.data;\n  },\n\n  async delete(url: string) {\n    return instance.delete(url);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { getAllPosts } from '../../../api/post';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../..';\nimport { Post } from '../../../type/Post';\n\nexport interface PostsState {\n  storage: Post[];\n  statusLoading: 'idle' | 'loading' | 'failed';\n  error: unknown;\n}\n\nconst initialState: PostsState = {\n  storage: [],\n  statusLoading: 'idle',\n  error: null,\n};\n\nexport const getPostsAsync = createAsyncThunk('posts/fetchPosts', async () => {\n  const response: Post[] = await getAllPosts();\n\n  // eslint-disable-next-line no-console\n  console.log(response);\n\n  return response;\n});\n\nconst postsSlice = createSlice({\n  name: 'post',\n  initialState,\n  reducers: {\n    addPosts: (state: PostsState, action: PayloadAction<Post[]>) => {\n      state.storage.push(...action.payload);\n    },\n    setStatus: (\n      state: PostsState,\n      action: PayloadAction<'idle' | 'loading' | 'failed'>,\n    ) => {\n      state.statusLoading = action.payload;\n    },\n    setError: (state: PostsState, action: PayloadAction<unknown>) => {\n      state.error = action.payload;\n      state.statusLoading = 'failed';\n    },\n    resetState: (state: PostsState) => {\n      return { ...state, ...initialState };\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getPostsAsync.pending, (state: PostsState) => {\n        state.statusLoading = 'loading';\n      })\n      .addCase(getPostsAsync.fulfilled, (state, action) => {\n        state.storage.push(...action.payload);\n        state.statusLoading = 'idle';\n      })\n      .addCase(getPostsAsync.rejected, (state, action) => {\n        state.statusLoading = 'failed';\n\n        // eslint-disable-next-line no-console\n        console.log(action);\n      });\n  },\n});\n\nexport default postsSlice.reducer;\nexport const {\n  addPosts,\n  setStatus,\n  setError,\n  resetState,\n} = postsSlice.actions;\n\nexport const selectPosts = (state: RootState) => state.posts.storage;\nexport const selectPostStatusLoading\n= (state: RootState) => state.posts.statusLoading;\nexport const selectPostError = (state: RootState) => state.posts.error;\n","import { client } from '../utils/axiosClient';\nimport { Post } from '../type/Post';\n\nexport const getAllPosts = () => client.get<Post[]>('/posts/');\nexport const getPostById = (postId: number) => client.get<Post[]>(`/posts/${postId}`);\n","import { FunctionComponent } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { resetState, selectPosts } from '../../store/features/Posts/postsSlice';\n\nimport './PostPage.scss';\n\nexport const PostPage: FunctionComponent = () => {\n  const { id } = useParams();\n\n  // eslint-disable-next-line no-console\n  console.log(id);\n\n  const posts = useAppSelector(selectPosts);\n  const dispatch = useAppDispatch();\n\n  dispatch(resetState());\n\n  const post = posts.find(p => String(p.id) === String(id));\n\n  return (\n    <div\n      className=\"PostPage\"\n    >\n      <Link\n        to=\"/\"\n        className=\"PostPage__Link\"\n      >\n        Back\n      </Link>\n\n      {post ? (\n        <div>\n          <h1>{`PostPage: ${post.title}`}</h1>\n          <p>{post.body}</p>\n        </div>\n      ) : (\n        <>\n          post doesn&nbsp;t exist\n        </>\n      )}\n    </div>\n  );\n};\n","import {\n  FunctionComponent,\n} from 'react';\nimport styled from 'styled-components';\nimport { FORMAT } from '../constants/FORMAT';\nimport { MONTH_NAMES } from '../constants/MONTH';\nimport {\n  selectCurrentDate,\n  selectFormat,\n  setFormat,\n  setIntervalCalendar,\n} from '../store/features/Interval/intervalSlice';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\n// import { FormatKeys, FormatValue } from '../type/FormatType';\n\nconst Wrapper = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Back = styled.div<{ format: string }>`\n  cursor: pointer;\n`;\n\nexport const Controls: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const currentDate = useAppSelector(selectCurrentDate);\n  const format = useAppSelector(selectFormat);\n  const fullNameMonth = MONTH_NAMES[new Date(currentDate).getMonth()];\n  const fullYear = new Date(currentDate).getFullYear();\n\n  // const onChange = (e:React.ChangeEvent<HTMLSelectElement>) => {\n  //   const formatValue = e.target.value as FormatValue;\n\n  //   dispatch(setFormat(formatValue));\n  //   dispatch(setIntervalCalendar());\n  // };\n\n  const onGoToPrevFormat = () => {\n    // eslint-disable-next-line no-console\n    console.log('onGoToPrevFormat');\n\n    switch (format) {\n      case FORMAT.DAY:\n      case FORMAT.WEEK:\n        dispatch(setFormat(FORMAT.MONTH));\n        break;\n\n      case FORMAT.MONTH:\n        dispatch(setFormat(FORMAT.YEAR));\n        break;\n\n      default:\n    }\n\n    dispatch(setIntervalCalendar());\n  };\n\n  return (\n    <Wrapper>\n      <Back\n        format={format}\n        onClick={onGoToPrevFormat}\n      >\n        {/* {new Date(currentDate).toDateString()} */}\n        {(format === FORMAT.DAY || format === FORMAT.WEEK) && fullNameMonth}\n        {format === FORMAT.MONTH && fullYear}\n      </Back>\n\n      {/* <select\n        value={format}\n        onChange={onChange}\n      >\n        {Object.keys(FORMAT).map((item) => {\n          const formatKey = item as FormatKeys;\n\n          return (\n            <option\n              value={FORMAT[formatKey]}\n              key={item}\n            >\n              {FORMAT[formatKey]}\n            </option>\n          );\n        })}\n      </select> */}\n    </Wrapper>\n  );\n};\n","import { createHashRouter, Outlet } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { NotFound } from './pages/NotFound';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { PostPage } from './pages/PostPage/PostPage';\nimport { Controls } from './components/Controls';\n\nconst Wrapper = styled.div`\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 100vh;\n  `;\n\nconst Header = styled.header`\n  max-width: 1200px;\n  margin: 0 auto;\n  text-align: center;\n  margin-bottom: 1rem;\n`;\n\nconst Main = styled.main`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nfunction App() {\n  return (\n    <Wrapper>\n      <Header>\n        <h1>Calendar</h1>\n        <Controls />\n      </Header>\n\n      <Main>\n        <Outlet />\n      </Main>\n    </Wrapper>\n  );\n}\n\nexport const router = createHashRouter([\n  {\n    path: '/',\n    element: <App />,\n    errorElement: <NotFound />,\n    id: 'root',\n    children: [\n      {\n        path: '/',\n        element: <HomePage />,\n        id: 'homepage',\n        errorElement: <>Error on Homepage</>,\n      },\n      {\n        path: '/post/:id',\n        element: <PostPage />,\n        errorElement: <>Error on PostPage</>,\n      },\n    ],\n  },\n]);\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n// eslint-disable-next-line import/no-cycle\nimport postsReducer from './features/Posts/postsSlice';\n// eslint-disable-next-line import/no-cycle\nimport intervalSlice from './features/Interval/intervalSlice';\n\nconst rootReducer = combineReducers({\n  posts: postsReducer,\n  interval: intervalSlice,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['interval'],\n  // blacklist: ['interval'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [\n        FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER,\n        'posts',\n      ],\n    },\n  }),\n});\n\nexport default store;\n\nexport const persistor = persistStore(store);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n\n/* eslint-disable @typescript-eslint/indent */\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { RouterProvider } from 'react-router-dom';\nimport { router } from './App';\nimport store, { persistor } from './store';\n\nimport './index.css';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement,\n);\n\nroot.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <RouterProvider router={router} />\n    </PersistGate>\n  </Provider>,\n);\n"],"sourceRoot":""}