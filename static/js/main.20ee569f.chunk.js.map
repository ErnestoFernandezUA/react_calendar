{"version":3,"sources":["pages/NotFound.tsx","type/format.ts","store/features/Interval/intervalSlice.ts","store/hooks.ts","pages/HomePage/HomePage.tsx","utils/axiosClient.ts","store/features/Posts/postsSlice.ts","api/post.ts","pages/PostPage/PostPage.tsx","App.tsx","store/index.ts","index.tsx"],"names":["NotFound","INTERVAL","initialState","currentDate","start","end","storage","formatCalendar","intervalSlice","createAsyncThunk","a","createSlice","name","reducers","setCurrentDate","state","Date","valueOf","setSpecialDate","action","payload","addTodo","push","setFormat","setIntervalCalendar","console","log","getFullYear","getMonth","getDate","getDay","IS_MONDAY_FIRST_DAY_OF_WEEK","toString","resetState","actions","selectCurrentDate","interval","useAppDispatch","useDispatch","useAppSelector","useSelector","localStorage","clear","HomePage","dispatch","useEffect","className","baseURL","instance","axios","create","client","url","get","response","data","statusLoading","error","getPostsAsync","postsSlice","addPosts","setStatus","setError","extraReducers","builder","addCase","pending","fulfilled","rejected","selectPosts","posts","PostPage","id","useParams","post","find","p","String","to","title","body","App","router","createHashRouter","path","element","errorElement","children","rootReducer","combineReducers","postsReducer","persistConfig","key","whitelist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","createRoot","document","getElementById","render","loading"],"mappings":"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","file":"static/js/main.20ee569f.chunk.js","sourcesContent":["import { FunctionComponent } from 'react';\n\nexport const NotFound: FunctionComponent = () => {\n  return (\n    <div>\n      This page doesn&nbsp;t exist.\n    </div>\n  );\n};\n","export type Interval = 'day' | 'week' | 'month' | 'year';\n\nexport const INTERVAL: { [key: string]: Interval } = {\n  DAY: 'day',\n  WEEK: 'week',\n  MONTH: 'month',\n  YEAR: 'year',\n};\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../..';\nimport { INTERVAL, Interval } from '../../../type/format';\nimport { Todo } from '../../../type/Todo';\n\nconst IS_MONDAY_FIRST_DAY_OF_WEEK = 1;\n\nexport interface IntervalState {\n  currentDate: number;\n  start: number;\n  end: number;\n\n  storage: Todo[];\n  formatCalendar: Interval;\n}\n\nconst initialState: IntervalState = {\n  currentDate: 0,\n  start: 0,\n  end: 0,\n\n  storage: [],\n  formatCalendar: 'month',\n};\n\nexport const getIntervalAsync = createAsyncThunk(\n  'Interval/fetchInterval',\n  async () => {\n    // const response: Post[] = await getAllInterval();\n\n    // eslint-disable-next-line no-console\n    // console.log(response);\n\n    // return response;\n  },\n);\n\nconst intervalSlice = createSlice({\n  name: 'post',\n  initialState,\n  reducers: {\n    setCurrentDate: (\n      state: IntervalState,\n    ) => {\n      state.currentDate = (new Date()).valueOf();\n    },\n    setSpecialDate: (\n      state: IntervalState,\n      action,\n    ) => {\n      state.currentDate = new Date(action.payload).valueOf();\n    },\n    addTodo: (state: IntervalState, action: PayloadAction<Todo>) => {\n      state.storage.push(action.payload);\n    },\n    setFormat: (\n      state: IntervalState,\n      action: PayloadAction<Interval>,\n    ) => {\n      state.formatCalendar = action.payload;\n    },\n    setIntervalCalendar: (state: IntervalState) => {\n      // eslint-disable-next-line no-console\n      console.log('setIntervalCalendar', state.formatCalendar);\n\n      if (!state.currentDate) {\n        // eslint-disable-next-line no-console\n        console.log('break');\n\n        return;\n      }\n\n      switch (state.formatCalendar) {\n        case INTERVAL.DAY:\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            new Date(state.currentDate).getDate(),\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            new Date(state.currentDate).getDate() + 1,\n          ).valueOf();\n          break;\n\n        case INTERVAL.WEEK:\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            new Date(state.currentDate).getDate()\n            - new Date(state.currentDate).getDay()\n            + IS_MONDAY_FIRST_DAY_OF_WEEK,\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            new Date(state.currentDate).getDate()\n            - new Date(state.currentDate).getDay()\n            + IS_MONDAY_FIRST_DAY_OF_WEEK\n            + 7,\n          ).valueOf();\n\n          // // eslint-disable-next-line no-console\n          // console.log('week start', new Date(state.start).toString());\n          // // eslint-disable-next-line no-console\n          // console.log('week end', new Date(state.end).toString());\n          break;\n\n        case INTERVAL.MONTH:\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            IS_MONDAY_FIRST_DAY_OF_WEEK\n            - (new Date(\n              new Date(state.currentDate).getFullYear(),\n              new Date(state.currentDate).getMonth(),\n              0,\n            )).getDay(),\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth() + 1,\n            (IS_MONDAY_FIRST_DAY_OF_WEEK\n            + 7\n            - (new Date(\n              new Date(state.currentDate).getFullYear(),\n              new Date(state.currentDate).getMonth() + 1,\n              0,\n            )).getDay()) % 7,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          // console.log('start month', new Date(state.start).toString());\n          // eslint-disable-next-line no-console\n          // console.log('end month', new Date(state.end).toString());\n\n          break;\n\n        case INTERVAL.YEAR:\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            0,\n            1,\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear() + 1,\n            0,\n            1,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          console.log('start year', new Date(state.start).toString());\n          // eslint-disable-next-line no-console\n          console.log('end year', new Date(state.end).toString());\n          break;\n\n        default:\n      }\n    },\n    resetState: (state: IntervalState) => {\n      return { ...state, ...initialState };\n    },\n  },\n  // extraReducers: (builder) => {\n  //   builder\n  //     .addCase(getIntervalAsync.pending, (state: IntervalState) => {\n  //       state.statusLoading = 'loading';\n  //     })\n  //     .addCase(getIntervalAsync.fulfilled, (state, action) => {\n  //       state.storage.push(...action.payload);\n  //       state.statusLoading = 'idle';\n  //     })\n  //     .addCase(getIntervalAsync.rejected, (state, action) => {\n  //       state.statusLoading = 'failed';\n\n  //       // eslint-disable-next-line no-console\n  //       console.log(action);\n  //     });\n  // },\n});\n\nexport default intervalSlice.reducer;\nexport const {\n  setCurrentDate,\n  setSpecialDate,\n  setFormat,\n  setIntervalCalendar,\n  addTodo,\n  resetState,\n} = intervalSlice.actions;\n\nexport const selectTodos = (state: RootState) => state.interval.storage;\nexport const selectCurrentDate\n= (state: RootState) => state.interval.currentDate;\nexport const selectIntervalFormat\n= (state: RootState) => state.interval.formatCalendar;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '.';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { FunctionComponent, useEffect } from 'react';\nimport {\n  selectCurrentDate,\n  setCurrentDate,\n  setFormat,\n  setIntervalCalendar,\n  setSpecialDate,\n} from '../../store/features/Interval/intervalSlice';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { INTERVAL } from '../../type/format';\n\nimport './HomePage.scss';\n\nlocalStorage.clear();\n\nexport const HomePage: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const currentDate = useAppSelector(selectCurrentDate);\n\n  useEffect(() => {\n    if (!currentDate) {\n      dispatch(setCurrentDate());\n    }\n\n    dispatch(setSpecialDate(new Date(2023, 0, 1).valueOf()));\n    dispatch(setFormat(INTERVAL.WEEK));\n    dispatch(setIntervalCalendar());\n  }, []);\n\n  return (\n    <div className=\"HomePage\">\n      <h2>HomePage</h2>\n      <p>{new Date(currentDate).toString()}</p>\n\n    </div>\n  );\n};\n","import axios from 'axios';\n\nconst baseURL = 'https://jsonplaceholder.typicode.com';\n\nconst instance = axios.create({\n  baseURL,\n});\n\ntype FetchData = {\n};\n\nexport const client = {\n  async get<T>(url: string) {\n    const response = await instance.get<T>(url);\n\n    // eslint-disable-next-line no-console\n    console.log('get', baseURL + url);\n\n    return response.data;\n  },\n\n  async post<T>(url: string, data: FetchData) {\n    const response = await instance.post<T>(url, data);\n\n    return response.data;\n  },\n\n  async patch<T>(url: string, data: FetchData) {\n    const response = await instance.patch<T>(url, data);\n\n    return response.data;\n  },\n\n  async delete(url: string) {\n    return instance.delete(url);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { getAllPosts } from '../../../api/post';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../..';\nimport { Post } from '../../../type/Post';\n\nexport interface PostsState {\n  storage: Post[];\n  statusLoading: 'idle' | 'loading' | 'failed';\n  error: unknown;\n}\n\nconst initialState: PostsState = {\n  storage: [],\n  statusLoading: 'idle',\n  error: null,\n};\n\nexport const getPostsAsync = createAsyncThunk('posts/fetchPosts', async () => {\n  const response: Post[] = await getAllPosts();\n\n  // eslint-disable-next-line no-console\n  console.log(response);\n\n  return response;\n});\n\nconst postsSlice = createSlice({\n  name: 'post',\n  initialState,\n  reducers: {\n    addPosts: (state: PostsState, action: PayloadAction<Post[]>) => {\n      state.storage.push(...action.payload);\n    },\n    setStatus: (\n      state: PostsState,\n      action: PayloadAction<'idle' | 'loading' | 'failed'>,\n    ) => {\n      state.statusLoading = action.payload;\n    },\n    setError: (state: PostsState, action: PayloadAction<unknown>) => {\n      state.error = action.payload;\n      state.statusLoading = 'failed';\n    },\n    resetState: (state: PostsState) => {\n      return { ...state, ...initialState };\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getPostsAsync.pending, (state: PostsState) => {\n        state.statusLoading = 'loading';\n      })\n      .addCase(getPostsAsync.fulfilled, (state, action) => {\n        state.storage.push(...action.payload);\n        state.statusLoading = 'idle';\n      })\n      .addCase(getPostsAsync.rejected, (state, action) => {\n        state.statusLoading = 'failed';\n\n        // eslint-disable-next-line no-console\n        console.log(action);\n      });\n  },\n});\n\nexport default postsSlice.reducer;\nexport const {\n  addPosts,\n  setStatus,\n  setError,\n  resetState,\n} = postsSlice.actions;\n\nexport const selectPosts = (state: RootState) => state.posts.storage;\nexport const selectPostStatusLoading\n= (state: RootState) => state.posts.statusLoading;\nexport const selectPostError = (state: RootState) => state.posts.error;\n","import { client } from '../utils/axiosClient';\nimport { Post } from '../type/Post';\n\nexport const getAllPosts = () => client.get<Post[]>('/posts/');\nexport const getPostById = (postId: number) => client.get<Post[]>(`/posts/${postId}`);\n","import { FunctionComponent } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { resetState, selectPosts } from '../../store/features/Posts/postsSlice';\n\nimport './PostPage.scss';\n\nexport const PostPage: FunctionComponent = () => {\n  const { id } = useParams();\n\n  // eslint-disable-next-line no-console\n  console.log(id);\n\n  const posts = useAppSelector(selectPosts);\n  const dispatch = useAppDispatch();\n\n  dispatch(resetState());\n\n  const post = posts.find(p => String(p.id) === String(id));\n\n  return (\n    <div\n      className=\"PostPage\"\n    >\n      <Link\n        to=\"/\"\n        className=\"PostPage__Link\"\n      >\n        Back\n      </Link>\n\n      {post ? (\n        <div>\n          <h1>{`PostPage: ${post.title}`}</h1>\n          <p>{post.body}</p>\n        </div>\n      ) : (\n        <>\n          post doesn&nbsp;t exist\n        </>\n      )}\n    </div>\n  );\n};\n","import { createHashRouter, Outlet } from 'react-router-dom';\nimport { NotFound } from './pages/NotFound';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { PostPage } from './pages/PostPage/PostPage';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App__Header\">\n        <h1>Calendar</h1>\n      </header>\n\n      <main className=\"App__Container\">\n        <Outlet />\n      </main>\n    </div>\n  );\n}\n\nexport const router = createHashRouter([\n  {\n    path: '/',\n    element: <App />,\n    errorElement: <NotFound />,\n    id: 'root',\n    children: [\n      {\n        path: '/',\n        element: <HomePage />,\n        id: 'homepage',\n        errorElement: <>Error on Homepage</>,\n      },\n      {\n        path: '/post/:id',\n        element: <PostPage />,\n        errorElement: <>Error on PostPage</>,\n      },\n    ],\n  },\n]);\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n// eslint-disable-next-line import/no-cycle\nimport postsReducer from './features/Posts/postsSlice';\n// eslint-disable-next-line import/no-cycle\nimport intervalSlice from './features/Interval/intervalSlice';\n\nconst rootReducer = combineReducers({\n  posts: postsReducer,\n  interval: intervalSlice,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['interval'],\n  // blacklist: ['interval'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [\n        FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER,\n        'posts',\n      ],\n    },\n  }),\n});\n\nexport default store;\n\nexport const persistor = persistStore(store);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n\n/* eslint-disable @typescript-eslint/indent */\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { RouterProvider } from 'react-router-dom';\nimport { router } from './App';\nimport store, { persistor } from './store';\nimport './index.css';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement,\n);\n\nroot.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <RouterProvider router={router} />\n    </PersistGate>\n  </Provider>,\n);\n"],"sourceRoot":""}