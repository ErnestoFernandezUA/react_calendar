{"version":3,"sources":["pages/NotFound.tsx","constants/FORMAT.ts","constants/MONTH.ts","store/features/Interval/intervalSlice.ts","store/hooks.ts","constants/WEEK.ts","store/features/Todo/todoSlice.ts","components/Day.tsx","customHooks/useDayHook.ts","customHooks/useCurrentHook.ts","components/Month.tsx","helpers/buildInterval.ts","helpers/divideYear.ts","components/Year.tsx","pages/HomePage/HomePage.tsx","utils/axiosClient.ts","store/features/Posts/postsSlice.ts","api/post.ts","pages/PostPage/PostPage.tsx","constants/POPUP.ts","store/features/Controls/controlsSlice.ts","constants/MOVE.ts","components/ArrowNavigator.tsx","UI/Button.tsx","helpers/handleClickOutside.tsx","UI/DatePicker/DatePicker.Container.tsx","helpers/buildArrayOfYears.ts","helpers/buildArrOfMonths.ts","helpers/buildArrOfDays.ts","UI/DatePicker/DatePicker.tsx","constants/COLOR.ts","constants/FORM_DATA.ts","UI/TimePicker/TimePicker.tsx","UI/Form/Form.Container.tsx","UI/Form/Form.tsx","components/Controls.tsx","App.tsx","store/index.ts","index.tsx"],"names":["NotFound","FORMAT","MONTH_NAMES","MONTH_NAMES_CUT","initialState","currentDate","start","end","storage","formatCalendar","intervalSlice","createAsyncThunk","a","createSlice","name","reducers","setCurrentDate","state","Date","valueOf","setSpecialDate","action","payload","setFormat","console","log","navigateMonth","getFullYear","getMonth","Number","getDate","navigateYear","setIntervalCalendar","date","dayOfWeek","getDay","IS_MONDAY_FIRST_DAY_OF_WEEK","warn","addTodo","push","resetState","actions","selectCurrentDate","interval","selectStartInterval","selectEndInterval","selectFormat","useAppDispatch","useDispatch","useAppSelector","useSelector","WEEK","statusLoading","error","getTodos","delay","Promise","resolve","setTimeout","todos","getTodosAsync","response","todosSlice","setStatus","setError","extraReducers","builder","addCase","pending","fulfilled","rejected","selectTodos","Wrapper","styled","div","format","css","isWeekend","isNotCurrentMonth","isCurrentDay","DayTitle","DayOfWeek","button","DateString","p","DayListTodos","Day","startDay","disabled","dispatch","value","day","arr","toDateString","split","fullNameDayOfWeek","month","year","useDayHook","current","anyDay","isCurrentYear","isCurrentMonth","useCurrentHook","preparedTodos","filter","todo","time","isTodosToday","length","onClick","e","dayValue","stopPropagation","target","HTMLButtonElement","dataset","onWeekClick","String","map","title","description","MonthTitle","MonthContainer","Month","monthName","useRef","countEmptyItem","empty","i","type","monthValue","onMonthHandler","emptyItem","buildInterval","Year","prepared","currentMonth","divideYear","HomePage","useEffect","baseURL","instance","axios","create","client","url","get","data","getPostsAsync","postsSlice","addPosts","selectPosts","posts","PostPage","id","useParams","post","find","className","to","body","POPUP","popup","isShowDatePicker","isShowAddItem","isShowDatePickerForm","controlSlice","switchPopupInForm","switchPopup","closeAllPopup","selectIsShowDatePicker","control","selectIsShowAddItem","MOVE","Arrow","Value","ArrowNavigator","fullNameMonth","fullYear","onNavigateHandler","currentTarget","Button","handleClickOutside","event","refControl","refContainer","onShowHandler","contains","Years","Months","Days","DatePickerContainer","onChangeDate","datePickerControlRef","onShowDatePickerHandler","useState","arrOfYears","setArrOfYears","arrOfMonths","setArrOfMonths","arrOfDays","setArrOfDays","datePickerContainerRef","document","addEventListener","removeEventListener","years","toString","buildArrayOfYears","onYearHandler","currentYear","arrOfMonth","label","buildArrOfMonths","startMonth","values","buildArrOfDays","ref","y","m","d","onDayHandler","DatePickerTitle","DatePickerButton","DatePicker","isShowDatePickerContainer","controlRef","size","COLOR","URGENT","NORMAL","IMPORTANT","FORM_DATA","Hours","Minutes","TimePicker","memo","onChangeTime","toTimeString","onHourHandler","getHours","getMinutes","onMinutesHandler","hours","useMemo","slice","minutes","Form","form","FormItem","FormContainer","buttonRef","onShowFormHandler","color","setValue","setIsShowDatePickerContainer","formRef","handleChange","useCallback","prevValue","newDate","newTime","dateValue","timeValue","onSubmit","preventDefault","addTodoItem","todoId","htmlFor","onChange","placeholder","prev","defaultValue","Object","keys","item","isFormOpen","Back","ControlsNavigate","Controls","Header","header","Main","main","App","router","createHashRouter","path","element","errorElement","children","rootReducer","combineReducers","postsReducer","controlsSlice","persistConfig","key","whitelist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","createRoot","getElementById","render","loading"],"mappings":"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","file":"static/js/main.69af59cb.chunk.js","sourcesContent":["import { FunctionComponent } from 'react';\n\nexport const NotFound: FunctionComponent = () => {\n  return (\n    <div>\n      This page doesn&nbsp;t exist.\n    </div>\n  );\n};\n","import { FormatKeys, FormatValue } from '../type/Format';\n\nexport const FORMAT: { [key in FormatKeys]: FormatValue } = {\n  DAY: 'day',\n  WEEK: 'week',\n  MONTH: 'month',\n  YEAR: 'year',\n};\n","export const MONTH_NAMES = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport const MONTH_NAMES_CUT = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n","/* eslint-disable no-case-declarations */\n/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../..';\nimport { FORMAT } from '../../../constants/FORMAT';\nimport { FormatValue } from '../../../type/Format';\nimport { Todo } from '../../../type/Todo';\n\nexport const IS_MONDAY_FIRST_DAY_OF_WEEK = 1;\n\nexport interface IntervalState {\n  currentDate: number;\n  start: number;\n  end: number;\n\n  storage: Todo[];\n  formatCalendar: FormatValue;\n}\n\nconst initialState: IntervalState = {\n  currentDate: 0,\n  start: 0,\n  end: 0,\n\n  storage: [],\n  formatCalendar: FORMAT.MONTH,\n};\n\nexport const getIntervalAsync = createAsyncThunk(\n  'Interval/fetchInterval',\n  async () => {\n    // const response: Post[] = await getAllInterval();\n\n    // eslint-disable-next-line no-console\n    // console.log(response);\n\n    // return response;\n  },\n);\n\nconst intervalSlice = createSlice({\n  name: 'interval',\n  initialState,\n  reducers: {\n    setCurrentDate: (\n      state: IntervalState,\n    ) => {\n      state.currentDate = (new Date()).valueOf();\n    },\n    setSpecialDate: (\n      state: IntervalState,\n      action,\n    ) => {\n      state.currentDate = new Date(action.payload).valueOf();\n    },\n    setFormat: (\n      state: IntervalState,\n      action: PayloadAction<FormatValue>,\n    ) => {\n      state.formatCalendar = action.payload;\n\n      // eslint-disable-next-line no-console\n      console.log('setFormat', state.formatCalendar);\n    },\n    navigateMonth: (\n      state: IntervalState,\n      action: PayloadAction<string>,\n    ) => {\n      // eslint-disable-next-line no-console\n      console.log('navigateMonth', action.payload);\n\n      state.currentDate = new Date(\n        new Date(state.currentDate).getFullYear(),\n        new Date(state.currentDate).getMonth()\n        + Number(action.payload),\n        new Date(state.currentDate).getDate(),\n      ).valueOf();\n    },\n    navigateYear: (\n      state: IntervalState,\n      action: PayloadAction<string>,\n    ) => {\n      // eslint-disable-next-line no-console\n      console.log('navigateYear', action.payload);\n\n      state.currentDate = new Date(\n        new Date(state.currentDate).getFullYear()\n        + Number(action.payload),\n        new Date(state.currentDate).getMonth(),\n        new Date(state.currentDate).getDate(),\n      ).valueOf();\n    },\n    setIntervalCalendar: (state: IntervalState) => {\n      // eslint-disable-next-line no-console\n      // console.log('setIntervalCalendar//',\n      //   'format calendar:', state.formatCalendar,\n      //   'current date:', new Date(state.currentDate).toDateString());\n\n      if (!state.currentDate) {\n        // eslint-disable-next-line no-console\n        console.warn('no currentDate in IntervalSlice');\n\n        return;\n      }\n\n      switch (state.formatCalendar) {\n        case FORMAT.DAY:\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            new Date(state.currentDate).getDate(),\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            new Date(state.currentDate).getDate() + 1,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          // console.log('day start', new Date(state.start).toString());\n          // eslint-disable-next-line no-console\n          // console.log('day end', new Date(state.end).toString());\n          break;\n\n        case FORMAT.WEEK:\n          const date = new Date(state.currentDate).getDate();\n          const dayOfWeek = new Date(state.currentDate).getDay();\n\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            dayOfWeek === 0\n              ? date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK - 7\n              : date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK,\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            (dayOfWeek === 0\n              ? date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK - 7\n              : date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK) + 7,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          // console.log('week start', new Date(state.start).toDateString());\n          // eslint-disable-next-line no-console\n          // console.log('week end', new Date(state.end).toDateString());\n          break;\n\n        case FORMAT.MONTH:\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            IS_MONDAY_FIRST_DAY_OF_WEEK\n            - (new Date(\n              new Date(state.currentDate).getFullYear(),\n              new Date(state.currentDate).getMonth(),\n              0,\n            )).getDay(),\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth() + 1,\n            (IS_MONDAY_FIRST_DAY_OF_WEEK\n            + 7\n            - (new Date(\n              new Date(state.currentDate).getFullYear(),\n              new Date(state.currentDate).getMonth() + 1,\n              0,\n            )).getDay()) % 7,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          // console.log('start month', new Date(state.start).toString());\n          // eslint-disable-next-line no-console\n          // console.log('end month', new Date(state.end).toString());\n\n          break;\n\n        case FORMAT.YEAR:\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            0,\n            1,\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear() + 1,\n            0,\n            1,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          // console.log('start year', new Date(state.start).toString());\n          // eslint-disable-next-line no-console\n          // console.log('end year', new Date(state.end).toString());\n          break;\n\n        default:\n      }\n    },\n    addTodo: (state: IntervalState, action: PayloadAction<Todo>) => {\n      state.storage.push(action.payload);\n    },\n    resetState: (state: IntervalState) => {\n      return { ...state, ...initialState };\n    },\n  },\n  // extraReducers: (builder) => {\n  //   builder\n  //     .addCase(getIntervalAsync.pending, (state: IntervalState) => {\n  //       state.statusLoading = 'loading';\n  //     })\n  //     .addCase(getIntervalAsync.fulfilled, (state, action) => {\n  //       state.storage.push(...action.payload);\n  //       state.statusLoading = 'idle';\n  //     })\n  //     .addCase(getIntervalAsync.rejected, (state, action) => {\n  //       state.statusLoading = 'failed';\n\n  //       // eslint-disable-next-line no-console\n  //       console.log(action);\n  //     });\n  // },\n});\n\nexport default intervalSlice.reducer;\nexport const {\n  setCurrentDate,\n  setSpecialDate,\n  setFormat,\n  navigateMonth,\n  navigateYear,\n  setIntervalCalendar,\n  addTodo,\n  resetState,\n} = intervalSlice.actions;\n\nexport const selectTodos = (state: RootState) => state.interval.storage;\nexport const selectCurrentDate\n= (state: RootState) => state.interval.currentDate;\nexport const selectStartInterval\n= (state: RootState) => state.interval.start;\nexport const selectEndInterval\n= (state: RootState) => state.interval.end;\n\nexport const selectFormat\n= (state: RootState) => state.interval.formatCalendar;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '.';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export const WEEK = [\n  'Sunday',\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n];\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../..';\nimport { Todo } from '../../../type/Todo';\nimport todos from '../../../server/todos.json';\n\nexport interface TodoState {\n  storage: Todo[];\n  statusLoading: 'idle' | 'loading' | 'failed';\n  error: unknown;\n}\n\nconst initialState: TodoState = {\n  storage: [],\n  statusLoading: 'idle',\n  error: null,\n};\n\nconst getTodos = async (delay = 3000): Promise<Todo[]> => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(todos as unknown as Todo[]);\n    }, delay);\n  });\n};\n\nexport const getTodosAsync = createAsyncThunk(\n  'todos/fetchTodos',\n  async () => {\n    const response: Todo[] = await getTodos();\n\n    // eslint-disable-next-line no-console\n    console.log(response);\n\n    return response;\n  },\n);\n\nconst todosSlice = createSlice({\n  name: 'interval',\n  initialState,\n  reducers: {\n    addTodo: (state: TodoState, action: PayloadAction<Todo>) => {\n      state.storage.push(action.payload);\n    },\n    setStatus: (\n      state: TodoState,\n      action: PayloadAction<'idle' | 'loading' | 'failed'>,\n    ) => {\n      state.statusLoading = action.payload;\n    },\n    setError: (state: TodoState, action: PayloadAction<unknown>) => {\n      state.error = action.payload;\n      state.statusLoading = 'failed';\n    },\n    resetState: (state: TodoState) => {\n      return { ...state, ...initialState };\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getTodosAsync.pending, (state: TodoState) => {\n        state.statusLoading = 'loading';\n      })\n      .addCase(getTodosAsync.fulfilled, (state, action) => {\n        state.storage.push(...action.payload);\n        state.statusLoading = 'idle';\n      })\n      .addCase(getTodosAsync.rejected, (state, action) => {\n        state.statusLoading = 'failed';\n\n        // eslint-disable-next-line no-console\n        console.log(action);\n      });\n  },\n});\n\nexport default todosSlice.reducer;\nexport const {\n  addTodo,\n  setStatus,\n  setError,\n  resetState,\n} = todosSlice.actions;\n\nexport const selectTodos = (state: RootState) => state.todos.storage;\nexport const selectTodosStatusLoading\n= (state: RootState) => state.todos.statusLoading;\nexport const selectTodosError = (state: RootState) => state.todos.error;\n","import {\n  FunctionComponent,\n} from 'react';\nimport styled, { css } from 'styled-components';\nimport { FORMAT } from '../constants/FORMAT';\nimport { useCurrentHook } from '../customHooks/useCurrentHook';\nimport { useDayHook } from '../customHooks/useDayHook';\nimport {\n  selectCurrentDate,\n  selectFormat,\n  setFormat,\n  setIntervalCalendar,\n  setSpecialDate,\n} from '../store/features/Interval/intervalSlice';\nimport { selectTodos } from '../store/features/Todo/todoSlice';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { Todo } from '../type/Todo';\n\ntype StyledProps = {\n  format?: string,\n  isWeekend?: boolean,\n  isNotCurrentMonth?: boolean,\n  isCurrentDay?: boolean;\n};\n\nconst Wrapper = styled.div<StyledProps>`\n  box-sizing: border-box;\n  padding: 0;\n  font-size: 14px;\n  cursor: pointer;\n\n  ${({ format }) => (format === FORMAT.DAY) && css`\n    height: 100vh;\n  `}\n\n  ${({ format }) => (format === FORMAT.WEEK || format === FORMAT.MONTH) && css`\n    height: 200px;\n\n    &:hover{\n      box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n    }\n  `}\n\n  ${({ format, isWeekend }) => (format === FORMAT.YEAR && isWeekend) && css`\n    color: red;\n  `}\n\n  ${({ isNotCurrentMonth }) => isNotCurrentMonth && css`\n    opacity: 0.4;\n  `}\n\n  ${({ isCurrentDay }) => isCurrentDay && css`\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n  `}\n`;\n\nconst DayTitle = styled.div<{ isCurrentDay: boolean }>`\n  box-sizing: border-box;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\n  ${({ isCurrentDay }) => isCurrentDay && css`\n    background-color: #79c6c6;\n  `}\n\n  ${({ isCurrentDay }) => !isCurrentDay && css`\n    &:hover {\n      background-color: #e6e6e6;\n    }\n  `}\n`;\n\nconst DayOfWeek = styled.button<StyledProps>`\n  background-color: transparent;\n  cursor: pointer;\n  padding: 0 10px;\n  line-height: 30px;\n  border: none;\n  outline: none;\n  position: relative;\n  cursor: pointer;\n  text-align: left;\n\n  border-right: 10px solid transparent;\n  width: 80px;\n  border-top: 10px solid transparent;\n  border-bottom: 10px solid transparent;\n\n  ${({ isWeekend }) => isWeekend && css`\n    color: #a16e73;\n    font-weight: bold;\n  `}\n\n\n  ${({ isCurrentDay, format }) => !isCurrentDay\n  && format !== FORMAT.WEEK && css`\n    &:hover {\n      transition: all 0.2s;\n      border-bottom: 10px solid #79c6c6;\n    }\n  `}\n\n  ${({ format }) => (format === FORMAT.YEAR)\n  && css`\n    display: none;\n  `}\n`;\n\nconst DateString = styled.p<{ format?: string }>`\n  margin: 0;\n  line-height: 40px;\n  position: relative;\n  overflow: hidden;\n  padding: 0 10px;\n\n  ${({ format }) => format === FORMAT.YEAR && css`\n    display: block;\n    text-align: right;\n    padding: 0;\n    margin: 0 auto;\n  `}\n`;\n\nconst DayListTodos = styled.div<{ format?: string }>`\n  box-sizing: border-box;\n  padding: 10px;\n\n  ${({ format }) => {\n    if (format === FORMAT.YEAR) {\n      return css`\n        display: none;\n      `;\n    }\n\n    return '';\n  }}\n`;\n\ninterface DayProps {\n  startDay: number;\n  // eslint-disable-next-line react/require-default-props\n  disabled?: boolean;\n}\n\nexport const Day: FunctionComponent<DayProps> = ({\n  startDay,\n  disabled = false,\n}) => {\n  const dispatch = useAppDispatch();\n  const currentDate = useAppSelector(selectCurrentDate);\n  const format = useAppSelector(selectFormat);\n  const isWeekend = (new Date(startDay).getDay() === 0\n  || new Date(startDay).getDay() === 6);\n  const {\n    dayOfWeek, month, day, year, fullNameDayOfWeek,\n  } = useDayHook(startDay);\n  const {\n    isCurrentDay,\n    isCurrentMonth,\n  } = useCurrentHook(currentDate, startDay);\n  const todos = useAppSelector(selectTodos);\n\n  const preparedTodos = todos.filter((todo: Todo) => {\n    return (startDay <= Number(todo.date) + Number(todo.time))\n    && (Number(todo.date) + Number(todo.time) < startDay + 24 * 60 * 60 * 1000);\n  });\n\n  const isTodosToday = preparedTodos.length;\n\n  const onDayClick = () => {\n    // eslint-disable-next-line no-console\n    // console.log('Day onClick');\n\n    if (isCurrentDay && format === FORMAT.DAY) {\n      return;\n    }\n\n    if (isCurrentDay) {\n      dispatch(setFormat(FORMAT.DAY));\n      dispatch(setIntervalCalendar());\n\n      return;\n    }\n\n    if (!disabled) {\n      dispatch(setSpecialDate(startDay));\n    }\n\n    if (!disabled && !isCurrentMonth) {\n      dispatch(setIntervalCalendar());\n    }\n  };\n\n  const onWeekClick = (\n    e: React.MouseEvent<HTMLButtonElement | HTMLDivElement, MouseEvent>,\n  ) => {\n    if (format === FORMAT.WEEK) {\n      return;\n    }\n\n    e.stopPropagation();\n    let dayValue: string | undefined;\n\n    if (e.target instanceof HTMLButtonElement) {\n      dayValue = e.target.dataset.dayValue;\n    }\n\n    if (dayValue) {\n      dispatch(setSpecialDate(+dayValue));\n      dispatch(setFormat(FORMAT.WEEK));\n      dispatch(setIntervalCalendar());\n    }\n  };\n\n  if (disabled) {\n    return (\n      <div />\n    );\n  }\n\n  return (\n    <Wrapper\n      format={format}\n      isWeekend={isWeekend}\n      isNotCurrentMonth={!isCurrentMonth}\n      isCurrentDay={isCurrentDay}\n    >\n      <DayTitle\n        isCurrentDay={isCurrentDay}\n        onClick={onDayClick}\n      >\n        <DayOfWeek\n          isWeekend={isWeekend}\n          onClick={(e) => onWeekClick(e)}\n          data-day-value={String(startDay)}\n          isCurrentDay={isCurrentDay}\n          format={format}\n        >\n          {format === FORMAT.DAY && fullNameDayOfWeek}\n          {(format === FORMAT.WEEK || format === FORMAT.MONTH) && dayOfWeek}\n        </DayOfWeek>\n\n        <DateString format={format}>\n          {format === FORMAT.DAY ? `${day}/${month}/${year}` : day}\n        </DateString>\n      </DayTitle>\n\n      {(format !== FORMAT.YEAR) && (\n        <DayListTodos format={format}>\n          {isTodosToday && (\n            <>\n              <p>List of TODOS:</p>\n              {preparedTodos.map(todo => (\n                <p>{`${todo.title}: ${todo.description}`}</p>\n              ))}\n            </>\n          )}\n        </DayListTodos>\n      )}\n    </Wrapper>\n  );\n};\n","import { WEEK } from '../constants/WEEK';\n\nexport const useDayHook = (value: number) => {\n  const date = new Date(value);\n  const day = date.getDate();\n  const arr = date.toDateString().split(' ');\n  const fullNameDayOfWeek = WEEK[date.getDay()];\n\n  return {\n    dayOfWeek: arr[0],\n    month: arr[1],\n    day,\n    year: arr[3],\n    fullNameDayOfWeek,\n  };\n};\n","export const useCurrentHook = (current: number, anyDay: number) => {\n  const isCurrentYear\n  = new Date(current).getFullYear() === new Date(anyDay).getFullYear();\n\n  const isCurrentMonth\n  = new Date(current).getMonth() === new Date(anyDay).getMonth()\n  && new Date(current).getFullYear() === new Date(anyDay).getFullYear();\n\n  const isCurrentDay\n   = new Date(current).getDate() === new Date(anyDay).getDate()\n   && new Date(current).getMonth() === new Date(anyDay).getMonth()\n   && new Date(current).getFullYear() === new Date(anyDay).getFullYear();\n\n  return { isCurrentDay, isCurrentMonth, isCurrentYear };\n};\n","import { FunctionComponent, useRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport { FORMAT } from '../constants/FORMAT';\nimport { MONTH_NAMES } from '../constants/MONTH';\nimport {\n  IS_MONDAY_FIRST_DAY_OF_WEEK,\n  selectFormat,\n  setFormat,\n  setIntervalCalendar,\n  setSpecialDate,\n} from '../store/features/Interval/intervalSlice';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { Day } from './Day';\n\nconst Wrapper = styled.div<{ format?: string }>`\n  ${({ format }) => {\n    if (format === FORMAT.DAY) {\n      return css`\n        display: block;\n      `;\n    }\n\n    if (format === FORMAT.YEAR) {\n      return css`\n        /* max-width: 200px; */\n      `;\n    }\n\n    return '';\n  }}\n`;\n\nconst MonthTitle = styled.div<{ format?: string }>`\n  cursor: pointer;\n\n  ${({ format }) => (format === FORMAT.DAY) && css`\n    display: none;\n  `}\n\n  ${({ format }) => (format === FORMAT.YEAR) && css`\n    padding: 10px;\n  `}\n\n  & button {\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n  }\n`;\n\nconst MonthContainer = styled.div<{ format?: string }>`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n\n  ${({ format }) => (format === FORMAT.DAY) && css`\n    display: block;\n  `}\n`;\n\ninterface MonthProps {\n  interval: number[];\n}\n\nexport const Month: FunctionComponent<MonthProps> = ({ interval }) => {\n  const dispatch = useAppDispatch();\n  const format = useAppSelector(selectFormat);\n  const monthName = useRef(new Date(interval[0]).getMonth());\n  const countEmptyItem = useRef((new Date(interval[0]).getDay()\n  + 7 - IS_MONDAY_FIRST_DAY_OF_WEEK) % 7);\n  const empty = [];\n\n  for (let i = 0; i < countEmptyItem.current; i += 1) {\n    empty.push(-i);\n  }\n\n  const onMonthHandler = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    if (format === FORMAT.MONTH) {\n      return;\n    }\n\n    let monthValue: string | undefined;\n\n    if (e.target instanceof HTMLButtonElement) {\n      monthValue = e.target.dataset.monthValue;\n    }\n\n    if (monthValue) {\n      dispatch(setSpecialDate(+monthValue));\n      dispatch(setFormat(FORMAT.MONTH));\n      dispatch(setIntervalCalendar());\n    }\n  };\n\n  return (\n    <Wrapper format={format}>\n      <MonthTitle\n        format={format}\n      >\n        <button\n          type=\"button\"\n          onClick={e => onMonthHandler(e)}\n          data-month-value={String(interval[0])}\n        >\n          {format === FORMAT.YEAR && MONTH_NAMES[monthName.current]}\n          {/* {format === FORMAT.MONTH && MONTH_NAMES[currentMonthName.current]} */}\n        </button>\n      </MonthTitle>\n\n      <MonthContainer\n        format={format}\n      >\n        {empty.map((emptyItem: number) => (\n          <Day key={emptyItem} startDay={emptyItem} disabled />\n        ))}\n\n        {interval.map((day: number) => (\n          <Day key={day} startDay={day} />\n        ))}\n      </MonthContainer>\n    </Wrapper>\n  );\n};\n","export function buildInterval(start: number, end: number) {\n  const interval = [];\n  let day = start;\n\n  // eslint-disable-next-line no-console\n  // console.log('buildInterval//',\n  //   new Date(start).toDateString(),\n  //   '-----------',\n  //   new Date(end).toDateString());\n\n  while (day < end) {\n    interval.push(day);\n\n    day = new Date(\n      new Date(day).getFullYear(),\n      new Date(day).getMonth(),\n      new Date(day).getDate() + 1,\n    ).valueOf();\n  }\n\n  return interval;\n}\n","export const divideYear = (interval: number[]) => {\n  const year = [];\n  let i = 0;\n\n  while (i < interval.length) {\n    const currentMonth = new Date(interval[i]).getMonth();\n    const month = [];\n\n    while (currentMonth === new Date(interval[i]).getMonth()) {\n      month.push(interval[i]);\n\n      i += 1;\n    }\n\n    year.push(month);\n  }\n\n  return year;\n};\n","import {\n  FunctionComponent,\n} from 'react';\nimport styled from 'styled-components';\nimport { divideYear } from '../helpers/divideYear';\nimport { Month } from './Month';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 2rem;\n  min-width: 1100px;\n`;\n\ninterface YearProps {\n  interval: number[];\n}\n\nexport const Year: FunctionComponent<YearProps> = ({ interval }) => {\n  const prepared = divideYear(interval);\n\n  return (\n    <Wrapper>\n      {prepared.map((month: number[]) => (\n        <Month key={month[0]} interval={month} />\n      ))}\n    </Wrapper>\n  );\n};\n","import { FunctionComponent, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { Month } from '../../components/Month';\nimport { buildInterval } from '../../helpers/buildInterval';\nimport {\n  selectCurrentDate,\n  selectEndInterval,\n  selectFormat,\n  selectStartInterval,\n  setCurrentDate,\n  setFormat,\n  setIntervalCalendar,\n} from '../../store/features/Interval/intervalSlice';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { FORMAT } from '../../constants/FORMAT';\nimport { Year } from '../../components/Year';\nimport { Day } from '../../components/Day';\nimport { selectTodos } from '../../store/features/Todo/todoSlice';\n\nconst Wrapper = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nexport const HomePage: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const currentDate = useAppSelector(selectCurrentDate);\n  const start = useAppSelector(selectStartInterval);\n  const end = useAppSelector(selectEndInterval);\n  const interval = buildInterval(start, end);\n  const format = useAppSelector(selectFormat);\n  const todos = useAppSelector(selectTodos);\n\n  // eslint-disable-next-line no-console\n  console.log(todos);\n\n  useEffect(() => {\n    if (!currentDate) {\n      dispatch(setCurrentDate());\n      dispatch(setFormat(FORMAT.MONTH));\n    }\n\n    dispatch(setIntervalCalendar());\n  }, []);\n\n  return (\n    <Wrapper>\n      {format === FORMAT.YEAR && <Year interval={interval} />}\n      {(format === FORMAT.MONTH || format === FORMAT.WEEK)\n      && <Month interval={interval} />}\n      {format === FORMAT.DAY && <Day startDay={interval[0]} />}\n    </Wrapper>\n  );\n};\n","import axios from 'axios';\n\nconst baseURL = 'https://jsonplaceholder.typicode.com';\n\nconst instance = axios.create({\n  baseURL,\n});\n\ntype FetchData = {\n};\n\nexport const client = {\n  async get<T>(url: string) {\n    const response = await instance.get<T>(url);\n\n    // eslint-disable-next-line no-console\n    console.log('get', baseURL + url);\n\n    return response.data;\n  },\n\n  async post<T>(url: string, data: FetchData) {\n    const response = await instance.post<T>(url, data);\n\n    return response.data;\n  },\n\n  async patch<T>(url: string, data: FetchData) {\n    const response = await instance.patch<T>(url, data);\n\n    return response.data;\n  },\n\n  async delete(url: string) {\n    return instance.delete(url);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { getAllPosts } from '../../../api/post';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../..';\nimport { Post } from '../../../type/Post';\n\nexport interface PostsState {\n  storage: Post[];\n  statusLoading: 'idle' | 'loading' | 'failed';\n  error: unknown;\n}\n\nconst initialState: PostsState = {\n  storage: [],\n  statusLoading: 'idle',\n  error: null,\n};\n\nexport const getPostsAsync = createAsyncThunk('posts/fetchPosts', async () => {\n  const response: Post[] = await getAllPosts();\n\n  // eslint-disable-next-line no-console\n  console.log(response);\n\n  return response;\n});\n\nconst postsSlice = createSlice({\n  name: 'interval',\n  initialState,\n  reducers: {\n    addPosts: (state: PostsState, action: PayloadAction<Post[]>) => {\n      state.storage.push(...action.payload);\n    },\n    setStatus: (\n      state: PostsState,\n      action: PayloadAction<'idle' | 'loading' | 'failed'>,\n    ) => {\n      state.statusLoading = action.payload;\n    },\n    setError: (state: PostsState, action: PayloadAction<unknown>) => {\n      state.error = action.payload;\n      state.statusLoading = 'failed';\n    },\n    resetState: (state: PostsState) => {\n      return { ...state, ...initialState };\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getPostsAsync.pending, (state: PostsState) => {\n        state.statusLoading = 'loading';\n      })\n      .addCase(getPostsAsync.fulfilled, (state, action) => {\n        state.storage.push(...action.payload);\n        state.statusLoading = 'idle';\n      })\n      .addCase(getPostsAsync.rejected, (state, action) => {\n        state.statusLoading = 'failed';\n\n        // eslint-disable-next-line no-console\n        console.log(action);\n      });\n  },\n});\n\nexport default postsSlice.reducer;\nexport const {\n  addPosts,\n  setStatus,\n  setError,\n  resetState,\n} = postsSlice.actions;\n\nexport const selectPosts = (state: RootState) => state.posts.storage;\nexport const selectPostStatusLoading\n= (state: RootState) => state.posts.statusLoading;\nexport const selectPostError = (state: RootState) => state.posts.error;\n","import { client } from '../utils/axiosClient';\nimport { Post } from '../type/Post';\n\nexport const getAllPosts = () => client.get<Post[]>('/posts/');\nexport const getPostById = (postId: number) => client.get<Post[]>(`/posts/${postId}`);\n","import { FunctionComponent } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { resetState, selectPosts } from '../../store/features/Posts/postsSlice';\n\nimport './PostPage.scss';\n\nexport const PostPage: FunctionComponent = () => {\n  const { id } = useParams();\n\n  // eslint-disable-next-line no-console\n  // console.log(id);\n\n  const posts = useAppSelector(selectPosts);\n  const dispatch = useAppDispatch();\n\n  dispatch(resetState());\n\n  const post = posts.find(p => String(p.id) === String(id));\n\n  return (\n    <div\n      className=\"PostPage\"\n    >\n      <Link\n        to=\"/\"\n        className=\"PostPage__Link\"\n      >\n        Back\n      </Link>\n\n      {post ? (\n        <div>\n          <h1>{`PostPage: ${post.title}`}</h1>\n          <p>{post.body}</p>\n        </div>\n      ) : (\n        <>\n          post doesn&nbsp;t exist\n        </>\n      )}\n    </div>\n  );\n};\n","import { PopupKeys, PopupValues } from '../type/Popup';\n\nexport const POPUP: { [key in PopupKeys]: PopupValues } = {\n  IS_SHOW_DATE_PICKER: 'isShowDatePicker',\n  IS_SHOW_ADD_ITEM: 'isShowAddItem',\n};\n","/* eslint-disable no-case-declarations */\n/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../..';\nimport { PopupValues } from '../../../type/Popup';\n\nexport interface ControlState {\n  popup: {\n    isShowDatePicker: boolean;\n    isShowAddItem: boolean;\n  },\n  isShowDatePickerForm: boolean;\n}\n\nconst initialState: ControlState = {\n  popup: {\n    isShowDatePicker: false,\n    isShowAddItem: false,\n  },\n  isShowDatePickerForm: false,\n};\n\nconst controlSlice = createSlice({\n  name: 'controls',\n  initialState,\n  reducers: {\n    switchPopupInForm: (\n      state: ControlState,\n    ) => {\n      state.isShowDatePickerForm = !state.isShowDatePickerForm;\n    },\n    switchPopup: (\n      state: ControlState,\n      action: PayloadAction<PopupValues>,\n    ) => {\n      state.popup = {\n        ...initialState.popup,\n        [action.payload]: !state.popup[action.payload],\n      };\n    },\n    closeAllPopup: (\n      state: ControlState,\n    ) => {\n      state.popup = {\n        ...initialState.popup,\n      };\n    },\n    resetState: (state: ControlState) => {\n      return { ...state, ...initialState };\n    },\n  },\n});\n\nexport default controlSlice.reducer;\nexport const {\n  switchPopup,\n  closeAllPopup,\n  resetState,\n  switchPopupInForm,\n} = controlSlice.actions;\n\nexport const selectIsShowDatePicker\n = (state: RootState) => state.control.popup.isShowDatePicker;\nexport const selectIsShowAddItem\n= (state: RootState) => state.control.popup.isShowAddItem;\nexport const selectIsShowDatePickerInForm\n= (state: RootState) => state.control.isShowDatePickerForm;\n","export const MOVE: { [key in 'FORWARD' | 'BACK']: '1' | '-1' } = {\n  FORWARD: '1',\n  BACK: '-1',\n};\n","import { FunctionComponent } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { IoCaretBackOutline, IoCaretForwardOutline } from 'react-icons/io5';\nimport { FORMAT } from '../constants/FORMAT';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport {\n  navigateMonth,\n  navigateYear,\n  selectCurrentDate,\n  selectFormat,\n  setFormat,\n  setIntervalCalendar,\n} from '../store/features/Interval/intervalSlice';\nimport { MONTH_NAMES } from '../constants/MONTH';\nimport { MOVE } from '../constants/MOVE';\n\nconst Wrapper = styled.div`\n  display: flex;`;\n\nconst Arrow = styled.button`\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  outline: none;\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Value = styled.div<{ format: string }>`\n  width: 160px;\n\n  ${({ format }) => format === FORMAT.YEAR\n    && css`\n      width: 60px;\n    `}\n`;\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface ArrowNavigatorProps {}\n\nexport const ArrowNavigator: FunctionComponent<ArrowNavigatorProps> = () => {\n  const dispatch = useAppDispatch();\n  const currentDate = useAppSelector(selectCurrentDate);\n  const format = useAppSelector(selectFormat);\n  const fullNameMonth = MONTH_NAMES[new Date(currentDate).getMonth()];\n  const fullYear = new Date(currentDate).getFullYear();\n\n  const onNavigateHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (format !== FORMAT.YEAR) {\n      dispatch(navigateMonth(e.currentTarget.value));\n      dispatch(setFormat(FORMAT.MONTH));\n    }\n\n    if (format === FORMAT.YEAR) {\n      dispatch(navigateYear(e.currentTarget.value));\n    }\n\n    dispatch(setIntervalCalendar());\n  };\n\n  return (\n    <Wrapper>\n      <Arrow\n        type=\"button\"\n        value={MOVE.BACK}\n        onClick={onNavigateHandler}\n      >\n        <IoCaretBackOutline />\n      </Arrow>\n      <Value format={format}>\n        {format !== FORMAT.YEAR && (\n          <>\n            &nbsp;\n            {fullNameMonth}\n          </>\n        )}\n        &nbsp;\n        {fullYear}\n        &nbsp;\n      </Value>\n      <Arrow\n        type=\"button\"\n        value={MOVE.FORWARD}\n        onClick={onNavigateHandler}\n      >\n        <IoCaretForwardOutline />\n      </Arrow>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  outline: none;\n  justify-content: center;\n  cursor: pointer;\n  height: fit-content;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import { RefObject } from 'react';\n\nexport const handleClickOutside = (\n  event: MouseEvent,\n  refControl: RefObject<Element>,\n  refContainer: RefObject<Element>,\n  onShowHandler: () => void,\n) => {\n  // eslint-disable-next-line no-console\n  // console.log('start handleClickOutside');\n\n  if (refControl.current\n    && !refControl.current.contains(event.target as Node)) {\n    // eslint-disable-next-line no-console\n    // console.log('outside refControl', refControl);\n  }\n\n  if (refContainer.current\n    && !refContainer.current.contains(event.target as Node)) {\n    // eslint-disable-next-line no-console\n    // console.log('outside refContainer', refContainer);\n  }\n\n  if (refControl.current\n    && !refControl.current.contains(event.target as Node)\n    && refContainer.current\n    && !refContainer.current.contains(event.target as Node)) {\n    // eslint-disable-next-line no-console\n    // console.log('outside refControl and refContainer',\n    // refControl, refContainer);\n\n    onShowHandler();\n  }\n};\n","import {\n  FunctionComponent,\n  RefObject,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport styled from 'styled-components';\nimport {\n} from '../../store/features/Interval/intervalSlice';\nimport { Button } from '../Button';\nimport { buildArrOfMonths } from '../../helpers/buildArrOfMonths';\nimport { buildArrOfDays } from '../../helpers/buildArrOfDays';\nimport { buildArrayOfYears } from '../../helpers/buildArrayOfYears';\nimport { handleClickOutside } from '../../helpers/handleClickOutside';\n\nconst Wrapper = styled.div`\n  z-index: 50;\n  position: absolute;\n  right: 0;\n  top: 45px;\n  background-color: white;\n  width: 400px;\n  box-sizing: border-box;\n  padding: 20px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nconst Years = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  row-gap: 20px;\n  & > :hover{\n    background-color: #e6e6e6;\n  }\n`;\n\nconst Months = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  row-gap: 20px;\n  & > :hover{\n    background-color: #e6e6e6;\n  }\n`;\n\nconst Days = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  row-gap: 20px;\n  & > :hover{\n    background-color: #e6e6e6;\n  }\n`;\n\ntype DatePickerBoxProps = {\n  currentDate: number;\n  onChangeDate: (day: number) => void;\n  datePickerControlRef: RefObject<HTMLDivElement>;\n  onShowDatePickerHandler: () => void;\n};\n\nexport const DatePickerContainer: FunctionComponent<DatePickerBoxProps> = ({\n  currentDate,\n  onChangeDate,\n  datePickerControlRef,\n  onShowDatePickerHandler,\n}) => {\n  const [arrOfYears, setArrOfYears] = useState<string[]>([]);\n  const [arrOfMonths, setArrOfMonths]\n  = useState<{ label: string, value: string }[]>([]);\n  const [arrOfDays, setArrOfDays]\n  = useState<{ id: string, value: string, label: string }[]>([]);\n\n  const datePickerContainerRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-console\n  // console.log(controlRef, onShowDatePickerHandler);\n\n  useEffect(() => {\n    // eslint-disable-next-line no-console\n    console.log('useEffect mount clicker DP');\n\n    document.addEventListener('click', (event) => handleClickOutside(\n      event,\n      datePickerControlRef,\n      datePickerContainerRef,\n      onShowDatePickerHandler,\n    ));\n\n    return () => {\n      document.removeEventListener('click', (event) => handleClickOutside(\n        event,\n        datePickerControlRef,\n        datePickerContainerRef,\n        onShowDatePickerHandler,\n      ));\n    };\n  }, []);\n\n  useEffect(() => {\n    // eslint-disable-next-line no-console\n    console.log('useEffect DK');\n\n    setArrOfYears(buildArrayOfYears(currentDate));\n  }, []);\n\n  const onYearHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    // eslint-disable-next-line no-console\n    console.log('DatePicker// onYearHandler');\n\n    e.stopPropagation();\n    const currentYear = +(e.target as HTMLButtonElement).value;\n\n    setArrOfMonths(buildArrOfMonths(currentYear));\n  };\n\n  const onMonthHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    // eslint-disable-next-line no-console\n    console.log('DatePicker// onMonthHandler');\n\n    e.stopPropagation();\n    const month = +(e.target as HTMLButtonElement).value;\n\n    const currentMonth = new Date(\n      new Date(month).getFullYear(),\n      new Date(month).getMonth(),\n      1,\n    ).valueOf();\n\n    setArrOfDays(buildArrOfDays(currentMonth));\n  };\n\n  const onDayHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    // eslint-disable-next-line no-console\n    console.log('DatePicker// onDayHandler');\n\n    e.stopPropagation();\n    const day = +(e.target as HTMLButtonElement).value;\n\n    onChangeDate(day);\n    setArrOfMonths([]);\n    setArrOfDays([]);\n  };\n\n  // eslint-disable-next-line no-console\n  console.log(currentDate);\n\n  return (\n    <Wrapper ref={datePickerContainerRef}>\n      {arrOfYears.length > 0\n      && arrOfMonths.length === 0\n      && arrOfDays.length === 0\n      && (\n        <Years>\n          {(arrOfYears.map((y:string) => (\n            <Button\n              key={y}\n              type=\"button\"\n              value={y}\n              onClick={e => onYearHandler(e)}\n            >\n              {new Date(+y).getFullYear()}\n            </Button>\n          )))}\n        </Years>\n      )}\n\n      {arrOfYears.length > 0\n      && arrOfMonths.length > 0\n      && arrOfDays.length === 0\n      && (\n        <Months>\n          {(arrOfMonths.map((m) => (\n            <Button\n              key={m.label}\n              type=\"button\"\n              value={m.value}\n              onClick={e => onMonthHandler(e)}\n            >\n              {m.label}\n            </Button>\n          )))}\n        </Months>\n      )}\n\n      {arrOfYears.length > 0\n      && arrOfMonths.length > 0\n      && arrOfDays.length > 0\n      && (\n        <Days>\n          {arrOfDays.map(\n            (d: { id: string, value: string, label: string }) => (\n              <Button\n                key={d.id}\n                type=\"button\"\n                value={d.value}\n                onClick={e => onDayHandler(e)}\n              >\n                {d.label}\n              </Button>\n            ),\n          )}\n        </Days>\n      )}\n    </Wrapper>\n  );\n};\n","export const buildArrayOfYears = (currentDate: number) => {\n  const years = [];\n\n  for (let i = 0; i < 12; i += 1) {\n    years.push(\n      new Date(\n        (new Date(currentDate).getFullYear()) - 4 + i,\n        0,\n        0,\n      ).valueOf().toString(),\n    );\n  }\n\n  return years;\n};\n","import { MONTH_NAMES_CUT } from '../constants/MONTH';\n\nexport const buildArrOfMonths = (currentDate: number) => {\n  const arrOfMonth = [];\n\n  for (let i = 0; i < 12; i += 1) {\n    arrOfMonth.push({\n      label: MONTH_NAMES_CUT[i],\n      value: new Date(\n        (new Date(currentDate).getFullYear()),\n        i,\n        1,\n      ).valueOf().toString(),\n    });\n  }\n\n  return arrOfMonth;\n};\n","import {\n  IS_MONDAY_FIRST_DAY_OF_WEEK,\n} from '../store/features/Interval/intervalSlice';\nimport { buildInterval } from './buildInterval';\n\nexport const buildArrOfDays = (startMonth: number) => {\n  const month = [];\n  const values = buildInterval(\n    startMonth,\n    new Date(\n      new Date(startMonth).getFullYear(),\n      new Date(startMonth).getMonth() + 1,\n      1,\n    ).valueOf(),\n  );\n\n  const countEmptyItem = (new Date(startMonth).getDay()\n    + 7 - IS_MONDAY_FIRST_DAY_OF_WEEK) % 7;\n\n  for (let i = 0; i < countEmptyItem; i += 1) {\n    month.push({\n      id: String(i),\n      value: '',\n      label: '',\n    });\n  }\n\n  for (let i = countEmptyItem; i < countEmptyItem + values.length; i += 1) {\n    month.push({\n      id: String(i),\n      value: String(values[i - countEmptyItem]),\n      label: String(new Date(values[i - countEmptyItem]).getDate()),\n    });\n  }\n\n  return month;\n};\n","import {\n  FunctionComponent,\n  useRef,\n} from 'react';\nimport styled from 'styled-components';\nimport {\n  IoCalendarOutline,\n} from 'react-icons/io5';\nimport {\n} from '../../store/features/Interval/intervalSlice';\nimport { DatePickerContainer } from './DatePicker.Container';\n\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\nconst DatePickerTitle = styled.div`\n  display: flex;\n`;\n\nconst DatePickerButton = styled.button`\n  border: none;\n  background-color: transparent;\n  outline: none;\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n  margin-left: 40px;\n`;\n\ninterface DatePickerProps {\n  currentDate: number;\n  onChangeDate: (value: number) => void;\n  isShowDatePickerContainer: boolean;\n  onShowDatePickerHandler: () => void;\n}\n\nexport const DatePicker: FunctionComponent<DatePickerProps> = ({\n  currentDate,\n  onChangeDate,\n  isShowDatePickerContainer,\n  onShowDatePickerHandler,\n}) => {\n  const controlRef = useRef<HTMLDivElement>(null);\n\n  return (\n    <Wrapper>\n      <DatePickerTitle ref={controlRef}>\n        <DatePickerButton type=\"button\" onClick={onShowDatePickerHandler}>\n          <IoCalendarOutline size={30} />\n        </DatePickerButton>\n      </DatePickerTitle>\n\n      {isShowDatePickerContainer && (\n        <DatePickerContainer\n          currentDate={currentDate}\n          datePickerControlRef={controlRef}\n          onChangeDate={onChangeDate}\n          onShowDatePickerHandler={onShowDatePickerHandler}\n        />\n      )}\n    </Wrapper>\n  );\n};\n","import { ColorKeys, ColorItemValue, ColorItemKey } from '../type/Color';\n\nexport const COLOR:\n{ [key in ColorKeys]: { value: ColorItemValue, label: ColorItemKey } }\n= {\n  URGENT: { value: '#ff6666', label: 'urgent' },\n  NORMAL: { value: '#ffe5a9', label: 'normal' },\n  IMPORTANT: { value: '#cbbeb5', label: 'important' },\n};\n","import { FormDataKeys, FormDataValues } from '../type/Form';\n\nexport const FORM_DATA: { [key in FormDataKeys]: FormDataValues } = {\n  TITLE: 'title',\n  DESCRIPTION: 'description',\n  DATE: 'date',\n  TIME: 'time',\n  COLOR: 'color',\n};\n","import {\n  FunctionComponent,\n  memo,\n  // RefObject,\n  useEffect,\n  useMemo,\n  // useState,\n} from 'react';\nimport styled from 'styled-components';\nimport {\n  // IoRefresh,\n  IoCaretDown, IoCaretUp,\n} from 'react-icons/io5';\n\nimport { Button } from '../Button';\n// import { handleClickOutside } from '../../helpers/handleClickOutside';\n\nconst Wrapper = styled.div`\n  right: 0;\n  top: 45px;\n  background-color: white;\n  width: 220px;\n  box-sizing: border-box;\n  padding: 20px;\n\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n`;\n\nconst Hours = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Minutes = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\ntype TimePickerBoxProps = {\n  time: string;\n  onChangeTime: (time: string) => void;\n};\n\nexport const TimePicker: FunctionComponent<TimePickerBoxProps> = memo(({\n  time,\n  onChangeTime,\n}) => {\n  // eslint-disable-next-line no-console\n  console.log('render Time Picker',\n    new Date(+time).toTimeString(),\n    new Date(+time).toDateString());\n\n  useEffect(() => {\n    // eslint-disable-next-line no-console\n    console.log('useEffect Time Picker');\n\n    onChangeTime(new Date().valueOf().toString());\n  }, []);\n\n  const onHourHandler = (\n    e: React.MouseEvent<HTMLButtonElement>,\n    value: number,\n  ) => {\n    e.stopPropagation();\n    // eslint-disable-next-line no-console\n    // console.log('onHourHandler', e, new Date(+time).toDateString());\n\n    onChangeTime((new Date(\n      new Date(+time).getFullYear(),\n      new Date(+time).getMonth(),\n      new Date(+time).getDate(),\n      (new Date(+time).getHours() + value) % 24,\n      new Date(+time).getMinutes(),\n    )).valueOf().toString());\n  };\n\n  const onMinutesHandler = (\n    e: React.MouseEvent<HTMLButtonElement>,\n    value: number,\n  ) => {\n    e.stopPropagation();\n    // eslint-disable-next-line no-console\n    // console.log('onHourHandler', new Date(+time).toDateString());\n    onChangeTime((new Date(\n      // new Date(+time).getFullYear(),\n      // new Date(+time).getMonth(),\n      // new Date(+time).getDate(),\n      0,\n      0,\n      0,\n      new Date(+time).getHours(),\n      (new Date(+time).getMinutes() + value) % 60,\n    )).valueOf().toString());\n  };\n\n  const hours = useMemo(() => {\n    return (`0${new Date(+time).getHours().toString()}`).slice(-2);\n  }, [time]);\n  const minutes = useMemo(() => {\n    return ((`0${new Date(+time).getMinutes()}`).slice(-2));\n  }, [time]);\n\n  // eslint-disable-next-line no-console\n  // console.log('time', new Date(+time).toTimeString(), Boolean(time));\n\n  return (\n    <Wrapper>\n      {!time ? (\n        <Button\n          type=\"button\"\n          onClick={(e) => onHourHandler(e, 0)}\n        >\n          Select time\n        </Button>\n      ) : (\n        <>\n          <Hours>\n            <Button\n              type=\"button\"\n              onClick={(e) => onHourHandler(e, 1)}\n            >\n              <IoCaretUp />\n            </Button>\n            {hours}\n            <Button type=\"button\" onClick={(e) => onHourHandler(e, -1)}>\n              <IoCaretDown />\n            </Button>\n          </Hours>\n\n          <Minutes>\n            <Button type=\"button\" onClick={(e) => onMinutesHandler(e, 1)}>\n              <IoCaretUp />\n            </Button>\n            {minutes}\n\n            <Button type=\"button\" onClick={(e) => onMinutesHandler(e, -1)}>\n              <IoCaretDown />\n            </Button>\n          </Minutes>\n        </>\n      )}\n    </Wrapper>\n  );\n});\n","import {\n  ChangeEvent,\n  // ChangeEvent,\n  FunctionComponent,\n  RefObject,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport styled from 'styled-components';\n\nimport { COLOR } from '../../constants/COLOR';\nimport { FORM_DATA } from '../../constants/FORM_DATA';\nimport { handleClickOutside } from '../../helpers/handleClickOutside';\nimport {\n} from '../../store/features/Controls/controlsSlice';\nimport {\n  addTodo,\n  selectCurrentDate,\n} from '../../store/features/Interval/intervalSlice';\nimport {\n  useAppDispatch,\n  useAppSelector,\n} from '../../store/hooks';\nimport { ColorKeys } from '../../type/Color';\nimport { FormDataType } from '../../type/Form';\nimport { Button } from '../Button';\nimport { DatePicker } from '../DatePicker/DatePicker';\nimport { TimePicker } from '../TimePicker/TimePicker';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  z-index: 100;\n  background-color: white;\n  opacity: 1;\n  width: 460px;\n  box-sizing: border-box;\n  padding: 20px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nconst Form = styled.form`\n`;\n\nconst FormItem = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  & label {\n    width: 150px;\n    text-align: right;\n    padding-right: 10px;\n    box-sizing: border-box;\n  }\n`;\n\ninterface FormBodyProps {\n  buttonRef: RefObject<HTMLButtonElement>;\n  onShowFormHandler: () => void;\n}\n\nexport const FormContainer: FunctionComponent<FormBodyProps>\n= ({ buttonRef, onShowFormHandler }) => {\n  const dispatch = useAppDispatch();\n  const [value, setValue] = useState<FormDataType>({\n    title: '',\n    description: '',\n    date: '',\n    time: '',\n    color: 'default',\n  });\n  const [\n    isShowDatePickerContainer,\n    setIsShowDatePickerContainer,\n  ] = useState<boolean>(false);\n\n  const formRef = useRef<HTMLDivElement>(null);\n  const currentDate = useAppSelector(selectCurrentDate);\n  // const [isShowTimePickerContainer, setIsShowTimePickerContainer]\n  // = useState<boolean>(false);\n\n  useEffect(() => {\n    document.addEventListener('click', (event) => handleClickOutside(\n      event, buttonRef, formRef, onShowFormHandler,\n    ));\n\n    setValue({ ...value, date: currentDate.toString() });\n\n    return () => {\n      document.removeEventListener('click', (event) => handleClickOutside(\n        event, buttonRef, formRef, onShowFormHandler,\n      ));\n    };\n  }, []);\n\n  const handleChange = useCallback((\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setValue((prevValue) => ({\n      ...prevValue,\n      [e.target.name]: e.target.value,\n    }));\n  }, []);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    // eslint-disable-next-line no-console\n    console.log('Form onSubmit');\n\n    // eslint-disable-next-line no-console\n    console.log(value);\n\n    const addTodoItem = {\n      ...value,\n      todoId: `${new Date().valueOf()}`,\n    };\n\n    dispatch(addTodo(addTodoItem));\n  };\n\n  const onChangeDate = useCallback((newDate: number) => {\n    // eslint-disable-next-line no-console\n    // console.log('onChangeDate');\n\n    setValue((prevValue: FormDataType) => ({\n      ...prevValue,\n      [FORM_DATA.DATE]: String(newDate),\n    }));\n\n    setIsShowDatePickerContainer(false);\n  }, []);\n\n  const onChangeTime = useCallback((newTime: string) => {\n    // eslint-disable-next-line no-console\n    // console.log('onChangeTime');\n\n    setValue((prevValue: FormDataType) => ({\n      ...prevValue,\n      [FORM_DATA.TIME]: String(newTime),\n    }));\n\n    // setIsShowTimePickerContainer(false);\n  }, []);\n\n  const onShowDatePickerHandler = () => {\n    setIsShowDatePickerContainer((prev) => !prev);\n  };\n\n  // const onShowTimePickerHandler = () => {\n  //   setIsShowTimePickerContainer(!isShowTimePickerContainer);\n  // };\n\n  const dateValue = new Date(+value[FORM_DATA.DATE as keyof FormDataType]\n    || currentDate).toDateString();\n\n  const timeValue = useMemo(() => {\n    return value[FORM_DATA.TIME as keyof FormDataType]\n      ? new Date(+value[FORM_DATA.TIME as keyof FormDataType]\n        || currentDate).toTimeString().split(' ')[0]\n      : 'no time';\n  }, [value[FORM_DATA.TIME as keyof FormDataType]]);\n\n  // eslint-disable-next-line no-console\n  console.log('render Form');\n\n  return (\n    <Wrapper ref={formRef}>\n      <Form onSubmit={handleSubmit}>\n        <FormItem key={FORM_DATA.TITLE}>\n          <label htmlFor={FORM_DATA.TITLE}>\n            {FORM_DATA.TITLE}\n            :&nbsp;\n          </label>\n          <input\n            id={FORM_DATA.TITLE}\n            type=\"text\"\n            name={FORM_DATA.TITLE}\n            value={value[FORM_DATA.TITLE as keyof FormDataType]}\n            onChange={handleChange}\n            placeholder={`input ${FORM_DATA.TITLE}`}\n          />\n        </FormItem>\n\n        <FormItem key={FORM_DATA.DESCRIPTION}>\n          <label htmlFor={FORM_DATA.DESCRIPTION}>\n            {FORM_DATA.DESCRIPTION}\n            :&nbsp;\n          </label>\n          <input\n            id={FORM_DATA.DESCRIPTION}\n            type=\"text\"\n            name={FORM_DATA.DESCRIPTION}\n            value={value[FORM_DATA.DESCRIPTION as keyof FormDataType]}\n            onChange={handleChange}\n            placeholder={`input ${FORM_DATA.DESCRIPTION}`}\n          />\n        </FormItem>\n\n        <FormItem key={FORM_DATA.DATE}>\n          <label htmlFor={FORM_DATA.DATE}>\n            {FORM_DATA.DATE}\n            :&nbsp;\n          </label>\n          {dateValue}\n          <DatePicker\n            currentDate={currentDate}\n            onChangeDate={onChangeDate}\n            isShowDatePickerContainer={isShowDatePickerContainer}\n            onShowDatePickerHandler={onShowDatePickerHandler}\n          />\n        </FormItem>\n\n        <FormItem key={FORM_DATA.TIME}>\n          <label htmlFor={FORM_DATA.TIME}>\n            {FORM_DATA.TIME}\n            :&nbsp;\n          </label>\n          {timeValue}\n          <TimePicker\n            time={value[FORM_DATA.TIME as keyof FormDataType]}\n            onChangeTime={onChangeTime}\n          />\n        </FormItem>\n\n        <FormItem key={FORM_DATA.COLOR}>\n          <label htmlFor={FORM_DATA.COLOR}>\n            {FORM_DATA.COLOR}\n            :&nbsp;\n          </label>\n\n          <select\n            name={FORM_DATA.COLOR}\n            id={FORM_DATA.COLOR}\n            value={value[FORM_DATA.COLOR as keyof FormDataType]}\n            onChange={handleChange}\n          >\n            <option\n              value=\"default\"\n              defaultValue=\"default\"\n              disabled\n            >\n              Chose color\n            </option>\n            {Object.keys(COLOR).map((item) => (\n              <option\n                key={COLOR[item as ColorKeys].value}\n                value={COLOR[item as ColorKeys].value}\n              >\n                {COLOR[item as ColorKeys].label}\n              </option>\n            ))}\n          </select>\n        </FormItem>\n\n        <Button type=\"submit\" value=\"Submit\">Add Todo</Button>\n      </Form>\n    </Wrapper>\n  );\n};\n","import {\n  FunctionComponent,\n  useCallback,\n  useRef,\n} from 'react';\nimport styled from 'styled-components';\nimport { POPUP } from '../../constants/POPUP';\nimport {\n  selectIsShowAddItem,\n  switchPopup,\n} from '../../store/features/Controls/controlsSlice';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { Button } from '../Button';\nimport { FormContainer } from './Form.Container';\n\nconst Wrapper = styled.div`\n  background-color: white;\n  z-index: 150;\n`;\n\nexport const Form: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const isFormOpen = useAppSelector(selectIsShowAddItem);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n\n  const onShowFormHandler = useCallback(\n    () => dispatch(switchPopup(POPUP.IS_SHOW_ADD_ITEM)), [],\n  );\n\n  return (\n    <Wrapper>\n      <Button\n        ref={buttonRef}\n        onClick={onShowFormHandler}\n      >\n        Add new item\n      </Button>\n\n      {isFormOpen && (\n        <FormContainer\n          buttonRef={buttonRef}\n          onShowFormHandler={onShowFormHandler}\n        />\n      )}\n    </Wrapper>\n  );\n};\n","import {\n  FunctionComponent,\n} from 'react';\nimport styled from 'styled-components';\n\nimport { FORMAT } from '../constants/FORMAT';\nimport { MONTH_NAMES } from '../constants/MONTH';\nimport { POPUP } from '../constants/POPUP';\nimport {\n  closeAllPopup,\n  selectIsShowDatePicker,\n  switchPopup,\n} from '../store/features/Controls/controlsSlice';\nimport {\n  selectCurrentDate,\n  selectFormat,\n  setFormat,\n  setIntervalCalendar,\n  setSpecialDate,\n} from '../store/features/Interval/intervalSlice';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { ArrowNavigator } from './ArrowNavigator';\nimport { DatePicker } from '../UI/DatePicker/DatePicker';\nimport { Form } from '../UI/Form/Form';\n\nconst Wrapper = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n`;\n\nconst Back = styled.div<{ format: string }>`\n  cursor: pointer;\n`;\n\nconst ControlsNavigate = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const Controls: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const currentDate = useAppSelector(selectCurrentDate);\n  const format = useAppSelector(selectFormat);\n  const fullNameMonth = MONTH_NAMES[new Date(currentDate).getMonth()];\n  const fullYear = new Date(currentDate).getFullYear();\n  const isShowDatePickerContainer = useAppSelector(selectIsShowDatePicker);\n\n  const onGoToPrevFormat = () => {\n    if (format === FORMAT.YEAR) {\n      return;\n    }\n\n    switch (format) {\n      case FORMAT.DAY:\n      case FORMAT.WEEK:\n        dispatch(setFormat(FORMAT.MONTH));\n        break;\n\n      case FORMAT.MONTH:\n        dispatch(setFormat(FORMAT.YEAR));\n        break;\n\n      default:\n    }\n\n    dispatch(setIntervalCalendar());\n  };\n\n  const onChangeDate = (day: number) => {\n    dispatch(closeAllPopup());\n    dispatch(setSpecialDate(new Date(day).valueOf()));\n    dispatch(setFormat(FORMAT.MONTH));\n    dispatch(setIntervalCalendar());\n  };\n\n  const onShowDatePickerHandler = () => {\n    dispatch(switchPopup(POPUP.IS_SHOW_DATE_PICKER));\n  };\n\n  return (\n    <Wrapper>\n      <Back\n        format={format}\n        onClick={onGoToPrevFormat}\n      >\n        {(format === FORMAT.DAY || format === FORMAT.WEEK) && fullNameMonth}\n        {(format === FORMAT.MONTH || format === FORMAT.YEAR) && fullYear}\n      </Back>\n\n      <Form />\n\n      <ControlsNavigate>\n        <ArrowNavigator />\n\n        <DatePicker\n          currentDate={currentDate}\n          onChangeDate={onChangeDate}\n          isShowDatePickerContainer={isShowDatePickerContainer}\n          onShowDatePickerHandler={onShowDatePickerHandler}\n        />\n      </ControlsNavigate>\n    </Wrapper>\n  );\n};\n","import { createHashRouter, Outlet } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { NotFound } from './pages/NotFound';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { PostPage } from './pages/PostPage/PostPage';\nimport { Controls } from './components/Controls';\n\nconst Wrapper = styled.div`\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 100vh;\n  `;\n\nconst Header = styled.header`\n  max-width: 1200px;\n  margin: 0 auto;\n  text-align: center;\n  margin-bottom: 1rem;\n`;\n\nconst Main = styled.main`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nfunction App() {\n  return (\n    <Wrapper>\n      <Header>\n        <h1>Calendar</h1>\n        <Controls />\n      </Header>\n\n      <Main>\n        <Outlet />\n      </Main>\n    </Wrapper>\n  );\n}\n\nexport const router = createHashRouter([\n  {\n    path: '/',\n    element: <App />,\n    errorElement: <NotFound />,\n    id: 'root',\n    children: [\n      {\n        path: '/',\n        element: <HomePage />,\n        id: 'homepage',\n        errorElement: <>Error on Homepage</>,\n      },\n      {\n        path: '/post/:id',\n        element: <PostPage />,\n        errorElement: <>Error on PostPage</>,\n      },\n    ],\n  },\n]);\n","/* eslint-disable import/no-cycle */\nimport {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport postsReducer from './features/Posts/postsSlice';\nimport intervalSlice from './features/Interval/intervalSlice';\nimport controlsSlice from './features/Controls/controlsSlice';\nimport todosSlice from './features/Todo/todoSlice';\n\nconst rootReducer = combineReducers({\n  posts: postsReducer,\n  interval: intervalSlice,\n  control: controlsSlice,\n  todos: todosSlice,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['interval', 'todos'],\n  // blacklist: ['interval'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [\n        FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER,\n        'posts',\n      ],\n    },\n  }),\n});\n\nexport default store;\n\nexport const persistor = persistStore(store);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n\n/* eslint-disable @typescript-eslint/indent */\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { RouterProvider } from 'react-router-dom';\nimport { router } from './App';\nimport store, { persistor } from './store';\n\nimport './index.css';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement,\n);\n\nroot.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <RouterProvider router={router} />\n    </PersistGate>\n  </Provider>,\n);\n"],"sourceRoot":""}