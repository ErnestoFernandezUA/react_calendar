{"version":3,"sources":["pages/NotFound.tsx","constants/FORMAT.ts","store/features/Interval/intervalSlice.ts","store/hooks.ts","components/Day.tsx","components/List.tsx","helpers/divideYear.ts","pages/HomePage/HomePage.tsx","helpers/buildInterval.ts","utils/axiosClient.ts","store/features/Posts/postsSlice.ts","api/post.ts","pages/PostPage/PostPage.tsx","components/Header.tsx","App.tsx","store/index.ts","index.tsx"],"names":["NotFound","FORMAT","DAY","WEEK","MONTH","YEAR","initialState","currentDate","start","end","storage","formatCalendar","intervalSlice","createAsyncThunk","a","createSlice","name","reducers","setCurrentDate","state","Date","valueOf","setSpecialDate","action","payload","addTodo","push","setFormat","console","log","setIntervalCalendar","toDateString","getFullYear","getMonth","getDate","toString","date","dayOfWeek","getDay","IS_MONDAY_FIRST_DAY_OF_WEEK","resetState","actions","selectCurrentDate","interval","selectStartInterval","selectEndInterval","selectFormat","useAppDispatch","useDispatch","useAppSelector","useSelector","Wrapper","styled","div","format","css","isWeekend","DayComponent","startDay","dayString","List","prepared","year","i","length","currentMonth","month","divideYear","map","day","HomePage","dispatch","buildInterval","useEffect","className","baseURL","instance","axios","create","client","url","get","response","data","statusLoading","error","getPostsAsync","postsSlice","addPosts","setStatus","setError","extraReducers","builder","addCase","pending","fulfilled","rejected","selectPosts","posts","PostPage","id","useParams","post","find","p","String","to","title","body","Header","defaultValue","onChange","e","formatValue","target","value","Object","keys","item","formatKey","App","router","createHashRouter","path","element","errorElement","children","rootReducer","combineReducers","postsReducer","persistConfig","key","whitelist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","createRoot","document","getElementById","render","loading"],"mappings":"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","file":"static/js/main.f6258499.chunk.js","sourcesContent":["import { FunctionComponent } from 'react';\r\n\r\nexport const NotFound: FunctionComponent = () => {\r\n  return (\r\n    <div>\r\n      This page doesn&nbsp;t exist.\r\n    </div>\r\n  );\r\n};\r\n","import { FormatKeys, FormatValue } from '../type/FormatType';\r\n\r\nexport const FORMAT: { [key in FormatKeys]: FormatValue } = {\r\n  DAY: 'day',\r\n  WEEK: 'week',\r\n  MONTH: 'month',\r\n  YEAR: 'year',\r\n};\r\n","/* eslint-disable no-case-declarations */\r\n/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n// eslint-disable-next-line import/no-cycle\r\nimport { RootState } from '../..';\r\nimport { FORMAT } from '../../../constants/FORMAT';\r\nimport { FormatValue } from '../../../type/FormatType';\r\nimport { Todo } from '../../../type/Todo';\r\n\r\nconst IS_MONDAY_FIRST_DAY_OF_WEEK = 1;\r\n\r\nexport interface IntervalState {\r\n  currentDate: number;\r\n  start: number;\r\n  end: number;\r\n\r\n  storage: Todo[];\r\n  formatCalendar: FormatValue;\r\n}\r\n\r\nconst initialState: IntervalState = {\r\n  currentDate: 0,\r\n  start: 0,\r\n  end: 0,\r\n\r\n  storage: [],\r\n  formatCalendar: FORMAT.MONTH,\r\n};\r\n\r\nexport const getIntervalAsync = createAsyncThunk(\r\n  'Interval/fetchInterval',\r\n  async () => {\r\n    // const response: Post[] = await getAllInterval();\r\n\r\n    // eslint-disable-next-line no-console\r\n    // console.log(response);\r\n\r\n    // return response;\r\n  },\r\n);\r\n\r\nconst intervalSlice = createSlice({\r\n  name: 'post',\r\n  initialState,\r\n  reducers: {\r\n    setCurrentDate: (\r\n      state: IntervalState,\r\n    ) => {\r\n      state.currentDate = (new Date()).valueOf();\r\n    },\r\n    setSpecialDate: (\r\n      state: IntervalState,\r\n      action,\r\n    ) => {\r\n      state.currentDate = new Date(action.payload).valueOf();\r\n    },\r\n    addTodo: (state: IntervalState, action: PayloadAction<Todo>) => {\r\n      state.storage.push(action.payload);\r\n    },\r\n    setFormat: (\r\n      state: IntervalState,\r\n      action: PayloadAction<FormatValue>,\r\n    ) => {\r\n      state.formatCalendar = action.payload;\r\n\r\n      // eslint-disable-next-line no-console\r\n      console.log('setFormat', state.formatCalendar);\r\n    },\r\n    setIntervalCalendar: (state: IntervalState) => {\r\n      // eslint-disable-next-line no-console\r\n      console.log('setIntervalCalendar//',\r\n        'format calendar:', state.formatCalendar,\r\n        'current date:', new Date(state.currentDate).toDateString());\r\n\r\n      if (!state.currentDate) {\r\n        // eslint-disable-next-line no-console\r\n        console.log('break');\r\n\r\n        return;\r\n      }\r\n\r\n      switch (state.formatCalendar) {\r\n        case FORMAT.DAY:\r\n          state.start = new Date(\r\n            new Date(state.currentDate).getFullYear(),\r\n            new Date(state.currentDate).getMonth(),\r\n            new Date(state.currentDate).getDate(),\r\n          ).valueOf();\r\n\r\n          state.end = new Date(\r\n            new Date(state.currentDate).getFullYear(),\r\n            new Date(state.currentDate).getMonth(),\r\n            new Date(state.currentDate).getDate() + 1,\r\n          ).valueOf();\r\n\r\n          // eslint-disable-next-line no-console\r\n          console.log('day start', new Date(state.start).toString());\r\n          // eslint-disable-next-line no-console\r\n          console.log('day end', new Date(state.end).toString());\r\n          break;\r\n\r\n        case FORMAT.WEEK:\r\n          const date = new Date(state.currentDate).getDate();\r\n          const dayOfWeek = new Date(state.currentDate).getDay();\r\n\r\n          state.start = new Date(\r\n            new Date(state.currentDate).getFullYear(),\r\n            new Date(state.currentDate).getMonth(),\r\n            dayOfWeek === 0\r\n              ? date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK - 7\r\n              : date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK,\r\n          ).valueOf();\r\n\r\n          state.end = new Date(\r\n            new Date(state.currentDate).getFullYear(),\r\n            new Date(state.currentDate).getMonth(),\r\n            7 + dayOfWeek === 0\r\n              ? date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK - 7\r\n              : date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK,\r\n          ).valueOf();\r\n\r\n          // eslint-disable-next-line no-console\r\n          console.log('week start', new Date(state.start).toDateString());\r\n          // eslint-disable-next-line no-console\r\n          console.log('week end', new Date(state.end).toDateString());\r\n          break;\r\n\r\n        case FORMAT.MONTH:\r\n          state.start = new Date(\r\n            new Date(state.currentDate).getFullYear(),\r\n            new Date(state.currentDate).getMonth(),\r\n            IS_MONDAY_FIRST_DAY_OF_WEEK\r\n            - (new Date(\r\n              new Date(state.currentDate).getFullYear(),\r\n              new Date(state.currentDate).getMonth(),\r\n              0,\r\n            )).getDay(),\r\n          ).valueOf();\r\n\r\n          state.end = new Date(\r\n            new Date(state.currentDate).getFullYear(),\r\n            new Date(state.currentDate).getMonth() + 1,\r\n            (IS_MONDAY_FIRST_DAY_OF_WEEK\r\n            + 7\r\n            - (new Date(\r\n              new Date(state.currentDate).getFullYear(),\r\n              new Date(state.currentDate).getMonth() + 1,\r\n              0,\r\n            )).getDay()) % 7,\r\n          ).valueOf();\r\n\r\n          // eslint-disable-next-line no-console\r\n          // console.log('start month', new Date(state.start).toString());\r\n          // eslint-disable-next-line no-console\r\n          // console.log('end month', new Date(state.end).toString());\r\n\r\n          break;\r\n\r\n        case FORMAT.YEAR:\r\n          state.start = new Date(\r\n            new Date(state.currentDate).getFullYear(),\r\n            0,\r\n            1,\r\n          ).valueOf();\r\n\r\n          state.end = new Date(\r\n            new Date(state.currentDate).getFullYear() + 1,\r\n            0,\r\n            1,\r\n          ).valueOf();\r\n\r\n          // eslint-disable-next-line no-console\r\n          // console.log('start year', new Date(state.start).toString());\r\n          // eslint-disable-next-line no-console\r\n          // console.log('end year', new Date(state.end).toString());\r\n          break;\r\n\r\n        default:\r\n      }\r\n    },\r\n    resetState: (state: IntervalState) => {\r\n      return { ...state, ...initialState };\r\n    },\r\n  },\r\n  // extraReducers: (builder) => {\r\n  //   builder\r\n  //     .addCase(getIntervalAsync.pending, (state: IntervalState) => {\r\n  //       state.statusLoading = 'loading';\r\n  //     })\r\n  //     .addCase(getIntervalAsync.fulfilled, (state, action) => {\r\n  //       state.storage.push(...action.payload);\r\n  //       state.statusLoading = 'idle';\r\n  //     })\r\n  //     .addCase(getIntervalAsync.rejected, (state, action) => {\r\n  //       state.statusLoading = 'failed';\r\n\r\n  //       // eslint-disable-next-line no-console\r\n  //       console.log(action);\r\n  //     });\r\n  // },\r\n});\r\n\r\nexport default intervalSlice.reducer;\r\nexport const {\r\n  setCurrentDate,\r\n  setSpecialDate,\r\n  setFormat,\r\n  setIntervalCalendar,\r\n  addTodo,\r\n  resetState,\r\n} = intervalSlice.actions;\r\n\r\nexport const selectTodos = (state: RootState) => state.interval.storage;\r\nexport const selectCurrentDate\r\n= (state: RootState) => state.interval.currentDate;\r\nexport const selectStartInterval\r\n= (state: RootState) => state.interval.start;\r\nexport const selectEndInterval\r\n= (state: RootState) => state.interval.end;\r\n\r\nexport const selectFormat\r\n= (state: RootState) => state.interval.formatCalendar;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from '.';\r\n\r\nexport const useAppDispatch: () => AppDispatch = useDispatch;\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { FunctionComponent } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { selectFormat } from '../store/features/Interval/intervalSlice';\r\nimport { useAppSelector } from '../store/hooks';\r\n\r\nconst Wrapper = styled.div<{\r\n  format?: string,\r\n  isWeekend?: boolean,\r\n}>`\r\n  ${({ format }) => {\r\n    if (format === 'week') {\r\n      return css`\r\n      `;\r\n    }\r\n\r\n    return '';\r\n  }}\r\n\r\n  ${({ isWeekend }) => {\r\n    if (isWeekend) {\r\n      return css`\r\n        background-color: #caead6;\r\n      `;\r\n    }\r\n\r\n    return '';\r\n  }}\r\n`;\r\n\r\ninterface DayProps {\r\n  startDay: number;\r\n  // eslint-disable-next-line react/require-default-props\r\n  // key?: number;\r\n}\r\n\r\nexport const DayComponent: FunctionComponent<DayProps> = ({ startDay }) => {\r\n  const format = useAppSelector(selectFormat);\r\n  const dayString = new Date(startDay).toDateString();\r\n  const isWeekend = (new Date(startDay).getDay() === 0\r\n  || new Date(startDay).getDay() === 6);\r\n\r\n  if (format === 'year') {\r\n    return (\r\n      <Wrapper format={format} isWeekend={isWeekend}>\r\n        {new Date(startDay).getDate()}\r\n      </Wrapper>\r\n    );\r\n  }\r\n\r\n  if (format === 'week' || format === 'month') {\r\n    return (\r\n      <Wrapper format={format} isWeekend={isWeekend}>\r\n        {dayString}\r\n        {format}\r\n      </Wrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Wrapper format={format} isWeekend={isWeekend}>\r\n      {dayString}\r\n\r\n      List of TODOS:\r\n    </Wrapper>\r\n  );\r\n};\r\n","import { FunctionComponent } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { FORMAT } from '../constants/FORMAT';\r\nimport { divideYear } from '../helpers/divideYear';\r\nimport { selectFormat } from '../store/features/Interval/intervalSlice';\r\nimport { useAppSelector } from '../store/hooks';\r\nimport { DayComponent } from './Day';\r\n\r\nconst YEAR = styled.div<{ format?: string, isWeekend?: boolean }>`\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n\r\n  ${({ format }) => {\r\n    if (format === FORMAT.DAY) {\r\n      return css`\r\n        display: block;\r\n      `;\r\n    }\r\n\r\n    if (format === FORMAT.YEAR) {\r\n      return css`\r\n        grid-template-columns: repeat(3, 1fr);\r\n      `;\r\n    }\r\n\r\n    return '';\r\n  }}\r\n\r\n  ${({ isWeekend }) => {\r\n    if (isWeekend) {\r\n      return css`\r\n        background-color: #caead6;\r\n      `;\r\n    }\r\n\r\n    return '';\r\n  }}\r\n`;\r\n\r\ninterface ListProps {\r\n  interval: number[];\r\n}\r\n\r\nexport const List: FunctionComponent<ListProps> = ({ interval }) => {\r\n  const format = useAppSelector(selectFormat);\r\n  const prepared = [];\r\n\r\n  if (format === FORMAT.YEAR) {\r\n    prepared.push(...divideYear(interval));\r\n  } else {\r\n    prepared.push(...interval);\r\n  }\r\n\r\n  return (\r\n    <YEAR format={format}>\r\n      {interval.map((day: number) => (\r\n        <DayComponent key={day} startDay={day} />\r\n      ))}\r\n    </YEAR>\r\n  );\r\n};\r\n","export const divideYear = (interval: number[]) => {\r\n  const year = [];\r\n  let i = 0;\r\n\r\n  while (i < interval.length) {\r\n    const currentMonth = new Date(interval[i]).getMonth();\r\n    const month = [];\r\n\r\n    while (currentMonth === new Date(interval[i]).getMonth()) {\r\n      month.push(interval[i]);\r\n\r\n      i += 1;\r\n    }\r\n\r\n    year.push(month);\r\n  }\r\n\r\n  return year;\r\n};\r\n","import { FunctionComponent, useEffect } from 'react';\r\nimport { List } from '../../components/List';\r\nimport { buildInterval } from '../../helpers/buildInterval';\r\nimport {\r\n  selectCurrentDate,\r\n  selectEndInterval,\r\n  selectStartInterval,\r\n  setCurrentDate,\r\n  setFormat,\r\n  setIntervalCalendar,\r\n  setSpecialDate,\r\n} from '../../store/features/Interval/intervalSlice';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\nimport { FORMAT } from '../../constants/FORMAT';\r\n\r\nimport './HomePage.scss';\r\n\r\nexport const HomePage: FunctionComponent = () => {\r\n  const dispatch = useAppDispatch();\r\n  const currentDate = useAppSelector(selectCurrentDate);\r\n  const start = useAppSelector(selectStartInterval);\r\n  const end = useAppSelector(selectEndInterval);\r\n  const interval = buildInterval(start, end);\r\n\r\n  useEffect(() => {\r\n    if (!currentDate) {\r\n      dispatch(setCurrentDate());\r\n    }\r\n\r\n    dispatch(setSpecialDate(new Date(2023, 2, 19).valueOf()));\r\n    dispatch(setFormat(FORMAT.WEEK));\r\n    dispatch(setIntervalCalendar());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"HomePage\">\r\n      <List interval={interval} />\r\n    </div>\r\n  );\r\n};\r\n","export function buildInterval(start: number, end: number) {\r\n  const interval = [];\r\n  let day = start;\r\n\r\n  // eslint-disable-next-line no-console\r\n  // console.log('buildInterval//',\r\n  //   new Date(start).toDateString(),\r\n  //   '-----------',\r\n  //   new Date(end).toDateString());\r\n\r\n  while (day < end) {\r\n    interval.push(day);\r\n\r\n    day = new Date(\r\n      new Date(day).getFullYear(),\r\n      new Date(day).getMonth(),\r\n      new Date(day).getDate() + 1,\r\n    ).valueOf();\r\n  }\r\n\r\n  return interval;\r\n}\r\n","import axios from 'axios';\r\n\r\nconst baseURL = 'https://jsonplaceholder.typicode.com';\r\n\r\nconst instance = axios.create({\r\n  baseURL,\r\n});\r\n\r\ntype FetchData = {\r\n};\r\n\r\nexport const client = {\r\n  async get<T>(url: string) {\r\n    const response = await instance.get<T>(url);\r\n\r\n    // eslint-disable-next-line no-console\r\n    console.log('get', baseURL + url);\r\n\r\n    return response.data;\r\n  },\r\n\r\n  async post<T>(url: string, data: FetchData) {\r\n    const response = await instance.post<T>(url, data);\r\n\r\n    return response.data;\r\n  },\r\n\r\n  async patch<T>(url: string, data: FetchData) {\r\n    const response = await instance.patch<T>(url, data);\r\n\r\n    return response.data;\r\n  },\r\n\r\n  async delete(url: string) {\r\n    return instance.delete(url);\r\n  },\r\n};\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { getAllPosts } from '../../../api/post';\r\n// eslint-disable-next-line import/no-cycle\r\nimport { RootState } from '../..';\r\nimport { Post } from '../../../type/Post';\r\n\r\nexport interface PostsState {\r\n  storage: Post[];\r\n  statusLoading: 'idle' | 'loading' | 'failed';\r\n  error: unknown;\r\n}\r\n\r\nconst initialState: PostsState = {\r\n  storage: [],\r\n  statusLoading: 'idle',\r\n  error: null,\r\n};\r\n\r\nexport const getPostsAsync = createAsyncThunk('posts/fetchPosts', async () => {\r\n  const response: Post[] = await getAllPosts();\r\n\r\n  // eslint-disable-next-line no-console\r\n  console.log(response);\r\n\r\n  return response;\r\n});\r\n\r\nconst postsSlice = createSlice({\r\n  name: 'post',\r\n  initialState,\r\n  reducers: {\r\n    addPosts: (state: PostsState, action: PayloadAction<Post[]>) => {\r\n      state.storage.push(...action.payload);\r\n    },\r\n    setStatus: (\r\n      state: PostsState,\r\n      action: PayloadAction<'idle' | 'loading' | 'failed'>,\r\n    ) => {\r\n      state.statusLoading = action.payload;\r\n    },\r\n    setError: (state: PostsState, action: PayloadAction<unknown>) => {\r\n      state.error = action.payload;\r\n      state.statusLoading = 'failed';\r\n    },\r\n    resetState: (state: PostsState) => {\r\n      return { ...state, ...initialState };\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getPostsAsync.pending, (state: PostsState) => {\r\n        state.statusLoading = 'loading';\r\n      })\r\n      .addCase(getPostsAsync.fulfilled, (state, action) => {\r\n        state.storage.push(...action.payload);\r\n        state.statusLoading = 'idle';\r\n      })\r\n      .addCase(getPostsAsync.rejected, (state, action) => {\r\n        state.statusLoading = 'failed';\r\n\r\n        // eslint-disable-next-line no-console\r\n        console.log(action);\r\n      });\r\n  },\r\n});\r\n\r\nexport default postsSlice.reducer;\r\nexport const {\r\n  addPosts,\r\n  setStatus,\r\n  setError,\r\n  resetState,\r\n} = postsSlice.actions;\r\n\r\nexport const selectPosts = (state: RootState) => state.posts.storage;\r\nexport const selectPostStatusLoading\r\n= (state: RootState) => state.posts.statusLoading;\r\nexport const selectPostError = (state: RootState) => state.posts.error;\r\n","import { client } from '../utils/axiosClient';\r\nimport { Post } from '../type/Post';\r\n\r\nexport const getAllPosts = () => client.get<Post[]>('/posts/');\r\nexport const getPostById = (postId: number) => client.get<Post[]>(`/posts/${postId}`);\r\n","import { FunctionComponent } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\nimport { resetState, selectPosts } from '../../store/features/Posts/postsSlice';\r\n\r\nimport './PostPage.scss';\r\n\r\nexport const PostPage: FunctionComponent = () => {\r\n  const { id } = useParams();\r\n\r\n  // eslint-disable-next-line no-console\r\n  console.log(id);\r\n\r\n  const posts = useAppSelector(selectPosts);\r\n  const dispatch = useAppDispatch();\r\n\r\n  dispatch(resetState());\r\n\r\n  const post = posts.find(p => String(p.id) === String(id));\r\n\r\n  return (\r\n    <div\r\n      className=\"PostPage\"\r\n    >\r\n      <Link\r\n        to=\"/\"\r\n        className=\"PostPage__Link\"\r\n      >\r\n        Back\r\n      </Link>\r\n\r\n      {post ? (\r\n        <div>\r\n          <h1>{`PostPage: ${post.title}`}</h1>\r\n          <p>{post.body}</p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          post doesn&nbsp;t exist\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { FunctionComponent } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FORMAT } from '../constants/FORMAT';\r\nimport {\r\n  selectCurrentDate,\r\n  selectFormat,\r\n  setFormat,\r\n  setIntervalCalendar,\r\n} from '../store/features/Interval/intervalSlice';\r\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\r\nimport { FormatKeys, FormatValue } from '../type/FormatType';\r\n\r\nconst Wrapper = styled.div`\r\n`;\r\n\r\nexport const Header: FunctionComponent = () => {\r\n  const dispatch = useAppDispatch();\r\n  const currentDate = useAppSelector(selectCurrentDate);\r\n  const format = useAppSelector(selectFormat);\r\n\r\n  const onChange = (e:React.ChangeEvent<HTMLSelectElement>) => {\r\n    const formatValue = e.target.value as FormatValue;\r\n\r\n    dispatch(setFormat(formatValue));\r\n    dispatch(setIntervalCalendar());\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <p>{new Date(currentDate).toDateString()}</p>\r\n\r\n      <select\r\n        defaultValue={format}\r\n        onChange={onChange}\r\n      >\r\n        {Object.keys(FORMAT).map((item) => {\r\n          const formatKey = item as FormatKeys;\r\n\r\n          return (\r\n            <option\r\n              value={FORMAT[formatKey]}\r\n              key={item}\r\n            >\r\n              {FORMAT[formatKey]}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import { createHashRouter, Outlet } from 'react-router-dom';\r\nimport { NotFound } from './pages/NotFound';\r\nimport { HomePage } from './pages/HomePage/HomePage';\r\nimport { PostPage } from './pages/PostPage/PostPage';\r\nimport './App.scss';\r\nimport { Header } from './components/Header';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App__Header\">\r\n        <h1>Calendar</h1>\r\n        <Header />\r\n      </header>\r\n\r\n      <main className=\"App__Container\">\r\n        <Outlet />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const router = createHashRouter([\r\n  {\r\n    path: '/',\r\n    element: <App />,\r\n    errorElement: <NotFound />,\r\n    id: 'root',\r\n    children: [\r\n      {\r\n        path: '/',\r\n        element: <HomePage />,\r\n        id: 'homepage',\r\n        errorElement: <>Error on Homepage</>,\r\n      },\r\n      {\r\n        path: '/post/:id',\r\n        element: <PostPage />,\r\n        errorElement: <>Error on PostPage</>,\r\n      },\r\n    ],\r\n  },\r\n]);\r\n","import {\r\n  configureStore,\r\n  ThunkAction,\r\n  Action,\r\n  combineReducers,\r\n} from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n// eslint-disable-next-line import/no-cycle\r\nimport postsReducer from './features/Posts/postsSlice';\r\n// eslint-disable-next-line import/no-cycle\r\nimport intervalSlice from './features/Interval/intervalSlice';\r\n\r\nconst rootReducer = combineReducers({\r\n  posts: postsReducer,\r\n  interval: intervalSlice,\r\n});\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: ['interval'],\r\n  // blacklist: ['interval'],\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [\r\n        FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER,\r\n        'posts',\r\n      ],\r\n    },\r\n  }),\r\n});\r\n\r\nexport default store;\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\n/* eslint-disable @typescript-eslint/indent */\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","import ReactDOM from 'react-dom/client';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { RouterProvider } from 'react-router-dom';\r\nimport { router } from './App';\r\nimport store, { persistor } from './store';\r\nimport './index.css';\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement,\r\n);\r\n\r\nroot.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <RouterProvider router={router} />\r\n    </PersistGate>\r\n  </Provider>,\r\n);\r\n"],"sourceRoot":""}