{"version":3,"sources":["pages/NotFound.tsx","constants/FORMAT.ts","constants/MONTH.ts","store/features/Interval/intervalSlice.ts","store/hooks.ts","constants/WEEK.ts","store/features/Todo/todoSlice.ts","UI/Button.tsx","store/features/Controls/controlsSlice.ts","constants/POPUP.ts","components/Todos.tsx","components/Day.tsx","customHooks/useDayHook.ts","customHooks/useCurrentHook.ts","components/Month.tsx","helpers/buildInterval.ts","helpers/divideYear.ts","components/Year.tsx","pages/HomePage/HomePage.tsx","utils/axiosClient.ts","store/features/Posts/postsSlice.ts","api/post.ts","pages/PostPage/PostPage.tsx","constants/MOVE.ts","components/ArrowNavigator.tsx","helpers/handleClickOutside.tsx","UI/DatePicker/DatePicker.Container.tsx","helpers/buildArrayOfYears.ts","helpers/buildArrOfMonths.ts","helpers/buildArrOfDays.ts","UI/DatePicker/DatePicker.tsx","constants/COLOR.ts","constants/FORM_DATA.ts","UI/TimePicker/TimePicker.tsx","UI/Form/Form.tsx","UI/Form/FormParentControl.tsx","components/Controls.tsx","App.tsx","store/index.ts","index.tsx"],"names":["NotFound","FORMAT","MONTH_NAMES","MONTH_NAMES_CUT","initialState","currentDate","start","end","storage","formatCalendar","intervalSlice","createAsyncThunk","a","createSlice","name","reducers","setCurrentDate","state","Date","valueOf","setSpecialDate","action","payload","setFormat","console","log","navigateMonth","getFullYear","getMonth","Number","getDate","navigateYear","setIntervalCalendar","date","dayOfWeek","getDay","IS_MONDAY_FIRST_DAY_OF_WEEK","warn","addTodo","push","resetState","actions","selectCurrentDate","interval","selectStartInterval","selectEndInterval","selectFormat","useAppDispatch","useDispatch","useAppSelector","useSelector","WEEK","statusLoading","error","getTodos","delay","Promise","resolve","setTimeout","todos","getTodosAsync","response","todosSlice","changeTodo","map","todo","todoId","randomizeTodos","deleteTodo","filter","setStatus","setError","resetStateTodos","extraReducers","builder","addCase","pending","fulfilled","rejected","selectTodos","Button","styled","button","popup","isShowDatePicker","isShowForm","controlSlice","switchPopup","closeAllPopup","sentTodoToForm","resetTodo","selectIsShowDatePicker","control","selectIsShowAddItem","selectTodoToForm","POPUP","Wrapper","div","TodoContainer","format","css","TodoTitle","props","color","Todos","dispatch","todoRef","useRef","preparedTodos","_","i","isShowDots","length","ref","onClick","e","stopPropagation","onShowFormHandler","title","type","deleteTodoHandler","isWeekend","isNotCurrentMonth","isCurrentDay","isTodosToday","DayTitle","DayOfWeek","DateString","p","DayListTodos","Day","startDay","disabled","value","day","arr","toDateString","split","fullNameDayOfWeek","month","year","useDayHook","current","anyDay","isCurrentYear","isCurrentMonth","useCurrentHook","t","toTimeString","dayValue","target","HTMLButtonElement","dataset","onWeekClick","String","MonthTitle","MonthContainer","Month","monthName","countEmptyItem","empty","monthValue","onMonthHandler","emptyItem","buildInterval","Year","prepared","currentMonth","divideYear","HomePage","useEffect","baseURL","instance","axios","create","client","url","get","data","getPostsAsync","postsSlice","addPosts","selectPosts","posts","PostPage","id","useParams","post","find","className","to","body","MOVE","Arrow","Value","ArrowNavigator","fullNameMonth","fullYear","onNavigateHandler","currentTarget","handleClickOutside","event","refParent","refChild","onShowHandler","contains","Years","Months","Days","DatePickerContainer","onChangeDate","datePickerControlRef","onShowDatePickerHandler","useState","arrOfYears","setArrOfYears","arrOfMonths","setArrOfMonths","arrOfDays","setArrOfDays","datePickerContainerRef","document","addEventListener","removeEventListener","years","toString","buildArrayOfYears","onYearHandler","currentYear","arrOfMonth","label","buildArrOfMonths","startMonth","values","buildArrOfDays","y","m","d","onDayHandler","DatePickerTitle","DatePickerButton","DatePicker","isShowDatePickerContainer","controlRef","size","COLOR","URGENT","NORMAL","IMPORTANT","FORM_DATA","Hours","Minutes","TimePicker","memo","time","onChangeTime","onTimeHandler","hour","minute","newHours","getHours","newMinutes","getMinutes","hours","slice","minutes","FormContainer","form","FormItem","initialValueForm","description","Form","buttonRef","setValue","setIsShowDatePickerContainer","formRef","isShowTimePicker","setIsShowTimePicker","handleChange","useCallback","prevValue","newDate","newTime","dateValue","onSubmit","preventDefault","prepareDate","newTodo","htmlFor","onChange","placeholder","required","prev","show","onShowTimePickerHandler","defaultValue","Object","keys","item","FormParentControl","isFormOpen","Back","ControlsNavigate","Controls","Header","header","Main","main","App","router","createHashRouter","path","element","errorElement","children","rootReducer","combineReducers","postsReducer","controlsSlice","persistConfig","key","whitelist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","createRoot","getElementById","render","loading"],"mappings":"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","file":"static/js/main.5ae4097c.chunk.js","sourcesContent":["import { FunctionComponent } from 'react';\n\nexport const NotFound: FunctionComponent = () => {\n  return (\n    <div>\n      This page doesn&nbsp;t exist.\n    </div>\n  );\n};\n","import { FormatKeys, FormatValue } from '../type/Format';\n\nexport const FORMAT: { [key in FormatKeys]: FormatValue } = {\n  DAY: 'day',\n  WEEK: 'week',\n  MONTH: 'month',\n  YEAR: 'year',\n};\n","export const MONTH_NAMES = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport const MONTH_NAMES_CUT = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n","/* eslint-disable no-case-declarations */\n/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../..';\nimport { FORMAT } from '../../../constants/FORMAT';\nimport { FormatValue } from '../../../type/Format';\nimport { Todo } from '../../../type/Todo';\n\nexport const IS_MONDAY_FIRST_DAY_OF_WEEK = 1;\n\nexport interface IntervalState {\n  currentDate: number;\n  start: number;\n  end: number;\n\n  storage: Todo[];\n  formatCalendar: FormatValue;\n}\n\nconst initialState: IntervalState = {\n  currentDate: 0,\n  start: 0,\n  end: 0,\n\n  storage: [],\n  formatCalendar: FORMAT.MONTH,\n};\n\nexport const getIntervalAsync = createAsyncThunk(\n  'Interval/fetchInterval',\n  async () => {\n    // const response: Post[] = await getAllInterval();\n\n    // eslint-disable-next-line no-console\n    // console.log(response);\n\n    // return response;\n  },\n);\n\nconst intervalSlice = createSlice({\n  name: 'interval',\n  initialState,\n  reducers: {\n    setCurrentDate: (\n      state: IntervalState,\n    ) => {\n      state.currentDate = (new Date()).valueOf();\n    },\n    setSpecialDate: (\n      state: IntervalState,\n      action,\n    ) => {\n      state.currentDate = new Date(action.payload).valueOf();\n    },\n    setFormat: (\n      state: IntervalState,\n      action: PayloadAction<FormatValue>,\n    ) => {\n      state.formatCalendar = action.payload;\n\n      // eslint-disable-next-line no-console\n      console.log('setFormat', state.formatCalendar);\n    },\n    navigateMonth: (\n      state: IntervalState,\n      action: PayloadAction<string>,\n    ) => {\n      // eslint-disable-next-line no-console\n      console.log('navigateMonth', action.payload);\n\n      state.currentDate = new Date(\n        new Date(state.currentDate).getFullYear(),\n        new Date(state.currentDate).getMonth()\n        + Number(action.payload),\n        new Date(state.currentDate).getDate(),\n      ).valueOf();\n    },\n    navigateYear: (\n      state: IntervalState,\n      action: PayloadAction<string>,\n    ) => {\n      // eslint-disable-next-line no-console\n      console.log('navigateYear', action.payload);\n\n      state.currentDate = new Date(\n        new Date(state.currentDate).getFullYear()\n        + Number(action.payload),\n        new Date(state.currentDate).getMonth(),\n        new Date(state.currentDate).getDate(),\n      ).valueOf();\n    },\n    setIntervalCalendar: (state: IntervalState) => {\n      // eslint-disable-next-line no-console\n      // console.log('setIntervalCalendar//',\n      //   'format calendar:', state.formatCalendar,\n      //   'current date:', new Date(state.currentDate).toDateString());\n\n      if (!state.currentDate) {\n        // eslint-disable-next-line no-console\n        console.warn('no currentDate in IntervalSlice');\n\n        return;\n      }\n\n      switch (state.formatCalendar) {\n        case FORMAT.DAY:\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            new Date(state.currentDate).getDate(),\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            new Date(state.currentDate).getDate() + 1,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          // console.log('day start', new Date(state.start).toString());\n          // eslint-disable-next-line no-console\n          // console.log('day end', new Date(state.end).toString());\n          break;\n\n        case FORMAT.WEEK:\n          const date = new Date(state.currentDate).getDate();\n          const dayOfWeek = new Date(state.currentDate).getDay();\n\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            dayOfWeek === 0\n              ? date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK - 7\n              : date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK,\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            (dayOfWeek === 0\n              ? date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK - 7\n              : date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK) + 7,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          // console.log('week start', new Date(state.start).toDateString());\n          // eslint-disable-next-line no-console\n          // console.log('week end', new Date(state.end).toDateString());\n          break;\n\n        case FORMAT.MONTH:\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            IS_MONDAY_FIRST_DAY_OF_WEEK\n            - (new Date(\n              new Date(state.currentDate).getFullYear(),\n              new Date(state.currentDate).getMonth(),\n              0,\n            )).getDay(),\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth() + 1,\n            (IS_MONDAY_FIRST_DAY_OF_WEEK\n            + 7\n            - (new Date(\n              new Date(state.currentDate).getFullYear(),\n              new Date(state.currentDate).getMonth() + 1,\n              0,\n            )).getDay()) % 7,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          // console.log('start month', new Date(state.start).toString());\n          // eslint-disable-next-line no-console\n          // console.log('end month', new Date(state.end).toString());\n\n          break;\n\n        case FORMAT.YEAR:\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            0,\n            1,\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear() + 1,\n            0,\n            1,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          // console.log('start year', new Date(state.start).toString());\n          // eslint-disable-next-line no-console\n          // console.log('end year', new Date(state.end).toString());\n          break;\n\n        default:\n      }\n    },\n    addTodo: (state: IntervalState, action: PayloadAction<Todo>) => {\n      state.storage.push(action.payload);\n    },\n    resetState: (state: IntervalState) => {\n      return { ...state, ...initialState };\n    },\n  },\n  // extraReducers: (builder) => {\n  //   builder\n  //     .addCase(getIntervalAsync.pending, (state: IntervalState) => {\n  //       state.statusLoading = 'loading';\n  //     })\n  //     .addCase(getIntervalAsync.fulfilled, (state, action) => {\n  //       state.storage.push(...action.payload);\n  //       state.statusLoading = 'idle';\n  //     })\n  //     .addCase(getIntervalAsync.rejected, (state, action) => {\n  //       state.statusLoading = 'failed';\n\n  //       // eslint-disable-next-line no-console\n  //       console.log(action);\n  //     });\n  // },\n});\n\nexport default intervalSlice.reducer;\nexport const {\n  setCurrentDate,\n  setSpecialDate,\n  setFormat,\n  navigateMonth,\n  navigateYear,\n  setIntervalCalendar,\n  addTodo,\n  resetState,\n} = intervalSlice.actions;\n\nexport const selectTodos = (state: RootState) => state.interval.storage;\nexport const selectCurrentDate\n= (state: RootState) => state.interval.currentDate;\nexport const selectStartInterval\n= (state: RootState) => state.interval.start;\nexport const selectEndInterval\n= (state: RootState) => state.interval.end;\n\nexport const selectFormat\n= (state: RootState) => state.interval.formatCalendar;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '.';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export const WEEK = [\n  'Sunday',\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n];\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../..';\nimport { Todo } from '../../../type/Todo';\nimport todos from '../../../server/todos.json';\n\nexport interface TodosState {\n  storage: Todo[];\n  statusLoading: 'idle' | 'loading' | 'failed';\n  error: unknown;\n}\n\nconst initialState: TodosState = {\n  storage: [],\n  statusLoading: 'idle',\n  error: null,\n};\n\nconst getTodos = async (delay = 3000): Promise<Todo[]> => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(todos as unknown as Todo[]);\n    }, delay);\n  });\n};\n\nexport const getTodosAsync = createAsyncThunk(\n  'todos/fetchTodos',\n  async () => {\n    const response: Todo[] = await getTodos();\n\n    // eslint-disable-next-line no-console\n    console.log(response);\n\n    return response;\n  },\n);\n\nconst todosSlice = createSlice({\n  name: 'interval',\n  initialState,\n  reducers: {\n    addTodo: (state: TodosState, action: PayloadAction<Todo>) => {\n      state.storage.push(action.payload);\n    },\n    changeTodo: (\n      state: TodosState,\n      action: PayloadAction<{ todoId: string, todo: Todo }>,\n    ) => {\n      state.storage = state.storage.map(todo => {\n        if (todo.todoId === action.payload.todoId) {\n          return action.payload.todo;\n        }\n\n        return todo;\n      });\n    },\n    randomizeTodos: (\n      // state: TodosState, action: PayloadAction<Todo>,\n    ) => {\n      // state.storage = state.storage.map(todo => {\n      //   if (todo.todoId === action.payload.todoId) {\n      //     return action.payload;\n      //   }\n\n      //   return todo;\n      // });\n    },\n    deleteTodo: (state: TodosState, action: PayloadAction<string>) => {\n      // eslint-disable-next-line no-console\n      console.log('deleteTodos');\n\n      state.storage\n      = state.storage.filter(todo => todo.todoId !== action.payload);\n    },\n    setStatus: (\n      state: TodosState,\n      action: PayloadAction<'idle' | 'loading' | 'failed'>,\n    ) => {\n      state.statusLoading = action.payload;\n    },\n    setError: (state: TodosState, action: PayloadAction<unknown>) => {\n      state.error = action.payload;\n      state.statusLoading = 'failed';\n    },\n    resetStateTodos: () => {\n      // eslint-disable-next-line no-console\n      console.log('reset todos');\n\n      return initialState;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getTodosAsync.pending, (state: TodosState) => {\n        state.statusLoading = 'loading';\n      })\n      .addCase(getTodosAsync.fulfilled, (state, action) => {\n        state.storage.push(...action.payload);\n        state.statusLoading = 'idle';\n      })\n      .addCase(getTodosAsync.rejected, (state, action) => {\n        state.statusLoading = 'failed';\n\n        // eslint-disable-next-line no-console\n        console.log(action);\n      });\n  },\n});\n\nexport default todosSlice.reducer;\nexport const {\n  addTodo,\n  changeTodo,\n  deleteTodo,\n  setStatus,\n  setError,\n  resetStateTodos,\n} = todosSlice.actions;\n\nexport const selectTodos = (state: RootState) => state.todos.storage;\nexport const selectTodosStatusLoading\n= (state: RootState) => state.todos.statusLoading;\nexport const selectTodosError = (state: RootState) => state.todos.error;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  outline: none;\n  justify-content: center;\n  cursor: pointer;\n  height: fit-content;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-family: 'Raleway', sans-serif;\n\n  &:hover{\n    background-color: #e6e6e6;\n  }\n`;\n","/* eslint-disable no-case-declarations */\n/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../..';\nimport { PopupValues } from '../../../type/Popup';\nimport { Todo } from '../../../type/Todo';\n\nexport interface ControlState {\n  popup: {\n    isShowDatePicker: boolean;\n    isShowForm: boolean;\n  },\n  todo: Todo | null;\n}\n\nconst initialState: ControlState = {\n  popup: {\n    isShowDatePicker: false,\n    isShowForm: false,\n  },\n  todo: null,\n};\n\nconst controlSlice = createSlice({\n  name: 'controls',\n  initialState,\n  reducers: {\n    // switchPopupInForm: (\n    //   state: ControlState,\n    // ) => {\n    //   // eslint-disable-next-line no-console\n    //   console.log('switchPopupInForm');\n    //   state.isShowDatePickerForm = !state.isShowDatePickerForm;\n    // },\n    switchPopup: (\n      state: ControlState,\n      action: PayloadAction<PopupValues>,\n    ) => {\n      // eslint-disable-next-line no-console\n      console.log('switchPopup', action.payload);\n      state.popup = {\n        ...initialState.popup,\n        [action.payload]: !state.popup[action.payload],\n      };\n    },\n    closeAllPopup: (\n      state: ControlState,\n    ) => {\n      state.popup = {\n        ...initialState.popup,\n      };\n    },\n    sentTodoToForm: (\n      state: ControlState,\n      action: PayloadAction<Todo>,\n    ) => {\n      state.todo = action.payload;\n    },\n    resetTodo: (state: ControlState) => {\n      state.todo = initialState.todo;\n    },\n    resetState: (state: ControlState) => {\n      return { ...state, ...initialState };\n    },\n  },\n});\n\nexport default controlSlice.reducer;\nexport const {\n  switchPopup,\n  closeAllPopup,\n  resetState,\n  resetTodo,\n  sentTodoToForm,\n} = controlSlice.actions;\n\nexport const selectIsShowDatePicker\n = (state: RootState) => state.control.popup.isShowDatePicker;\nexport const selectIsShowAddItem\n= (state: RootState) => state.control.popup.isShowForm;\n// export const selectIsShowDatePickerInForm\n// = (state: RootState) => state.control.isShowDatePickerForm;\nexport const selectTodoToForm\n= (state: RootState) => state.control.todo;\n","import { PopupKeys, PopupValues } from '../type/Popup';\n\nexport const POPUP: { [key in PopupKeys]: PopupValues } = {\n  IS_SHOW_DATE_PICKER: 'isShowDatePicker',\n  IS_SHOW_FORM: 'isShowForm',\n};\n","import {\n  FunctionComponent,\n  useRef,\n} from 'react';\nimport styled, { css } from 'styled-components';\nimport {\n  IoEllipsisHorizontal,\n  // IoClose,\n  // IoBuild,\n  IoCart,\n} from 'react-icons/io5';\n\nimport { FORMAT } from '../constants/FORMAT';\nimport { selectFormat } from '../store/features/Interval/intervalSlice';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { Todo } from '../type/Todo';\nimport { Button } from '../UI/Button';\nimport { deleteTodo } from '../store/features/Todo/todoSlice';\nimport {\n  sentTodoToForm, switchPopup,\n  // switchPopupInForm,\n} from '../store/features/Controls/controlsSlice';\nimport { POPUP } from '../constants/POPUP';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst TodoContainer = styled.div<{ format?: string }>`\n  width: 100%;\n  line-height: 14px;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n\n\n  & div {\n    margin-bottom: 4px;\n    /* max-width: 100px; */\n  }\n\n  ${({ format }) => (format === FORMAT.YEAR)\n  && css`\n    display: none;\n  `}\n`;\n\nconst TodoTitle = styled.div<{ color: string, format?: string }>`\n  background-color: ${props => props.color};\n\n  padding: 7px 10px;\n  border-radius: 8px;\n  display: flex;\n  align-items: stretch;\n  justify-content: space-between;\n  width: 100%;\n  display: flex;\n  align-items: center;\n\n  & span {\n    ${({ format }) => (format === FORMAT.MONTH || format === FORMAT.WEEK) && css`\n      overflow: hidden;\n      text-overflow: ellipsis;\n      max-width: 100px;\n      white-space: nowrap;\n      display: -webkit-box;\n      -webkit-line-clamp: 1;\n      -webkit-box-direction: normal;\n      -webkit-box-orient: vertical;\n      overflow-wrap: break-word;\n    `}\n  }\n`;\n\ninterface TodosProps {\n  todos: Todo[];\n}\n\nexport const Todos: FunctionComponent<TodosProps> = ({ todos }) => {\n  const dispatch = useAppDispatch();\n  const format = useAppSelector(selectFormat);\n  const todoRef = useRef<HTMLDivElement>(null);\n\n  const preparedTodos = todos.filter(\n    (_, i) => ((format === FORMAT.MONTH) ? i < 4 : true),\n  );\n\n  const isShowDots = (format === FORMAT.MONTH) && todos.length > 4;\n  const onShowFormHandler = (\n    e: React.MouseEvent<HTMLDivElement>,\n    todo: Todo,\n  ) => {\n    // eslint-disable-next-line no-console\n    console.log('onShowFormHandler');\n    e.stopPropagation();\n\n    dispatch(sentTodoToForm(todo));\n    dispatch(switchPopup(POPUP.IS_SHOW_FORM));\n  };\n\n  const deleteTodoHandler = (\n    e: React.MouseEvent<HTMLButtonElement>,\n    todoId: string,\n  ) => {\n    e.stopPropagation();\n\n    dispatch(deleteTodo(todoId));\n  };\n\n  return (\n    <Wrapper ref={todoRef}>\n      {preparedTodos.map(todo => (\n        <TodoContainer\n          key={todo.todoId}\n          format={format}\n        >\n          {(format === FORMAT.MONTH || format === FORMAT.WEEK) && (\n            <>\n              <TodoTitle\n                color={todo.color}\n                format={format}\n                onClick={(e) => onShowFormHandler(e, todo)}\n              >\n                <span>{todo.title}</span>\n\n                {/* <Button\n                  type=\"button\"\n                  onClick={() => dispatch(deleteTodo(todo.todoId))}\n                >\n                  <IoClose />\n                </Button>\n                <Button\n                  type=\"button\"\n                  onClick={() => dispatch(deleteTodo(todo.todoId))}\n                >\n                  <IoBuild />\n                </Button> */}\n                <Button\n                  type=\"button\"\n                  onClick={(e) => deleteTodoHandler(e, todo.todoId)}\n                >\n                  <IoCart />\n                </Button>\n              </TodoTitle>\n            </>\n          )}\n\n          {(format === FORMAT.DAY) && (\n            <TodoTitle color={todo.color}>\n              {todo.title}\n            </TodoTitle>\n          )}\n        </TodoContainer>\n      ))}\n\n      {isShowDots && <IoEllipsisHorizontal />}\n    </Wrapper>\n  );\n};\n","import {\n  FunctionComponent,\n} from 'react';\nimport styled, { css } from 'styled-components';\nimport { FORMAT } from '../constants/FORMAT';\nimport { useCurrentHook } from '../customHooks/useCurrentHook';\nimport { useDayHook } from '../customHooks/useDayHook';\nimport {\n  selectCurrentDate,\n  selectFormat,\n  setFormat,\n  setIntervalCalendar,\n  setSpecialDate,\n} from '../store/features/Interval/intervalSlice';\nimport { selectTodos } from '../store/features/Todo/todoSlice';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { Todo } from '../type/Todo';\nimport { Todos } from './Todos';\n\ntype StyledProps = {\n  format?: string,\n  isWeekend?: boolean,\n  isNotCurrentMonth?: boolean,\n  isCurrentDay?: boolean;\n  isTodosToday?: boolean;\n};\n\nconst Wrapper = styled.div<StyledProps>`\n  box-sizing: border-box;\n  padding: 0;\n  font-size: 14px;\n  cursor: pointer;\n\n  ${({ format }) => (format === FORMAT.DAY) && css`\n    height: 100vh;\n  `}\n\n  ${({ format }) => (format === FORMAT.WEEK || format === FORMAT.MONTH) && css`\n    height: 205px;\n\n    &:hover{\n      box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n    }\n  `}\n\n  ${({ format, isWeekend }) => (format === FORMAT.YEAR && isWeekend) && css`\n    color: red;\n  `}\n\n  ${({ isNotCurrentMonth }) => isNotCurrentMonth && css`\n    opacity: 0.4;\n  `}\n\n  ${({ isCurrentDay }) => isCurrentDay && css`\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n  `}\n\n  ${({ isTodosToday, format }) => isTodosToday\n    && format === FORMAT.YEAR\n    && css`\n      background-color: #f3f6f4;\n    `}\n`;\n\nconst DayTitle = styled.div<{ isCurrentDay: boolean }>`\n  box-sizing: border-box;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\n  ${({ isCurrentDay }) => isCurrentDay && css`\n    background-color: #79c6c6;\n  `}\n\n  ${({ isCurrentDay }) => !isCurrentDay && css`\n    &:hover {\n      background-color: #e6e6e6;\n    }\n  `}\n`;\n\nconst DayOfWeek = styled.button<StyledProps>`\n  background-color: transparent;\n  cursor: pointer;\n  padding: 0 10px;\n  line-height: 30px;\n  border: none;\n  outline: none;\n  position: relative;\n  cursor: pointer;\n  text-align: left;\n\n  border-right: 10px solid transparent;\n  width: 80px;\n  border-top: 10px solid transparent;\n  border-bottom: 10px solid transparent;\n\n  ${({ isWeekend }) => isWeekend && css`\n    color: #a16e73;\n    font-weight: bold;\n  `}\n\n\n  ${({ isCurrentDay, format }) => !isCurrentDay\n  && format !== FORMAT.WEEK && css`\n    &:hover {\n      transition: all 0.2s;\n      border-bottom: 10px solid #79c6c6;\n    }\n  `}\n\n  ${({ format }) => (format === FORMAT.YEAR)\n  && css`\n    display: none;\n  `}\n`;\n\nconst DateString = styled.p<{ format?: string }>`\n  margin: 0;\n  line-height: 40px;\n  position: relative;\n  overflow: hidden;\n  padding: 0 10px;\n\n  ${({ format }) => format === FORMAT.YEAR && css`\n    display: block;\n    text-align: right;\n    padding: 0;\n    margin: 0 auto;\n  `}\n`;\n\nconst DayListTodos = styled.div<{ format?: string }>`\n  box-sizing: border-box;\n  padding: 10px;\n`;\n\ninterface DayProps {\n  startDay: number;\n  // eslint-disable-next-line react/require-default-props\n  disabled?: boolean;\n}\n\nexport const Day: FunctionComponent<DayProps> = ({\n  startDay,\n  disabled = false,\n}) => {\n  const dispatch = useAppDispatch();\n  const currentDate = useAppSelector(selectCurrentDate);\n  const format = useAppSelector(selectFormat);\n  const isWeekend = (new Date(startDay).getDay() === 0\n  || new Date(startDay).getDay() === 6);\n  const {\n    dayOfWeek, month, day, year, fullNameDayOfWeek,\n  } = useDayHook(startDay);\n  const {\n    isCurrentDay,\n    isCurrentMonth,\n  } = useCurrentHook(currentDate, startDay);\n  const todos = useAppSelector(selectTodos);\n\n  const preparedTodos = todos.filter((todo: Todo) => {\n    return (startDay <= todo.date)\n    && (todo.date < startDay + 24 * 60 * 60 * 1000);\n  });\n\n  const isTodosToday = !!preparedTodos.length;\n\n  const onDayClick = () => {\n    // eslint-disable-next-line no-console\n    // console.log('Day onClick');\n\n    if (isCurrentDay && format === FORMAT.DAY) {\n      return;\n    }\n\n    if (isCurrentDay) {\n      dispatch(setFormat(FORMAT.DAY));\n      dispatch(setIntervalCalendar());\n\n      return;\n    }\n\n    if (!disabled) {\n      dispatch(setSpecialDate(startDay));\n    }\n\n    if (!disabled && !isCurrentMonth) {\n      dispatch(setIntervalCalendar());\n    }\n  };\n\n  const onWeekClick = (\n    e: React.MouseEvent<HTMLButtonElement | HTMLDivElement, MouseEvent>,\n  ) => {\n    if (format === FORMAT.WEEK) {\n      return;\n    }\n\n    e.stopPropagation();\n    let dayValue: string | undefined;\n\n    if (e.target instanceof HTMLButtonElement) {\n      dayValue = e.target.dataset.dayValue;\n    }\n\n    if (dayValue) {\n      dispatch(setSpecialDate(+dayValue));\n      dispatch(setFormat(FORMAT.WEEK));\n      dispatch(setIntervalCalendar());\n    }\n  };\n\n  if (disabled) {\n    return (\n      <div />\n    );\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(startDay / 1000,\n    preparedTodos ? preparedTodos.map(\n      // eslint-disable-next-line no-console\n      t => [\n        new Date(t.date).toDateString(), new Date(t.date).toTimeString(),\n      ],\n    ) : 'no todos');\n\n  return (\n    <Wrapper\n      format={format}\n      isWeekend={isWeekend}\n      isNotCurrentMonth={!isCurrentMonth}\n      isCurrentDay={isCurrentDay}\n      isTodosToday={isTodosToday}\n    >\n      <DayTitle\n        isCurrentDay={isCurrentDay}\n        onClick={onDayClick}\n      >\n        <DayOfWeek\n          isWeekend={isWeekend}\n          onClick={(e) => onWeekClick(e)}\n          data-day-value={String(startDay)}\n          isCurrentDay={isCurrentDay}\n          format={format}\n        >\n          {format === FORMAT.DAY && fullNameDayOfWeek}\n          {(format === FORMAT.WEEK || format === FORMAT.MONTH) && dayOfWeek}\n        </DayOfWeek>\n\n        <DateString format={format}>\n          {format === FORMAT.DAY ? `${day}/${month}/${year}` : day}\n        </DateString>\n      </DayTitle>\n\n      {(format !== FORMAT.YEAR) && isTodosToday && (\n        <DayListTodos format={format}>\n          <Todos todos={preparedTodos} />\n        </DayListTodos>\n      )}\n    </Wrapper>\n  );\n};\n","import { WEEK } from '../constants/WEEK';\n\nexport const useDayHook = (value: number) => {\n  const date = new Date(value);\n  const day = date.getDate();\n  const arr = date.toDateString().split(' ');\n  const fullNameDayOfWeek = WEEK[date.getDay()];\n\n  return {\n    dayOfWeek: arr[0],\n    month: arr[1],\n    day,\n    year: arr[3],\n    fullNameDayOfWeek,\n  };\n};\n","export const useCurrentHook = (current: number, anyDay: number) => {\n  const isCurrentYear\n  = new Date(current).getFullYear() === new Date(anyDay).getFullYear();\n\n  const isCurrentMonth\n  = new Date(current).getMonth() === new Date(anyDay).getMonth()\n  && new Date(current).getFullYear() === new Date(anyDay).getFullYear();\n\n  const isCurrentDay\n   = new Date(current).getDate() === new Date(anyDay).getDate()\n   && new Date(current).getMonth() === new Date(anyDay).getMonth()\n   && new Date(current).getFullYear() === new Date(anyDay).getFullYear();\n\n  return { isCurrentDay, isCurrentMonth, isCurrentYear };\n};\n","import { FunctionComponent, useRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport { FORMAT } from '../constants/FORMAT';\nimport { MONTH_NAMES } from '../constants/MONTH';\nimport {\n  IS_MONDAY_FIRST_DAY_OF_WEEK,\n  selectFormat,\n  setFormat,\n  setIntervalCalendar,\n  setSpecialDate,\n} from '../store/features/Interval/intervalSlice';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { Day } from './Day';\n\nconst Wrapper = styled.div<{ format?: string }>`\n  ${({ format }) => {\n    if (format === FORMAT.DAY) {\n      return css`\n        display: block;\n      `;\n    }\n\n    if (format === FORMAT.YEAR) {\n      return css`\n        /* max-width: 200px; */\n      `;\n    }\n\n    return '';\n  }}\n`;\n\nconst MonthTitle = styled.div<{ format?: string }>`\n  cursor: pointer;\n\n  ${({ format }) => (format === FORMAT.DAY) && css`\n    display: none;\n  `}\n\n  ${({ format }) => (format === FORMAT.YEAR) && css`\n    padding: 10px;\n  `}\n\n  & button {\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n  }\n`;\n\nconst MonthContainer = styled.div<{ format?: string }>`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n\n  ${({ format }) => (format === FORMAT.DAY) && css`\n    display: block;\n  `}\n`;\n\ninterface MonthProps {\n  interval: number[];\n}\n\nexport const Month: FunctionComponent<MonthProps> = ({ interval }) => {\n  const dispatch = useAppDispatch();\n  const format = useAppSelector(selectFormat);\n  const monthName = useRef(new Date(interval[0]).getMonth());\n  const countEmptyItem = useRef((new Date(interval[0]).getDay()\n  + 7 - IS_MONDAY_FIRST_DAY_OF_WEEK) % 7);\n  const empty = [];\n\n  for (let i = 0; i < countEmptyItem.current; i += 1) {\n    empty.push(-i);\n  }\n\n  const onMonthHandler = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    if (format === FORMAT.MONTH) {\n      return;\n    }\n\n    let monthValue: string | undefined;\n\n    if (e.target instanceof HTMLButtonElement) {\n      monthValue = e.target.dataset.monthValue;\n    }\n\n    if (monthValue) {\n      dispatch(setSpecialDate(+monthValue));\n      dispatch(setFormat(FORMAT.MONTH));\n      dispatch(setIntervalCalendar());\n    }\n  };\n\n  return (\n    <Wrapper format={format}>\n      <MonthTitle\n        format={format}\n      >\n        <button\n          type=\"button\"\n          onClick={e => onMonthHandler(e)}\n          data-month-value={String(interval[0])}\n        >\n          {format === FORMAT.YEAR && MONTH_NAMES[monthName.current]}\n          {/* {format === FORMAT.MONTH && MONTH_NAMES[currentMonthName.current]} */}\n        </button>\n      </MonthTitle>\n\n      <MonthContainer\n        format={format}\n      >\n        {empty.map((emptyItem: number) => (\n          <Day key={emptyItem} startDay={emptyItem} disabled />\n        ))}\n\n        {interval.map((day: number) => (\n          <Day key={day} startDay={day} />\n        ))}\n      </MonthContainer>\n    </Wrapper>\n  );\n};\n","export function buildInterval(start: number, end: number) {\n  const interval = [];\n  let day = start;\n\n  // eslint-disable-next-line no-console\n  // console.log('buildInterval//',\n  //   new Date(start).toDateString(),\n  //   '-----------',\n  //   new Date(end).toDateString());\n\n  while (day < end) {\n    interval.push(day);\n\n    day = new Date(\n      new Date(day).getFullYear(),\n      new Date(day).getMonth(),\n      new Date(day).getDate() + 1,\n    ).valueOf();\n  }\n\n  return interval;\n}\n","export const divideYear = (interval: number[]) => {\n  const year = [];\n  let i = 0;\n\n  while (i < interval.length) {\n    const currentMonth = new Date(interval[i]).getMonth();\n    const month = [];\n\n    while (currentMonth === new Date(interval[i]).getMonth()) {\n      month.push(interval[i]);\n\n      i += 1;\n    }\n\n    year.push(month);\n  }\n\n  return year;\n};\n","import {\n  FunctionComponent,\n} from 'react';\nimport styled from 'styled-components';\nimport { divideYear } from '../helpers/divideYear';\nimport { Month } from './Month';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 2rem;\n  min-width: 1100px;\n`;\n\ninterface YearProps {\n  interval: number[];\n}\n\nexport const Year: FunctionComponent<YearProps> = ({ interval }) => {\n  const prepared = divideYear(interval);\n\n  return (\n    <Wrapper>\n      {prepared.map((month: number[]) => (\n        <Month key={month[0]} interval={month} />\n      ))}\n    </Wrapper>\n  );\n};\n","import { FunctionComponent, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { Month } from '../../components/Month';\nimport { buildInterval } from '../../helpers/buildInterval';\nimport {\n  selectCurrentDate,\n  selectEndInterval,\n  selectFormat,\n  selectStartInterval,\n  setCurrentDate,\n  setFormat,\n  setIntervalCalendar,\n} from '../../store/features/Interval/intervalSlice';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { FORMAT } from '../../constants/FORMAT';\nimport { Year } from '../../components/Year';\nimport { Day } from '../../components/Day';\nimport { selectTodos } from '../../store/features/Todo/todoSlice';\n\nconst Wrapper = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nexport const HomePage: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const currentDate = useAppSelector(selectCurrentDate);\n  const start = useAppSelector(selectStartInterval);\n  const end = useAppSelector(selectEndInterval);\n  const interval = buildInterval(start, end);\n  const format = useAppSelector(selectFormat);\n  const todos = useAppSelector(selectTodos);\n\n  // eslint-disable-next-line no-console\n  console.log(todos);\n\n  useEffect(() => {\n    if (!currentDate) {\n      dispatch(setCurrentDate());\n      dispatch(setFormat(FORMAT.MONTH));\n    }\n\n    dispatch(setIntervalCalendar());\n  }, []);\n\n  return (\n    <Wrapper>\n      {format === FORMAT.YEAR && <Year interval={interval} />}\n      {(format === FORMAT.MONTH || format === FORMAT.WEEK)\n      && <Month interval={interval} />}\n      {format === FORMAT.DAY && <Day startDay={interval[0]} />}\n    </Wrapper>\n  );\n};\n","import axios from 'axios';\n\nconst baseURL = 'https://jsonplaceholder.typicode.com';\n\nconst instance = axios.create({\n  baseURL,\n});\n\ntype FetchData = {\n};\n\nexport const client = {\n  async get<T>(url: string) {\n    const response = await instance.get<T>(url);\n\n    // eslint-disable-next-line no-console\n    console.log('get', baseURL + url);\n\n    return response.data;\n  },\n\n  async post<T>(url: string, data: FetchData) {\n    const response = await instance.post<T>(url, data);\n\n    return response.data;\n  },\n\n  async patch<T>(url: string, data: FetchData) {\n    const response = await instance.patch<T>(url, data);\n\n    return response.data;\n  },\n\n  async delete(url: string) {\n    return instance.delete(url);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { getAllPosts } from '../../../api/post';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../..';\nimport { Post } from '../../../type/Post';\n\nexport interface PostsState {\n  storage: Post[];\n  statusLoading: 'idle' | 'loading' | 'failed';\n  error: unknown;\n}\n\nconst initialState: PostsState = {\n  storage: [],\n  statusLoading: 'idle',\n  error: null,\n};\n\nexport const getPostsAsync = createAsyncThunk('posts/fetchPosts', async () => {\n  const response: Post[] = await getAllPosts();\n\n  // eslint-disable-next-line no-console\n  console.log(response);\n\n  return response;\n});\n\nconst postsSlice = createSlice({\n  name: 'interval',\n  initialState,\n  reducers: {\n    addPosts: (state: PostsState, action: PayloadAction<Post[]>) => {\n      state.storage.push(...action.payload);\n    },\n    setStatus: (\n      state: PostsState,\n      action: PayloadAction<'idle' | 'loading' | 'failed'>,\n    ) => {\n      state.statusLoading = action.payload;\n    },\n    setError: (state: PostsState, action: PayloadAction<unknown>) => {\n      state.error = action.payload;\n      state.statusLoading = 'failed';\n    },\n    resetState: (state: PostsState) => {\n      return { ...state, ...initialState };\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getPostsAsync.pending, (state: PostsState) => {\n        state.statusLoading = 'loading';\n      })\n      .addCase(getPostsAsync.fulfilled, (state, action) => {\n        state.storage.push(...action.payload);\n        state.statusLoading = 'idle';\n      })\n      .addCase(getPostsAsync.rejected, (state, action) => {\n        state.statusLoading = 'failed';\n\n        // eslint-disable-next-line no-console\n        console.log(action);\n      });\n  },\n});\n\nexport default postsSlice.reducer;\nexport const {\n  addPosts,\n  setStatus,\n  setError,\n  resetState,\n} = postsSlice.actions;\n\nexport const selectPosts = (state: RootState) => state.posts.storage;\nexport const selectPostStatusLoading\n= (state: RootState) => state.posts.statusLoading;\nexport const selectPostError = (state: RootState) => state.posts.error;\n","import { client } from '../utils/axiosClient';\nimport { Post } from '../type/Post';\n\nexport const getAllPosts = () => client.get<Post[]>('/posts/');\nexport const getPostById = (postId: number) => client.get<Post[]>(`/posts/${postId}`);\n","import { FunctionComponent } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { resetState, selectPosts } from '../../store/features/Posts/postsSlice';\n\nimport './PostPage.scss';\n\nexport const PostPage: FunctionComponent = () => {\n  const { id } = useParams();\n\n  // eslint-disable-next-line no-console\n  // console.log(id);\n\n  const posts = useAppSelector(selectPosts);\n  const dispatch = useAppDispatch();\n\n  dispatch(resetState());\n\n  const post = posts.find(p => String(p.id) === String(id));\n\n  return (\n    <div\n      className=\"PostPage\"\n    >\n      <Link\n        to=\"/\"\n        className=\"PostPage__Link\"\n      >\n        Back\n      </Link>\n\n      {post ? (\n        <div>\n          <h1>{`PostPage: ${post.title}`}</h1>\n          <p>{post.body}</p>\n        </div>\n      ) : (\n        <>\n          post doesn&nbsp;t exist\n        </>\n      )}\n    </div>\n  );\n};\n","export const MOVE: { [key in 'FORWARD' | 'BACK']: '1' | '-1' } = {\n  FORWARD: '1',\n  BACK: '-1',\n};\n","import { FunctionComponent } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { IoCaretBackOutline, IoCaretForwardOutline } from 'react-icons/io5';\nimport { FORMAT } from '../constants/FORMAT';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport {\n  navigateMonth,\n  navigateYear,\n  selectCurrentDate,\n  selectFormat,\n  setFormat,\n  setIntervalCalendar,\n} from '../store/features/Interval/intervalSlice';\nimport { MONTH_NAMES } from '../constants/MONTH';\nimport { MOVE } from '../constants/MOVE';\n\nconst Wrapper = styled.div`\n  display: flex;`;\n\nconst Arrow = styled.button`\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  outline: none;\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Value = styled.div<{ format: string }>`\n  width: 160px;\n\n  ${({ format }) => format === FORMAT.YEAR\n    && css`\n      width: 60px;\n    `}\n`;\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface ArrowNavigatorProps {}\n\nexport const ArrowNavigator: FunctionComponent<ArrowNavigatorProps> = () => {\n  const dispatch = useAppDispatch();\n  const currentDate = useAppSelector(selectCurrentDate);\n  const format = useAppSelector(selectFormat);\n  const fullNameMonth = MONTH_NAMES[new Date(currentDate).getMonth()];\n  const fullYear = new Date(currentDate).getFullYear();\n\n  const onNavigateHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (format !== FORMAT.YEAR) {\n      dispatch(navigateMonth(e.currentTarget.value));\n      dispatch(setFormat(FORMAT.MONTH));\n    }\n\n    if (format === FORMAT.YEAR) {\n      dispatch(navigateYear(e.currentTarget.value));\n    }\n\n    dispatch(setIntervalCalendar());\n  };\n\n  return (\n    <Wrapper>\n      <Arrow\n        type=\"button\"\n        value={MOVE.BACK}\n        onClick={onNavigateHandler}\n      >\n        <IoCaretBackOutline />\n      </Arrow>\n      <Value format={format}>\n        {format !== FORMAT.YEAR && (\n          <>\n            &nbsp;\n            {fullNameMonth}\n          </>\n        )}\n        &nbsp;\n        {fullYear}\n        &nbsp;\n      </Value>\n      <Arrow\n        type=\"button\"\n        value={MOVE.FORWARD}\n        onClick={onNavigateHandler}\n      >\n        <IoCaretForwardOutline />\n      </Arrow>\n    </Wrapper>\n  );\n};\n","import { RefObject } from 'react';\n\nexport const handleClickOutside = (\n  event: MouseEvent,\n  refParent: RefObject<Element>,\n  refChild: RefObject<Element>,\n  onShowHandler: () => void,\n) => {\n  // eslint-disable-next-line no-console\n  // console.log('start handleClickOutside');\n  // if (refParent.current\n  //   && refParent.current.contains(event.target as Node)) {\n  //   // eslint-disable-next-line no-console\n  //   console.log('outside refControl', refParent, refChild);\n  // } else {\n  //   onShowHandler();\n  // }\n\n  // if (refParent.current\n  //   && !refParent.current.contains(event.target as Node)) {\n  //   // eslint-disable-next-line no-console\n  //   console.log('outside refControl', refParent);\n  // }\n\n  // if (refChild.current\n  //   && !refChild.current.contains(event.target as Node)) {\n  //   // eslint-disable-next-line no-console\n  //   console.log('outside refContainer', refChild);\n  // }\n\n  if (refParent.current\n    && !refParent.current.contains(event.target as Node)\n    && refChild.current\n    && !refChild.current.contains(event.target as Node)) {\n    // eslint-disable-next-line no-console\n    console.log('outside refControl and refContainer',\n      refParent, refChild);\n\n    onShowHandler();\n  }\n};\n","import {\n  FunctionComponent,\n  RefObject,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport styled from 'styled-components';\nimport {\n} from '../../store/features/Interval/intervalSlice';\nimport { Button } from '../Button';\nimport { buildArrOfMonths } from '../../helpers/buildArrOfMonths';\nimport { buildArrOfDays } from '../../helpers/buildArrOfDays';\nimport { buildArrayOfYears } from '../../helpers/buildArrayOfYears';\nimport { handleClickOutside } from '../../helpers/handleClickOutside';\n\nconst Wrapper = styled.div`\n  z-index: 50;\n  position: absolute;\n  right: 0;\n  top: 45px;\n  background-color: white;\n  width: 400px;\n  box-sizing: border-box;\n  padding: 20px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nconst Years = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  row-gap: 20px;\n  & > :hover{\n    background-color: #e6e6e6;\n  }\n`;\n\nconst Months = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  row-gap: 20px;\n  & > :hover{\n    background-color: #e6e6e6;\n  }\n`;\n\nconst Days = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  row-gap: 20px;\n  & > :hover{\n    background-color: #e6e6e6;\n  }\n`;\n\ntype DatePickerBoxProps = {\n  currentDate: number;\n  onChangeDate: (day: number) => void;\n  datePickerControlRef: RefObject<HTMLDivElement>;\n  onShowDatePickerHandler: () => void;\n};\n\nexport const DatePickerContainer: FunctionComponent<DatePickerBoxProps> = ({\n  currentDate,\n  onChangeDate,\n  datePickerControlRef,\n  onShowDatePickerHandler,\n}) => {\n  const [arrOfYears, setArrOfYears] = useState<string[]>([]);\n  const [arrOfMonths, setArrOfMonths]\n  = useState<{ label: string, value: string }[]>([]);\n  const [arrOfDays, setArrOfDays]\n  = useState<{ id: string, value: string, label: string }[]>([]);\n\n  const datePickerContainerRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-console\n  // console.log(controlRef, onShowDatePickerHandler);\n\n  useEffect(() => {\n    // eslint-disable-next-line no-console\n    console.log('useEffect mount clicker DP');\n\n    document.addEventListener('click', (event) => handleClickOutside(\n      event,\n      datePickerControlRef,\n      datePickerContainerRef,\n      onShowDatePickerHandler,\n    ));\n\n    return () => {\n      document.removeEventListener('click', (event) => handleClickOutside(\n        event,\n        datePickerControlRef,\n        datePickerContainerRef,\n        onShowDatePickerHandler,\n      ));\n    };\n  }, []);\n\n  useEffect(() => {\n    // eslint-disable-next-line no-console\n    console.log('useEffect DK');\n\n    setArrOfYears(buildArrayOfYears(currentDate));\n  }, []);\n\n  const onYearHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    // eslint-disable-next-line no-console\n    console.log('DatePicker// onYearHandler');\n\n    e.stopPropagation();\n    const currentYear = +(e.target as HTMLButtonElement).value;\n\n    setArrOfMonths(buildArrOfMonths(currentYear));\n  };\n\n  const onMonthHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    // eslint-disable-next-line no-console\n    console.log('DatePicker// onMonthHandler');\n\n    e.stopPropagation();\n    const month = +(e.target as HTMLButtonElement).value;\n\n    const currentMonth = new Date(\n      new Date(month).getFullYear(),\n      new Date(month).getMonth(),\n      1,\n    ).valueOf();\n\n    setArrOfDays(buildArrOfDays(currentMonth));\n  };\n\n  const onDayHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    // eslint-disable-next-line no-console\n    console.log('DatePicker// onDayHandler');\n\n    e.stopPropagation();\n    const day = +(e.target as HTMLButtonElement).value;\n\n    onChangeDate(day);\n    setArrOfMonths([]);\n    setArrOfDays([]);\n  };\n\n  // eslint-disable-next-line no-console\n  console.log(currentDate);\n\n  return (\n    <Wrapper ref={datePickerContainerRef}>\n      {arrOfYears.length > 0\n      && arrOfMonths.length === 0\n      && arrOfDays.length === 0\n      && (\n        <Years>\n          {(arrOfYears.map((y:string) => (\n            <Button\n              key={y}\n              type=\"button\"\n              value={y}\n              onClick={e => onYearHandler(e)}\n            >\n              {new Date(+y).getFullYear()}\n            </Button>\n          )))}\n        </Years>\n      )}\n\n      {arrOfYears.length > 0\n      && arrOfMonths.length > 0\n      && arrOfDays.length === 0\n      && (\n        <Months>\n          {(arrOfMonths.map((m) => (\n            <Button\n              key={m.label}\n              type=\"button\"\n              value={m.value}\n              onClick={e => onMonthHandler(e)}\n            >\n              {m.label}\n            </Button>\n          )))}\n        </Months>\n      )}\n\n      {arrOfYears.length > 0\n      && arrOfMonths.length > 0\n      && arrOfDays.length > 0\n      && (\n        <Days>\n          {arrOfDays.map(\n            (d: { id: string, value: string, label: string }) => (\n              <Button\n                key={d.id}\n                type=\"button\"\n                value={d.value}\n                onClick={e => onDayHandler(e)}\n              >\n                {d.label}\n              </Button>\n            ),\n          )}\n        </Days>\n      )}\n    </Wrapper>\n  );\n};\n","export const buildArrayOfYears = (currentDate: number) => {\n  const years = [];\n\n  for (let i = 0; i < 12; i += 1) {\n    years.push(\n      new Date(\n        (new Date(currentDate).getFullYear()) - 4 + i,\n        0,\n        0,\n      ).valueOf().toString(),\n    );\n  }\n\n  return years;\n};\n","import { MONTH_NAMES_CUT } from '../constants/MONTH';\n\nexport const buildArrOfMonths = (currentDate: number) => {\n  const arrOfMonth = [];\n\n  for (let i = 0; i < 12; i += 1) {\n    arrOfMonth.push({\n      label: MONTH_NAMES_CUT[i],\n      value: new Date(\n        (new Date(currentDate).getFullYear()),\n        i,\n        1,\n      ).valueOf().toString(),\n    });\n  }\n\n  return arrOfMonth;\n};\n","import {\n  IS_MONDAY_FIRST_DAY_OF_WEEK,\n} from '../store/features/Interval/intervalSlice';\nimport { buildInterval } from './buildInterval';\n\nexport const buildArrOfDays = (startMonth: number) => {\n  const month = [];\n  const values = buildInterval(\n    startMonth,\n    new Date(\n      new Date(startMonth).getFullYear(),\n      new Date(startMonth).getMonth() + 1,\n      1,\n    ).valueOf(),\n  );\n\n  const countEmptyItem = (new Date(startMonth).getDay()\n    + 7 - IS_MONDAY_FIRST_DAY_OF_WEEK) % 7;\n\n  for (let i = 0; i < countEmptyItem; i += 1) {\n    month.push({\n      id: String(i),\n      value: '',\n      label: '',\n    });\n  }\n\n  for (let i = countEmptyItem; i < countEmptyItem + values.length; i += 1) {\n    month.push({\n      id: String(i),\n      value: String(values[i - countEmptyItem]),\n      label: String(new Date(values[i - countEmptyItem]).getDate()),\n    });\n  }\n\n  return month;\n};\n","import {\n  FunctionComponent,\n  useRef,\n} from 'react';\nimport styled from 'styled-components';\nimport {\n  IoCalendarOutline,\n} from 'react-icons/io5';\nimport {\n} from '../../store/features/Interval/intervalSlice';\nimport { DatePickerContainer } from './DatePicker.Container';\n\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\nconst DatePickerTitle = styled.div`\n  display: flex;\n`;\n\nconst DatePickerButton = styled.button`\n  border: none;\n  background-color: transparent;\n  outline: none;\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n  margin-left: 40px;\n`;\n\ninterface DatePickerProps {\n  currentDate: number;\n  onChangeDate: (value: number) => void;\n  isShowDatePickerContainer: boolean;\n  onShowDatePickerHandler: () => void;\n}\n\nexport const DatePicker: FunctionComponent<DatePickerProps> = ({\n  currentDate,\n  onChangeDate,\n  isShowDatePickerContainer,\n  onShowDatePickerHandler,\n}) => {\n  const controlRef = useRef<HTMLDivElement>(null);\n\n  return (\n    <Wrapper>\n      <DatePickerTitle ref={controlRef}>\n        <DatePickerButton type=\"button\" onClick={onShowDatePickerHandler}>\n          <IoCalendarOutline size={30} />\n        </DatePickerButton>\n      </DatePickerTitle>\n\n      {isShowDatePickerContainer && (\n        <DatePickerContainer\n          currentDate={currentDate}\n          datePickerControlRef={controlRef}\n          onChangeDate={onChangeDate}\n          onShowDatePickerHandler={onShowDatePickerHandler}\n        />\n      )}\n    </Wrapper>\n  );\n};\n","import { ColorKeys, ColorItemValue, ColorItemKey } from '../type/Color';\n\nexport const COLOR:\n{ [key in ColorKeys]: { value: ColorItemValue, label: ColorItemKey } }\n= {\n  URGENT: { value: '#ff6666', label: 'urgent' },\n  NORMAL: { value: '#ffe5a9', label: 'normal' },\n  IMPORTANT: { value: '#cbbeb5', label: 'important' },\n};\n","import { FormDataKeys, FormDataValues } from '../type/Form';\n\nexport const FORM_DATA: { [key in FormDataKeys]: FormDataValues } = {\n  TITLE: 'title',\n  DESCRIPTION: 'description',\n  DATE: 'date',\n  TIME: 'time',\n  COLOR: 'color',\n};\n","import {\n  FunctionComponent,\n  memo,\n  useEffect,\n} from 'react';\nimport styled from 'styled-components';\nimport {\n  IoCaretDown, IoCaretUp,\n} from 'react-icons/io5';\n\nimport { Button } from '../Button';\n\nconst Wrapper = styled.div`\n  right: 0;\n  top: 45px;\n  background-color: white;\n  width: 220px;\n  box-sizing: border-box;\n  padding: 20px;\n\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n`;\n\nconst Hours = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Minutes = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\ntype TimePickerBoxProps = {\n  time: number;\n  onChangeTime: (time: number) => void;\n};\n\nexport const TimePicker: FunctionComponent<TimePickerBoxProps> = memo(({\n  time = 0,\n  onChangeTime,\n}) => {\n  // eslint-disable-next-line no-console\n  console.log('render Time Picker //',\n    time,\n    new Date(time).toTimeString(),\n    new Date(time).toDateString());\n\n  const onTimeHandler = (\n    e: React.MouseEvent<HTMLButtonElement>,\n    hour?: number,\n    minute?: number,\n  ) => {\n    e.stopPropagation();\n\n    const newHours = (new Date(time).getHours() + (hour || 0)) % 24;\n    const newMinutes = (new Date(time).getMinutes() + (minute || 0)) % 60;\n\n    // eslint-disable-next-line no-console\n    console.log('newHours = ', newHours);\n    // eslint-disable-next-line no-console\n    console.log('newMinutes = ', newMinutes);\n\n    // eslint-disable-next-line no-console\n    console.log('new time', new Date(\n      (new Date(\n        new Date().getFullYear(),\n        new Date().getMonth(),\n        new Date().getDate(),\n        newHours,\n        newMinutes,\n      )).valueOf(),\n    ).toDateString(),\n    (new Date(\n      new Date().getFullYear(),\n      new Date().getMonth(),\n      new Date().getDate(),\n      (new Date(time).getHours() + (hour || 0)) % 24,\n      (new Date(time).getMinutes() + (minute || 0)) % 60,\n    )).valueOf());\n\n    onChangeTime((new Date(\n      new Date().getFullYear(),\n      new Date().getMonth(),\n      new Date().getDate(),\n      (new Date(time).getHours() + (hour || 0)) % 24,\n      (new Date(time).getMinutes() + (minute || 0)) % 60,\n    )).valueOf());\n  };\n\n  useEffect(() => {\n    // eslint-disable-next-line no-console\n    console.log('useEffect Time Picker');\n\n    onChangeTime(new Date().valueOf());\n    // onTimeHandler(undefined, 0, 0);\n  }, []);\n\n  const hours = (`0${new Date(time).getHours().toString()}`).slice(-2);\n  const minutes = (`0${new Date(time).getMinutes()}`).slice(-2);\n\n  // eslint-disable-next-line no-console\n  // console.log('time', new Date(+time).toTimeString(), Boolean(time));\n\n  return (\n    <Wrapper>\n      <Hours>\n        <Button\n          type=\"button\"\n          onClick={(e) => onTimeHandler(e, 1, 0)}\n        >\n          <IoCaretUp />\n        </Button>\n\n        {hours}\n\n        <Button type=\"button\" onClick={(e) => onTimeHandler(e, -1, 0)}>\n          <IoCaretDown />\n        </Button>\n      </Hours>\n\n      <Minutes>\n        <Button type=\"button\" onClick={(e) => onTimeHandler(e, 0, 1)}>\n          <IoCaretUp />\n        </Button>\n\n        {minutes}\n\n        <Button type=\"button\" onClick={(e) => onTimeHandler(e, 0, -1)}>\n          <IoCaretDown />\n        </Button>\n      </Minutes>\n    </Wrapper>\n  );\n});\n","import {\n  ChangeEvent,\n  // ChangeEvent,\n  FunctionComponent,\n  RefObject,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport styled from 'styled-components';\nimport {\n  IoTimeOutline,\n} from 'react-icons/io5';\n\nimport { COLOR } from '../../constants/COLOR';\nimport { FORM_DATA } from '../../constants/FORM_DATA';\nimport { handleClickOutside } from '../../helpers/handleClickOutside';\nimport {\n  resetTodo,\n  selectTodoToForm,\n  switchPopup,\n} from '../../store/features/Controls/controlsSlice';\nimport {\n  addTodo,\n  selectCurrentDate,\n} from '../../store/features/Interval/intervalSlice';\nimport {\n  useAppDispatch,\n  useAppSelector,\n} from '../../store/hooks';\nimport { ColorKeys } from '../../type/Color';\nimport { FormDataType } from '../../type/Form';\nimport { Button } from '../Button';\nimport { DatePicker } from '../DatePicker/DatePicker';\nimport { TimePicker } from '../TimePicker/TimePicker';\nimport { POPUP } from '../../constants/POPUP';\nimport { changeTodo } from '../../store/features/Todo/todoSlice';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  z-index: 100;\n  background-color: white;\n  opacity: 1;\n  width: 460px;\n  box-sizing: border-box;\n  padding: 20px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nconst FormContainer = styled.form`\n`;\n\nconst FormItem = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  & label {\n    width: 150px;\n    text-align: right;\n    padding-right: 10px;\n    box-sizing: border-box;\n  }\n`;\n\nconst initialValueForm = {\n  title: '',\n  description: '',\n  date: '',\n  time: '',\n  color: '',\n};\n\ninterface FormProps {\n  buttonRef: RefObject<HTMLButtonElement | HTMLDivElement>;\n  onShowFormHandler: () => void;\n}\n\nexport const Form: FunctionComponent<FormProps>\n= ({\n  buttonRef,\n  onShowFormHandler,\n}) => {\n  const dispatch = useAppDispatch();\n  const [value, setValue] = useState<FormDataType>(initialValueForm);\n  const [\n    isShowDatePickerContainer,\n    setIsShowDatePickerContainer,\n  ] = useState<boolean>(false);\n\n  const formRef = useRef<HTMLDivElement>(null);\n  const currentDate = useAppSelector(selectCurrentDate);\n  const [isShowTimePicker, setIsShowTimePicker]\n  = useState<boolean>(false);\n  const todo = useAppSelector(selectTodoToForm);\n\n  // eslint-disable-next-line no-console\n  console.log('Form todo', todo);\n\n  useEffect(() => {\n    document.addEventListener('click', (event) => handleClickOutside(\n      event, buttonRef, formRef, onShowFormHandler,\n    ));\n\n    return () => {\n      document.removeEventListener('click', (event) => handleClickOutside(\n        event, buttonRef, formRef, onShowFormHandler,\n      ));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (todo) {\n      setValue({\n        title: todo.title,\n        description: todo.description,\n        date: (todo.date).toString(),\n        time: (todo.date).toString(),\n        color: todo.color,\n      });\n    } else {\n      setValue({\n        ...value,\n        date: currentDate.toString(),\n      });\n    }\n  }, []);\n\n  const handleChange = useCallback((\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setValue((prevValue) => ({\n      ...prevValue,\n      [e.target.name]: e.target.value,\n    }));\n  }, []);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    // eslint-disable-next-line no-console\n    console.log('Form onSubmit', value);\n\n    const prepareDate = new Date(\n      new Date(+value[FORM_DATA.DATE]).getFullYear(),\n      new Date(+value[FORM_DATA.DATE]).getMonth(),\n      new Date(+value[FORM_DATA.DATE]).getDate(),\n      new Date(+value[FORM_DATA.TIME]).getHours(),\n      new Date(+value[FORM_DATA.TIME]).getMinutes(),\n    ).valueOf();\n\n    const newTodo = {\n      title: value[FORM_DATA.TITLE],\n      description: value[FORM_DATA.DESCRIPTION],\n      date: prepareDate,\n      color: value[FORM_DATA.COLOR],\n      todoId: `${new Date().valueOf()}`,\n    };\n\n    if (todo) {\n      dispatch(changeTodo({ todoId: todo.todoId, todo: newTodo }));\n      dispatch(resetTodo);\n    } else {\n      dispatch(addTodo(newTodo));\n    }\n\n    dispatch(switchPopup(POPUP.IS_SHOW_FORM));\n  };\n\n  const onChangeDate = useCallback((newDate: number) => {\n    // eslint-disable-next-line no-console\n    // console.log('onChangeDate');\n\n    setValue((prevValue: FormDataType) => ({\n      ...prevValue,\n      [FORM_DATA.DATE]: String(newDate),\n    }));\n\n    setIsShowDatePickerContainer(false);\n  }, []);\n\n  const onChangeTime = useCallback((newTime: number) => {\n    // eslint-disable-next-line no-console\n    console.log('onChangeTime',\n      new Date(newTime).toDateString(),\n      new Date(newTime).toTimeString());\n\n    setValue((prevValue: FormDataType) => ({\n      ...prevValue,\n      [FORM_DATA.TIME]: String(newTime),\n    }));\n  }, []);\n\n  const onShowDatePickerHandler = () => {\n    setIsShowDatePickerContainer((prev) => !prev);\n  };\n\n  const onShowTimePickerHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.stopPropagation();\n\n    setIsShowTimePicker(show => !show);\n    onChangeTime(new Date().valueOf());\n  };\n\n  const dateValue = new Date(+value[FORM_DATA.DATE as keyof FormDataType]\n    || currentDate).toDateString();\n\n  // const timeValue = value[FORM_DATA.TIME as keyof FormDataType]\n  //   ? new Date(+value[FORM_DATA.TIME as keyof FormDataType]\n  //     || currentDate).toTimeString().split(' ')[0]\n  //   : 'no time';\n\n  // eslint-disable-next-line no-console\n  console.log('render Form');\n\n  return (\n    <Wrapper ref={formRef}>\n      <h3>{todo ? `Edit ${todo.title}` : 'Create new'}</h3>\n\n      <FormContainer onSubmit={handleSubmit}>\n        <FormItem key={FORM_DATA.TITLE}>\n          <label htmlFor={FORM_DATA.TITLE}>\n            {FORM_DATA.TITLE}\n            :&nbsp;\n          </label>\n          <input\n            id={FORM_DATA.TITLE}\n            type=\"text\"\n            name={FORM_DATA.TITLE}\n            value={value[FORM_DATA.TITLE as keyof FormDataType]}\n            onChange={handleChange}\n            placeholder={`input ${FORM_DATA.TITLE}`}\n            required\n          />\n        </FormItem>\n\n        <FormItem key={FORM_DATA.DESCRIPTION}>\n          <label htmlFor={FORM_DATA.DESCRIPTION}>\n            {FORM_DATA.DESCRIPTION}\n            :&nbsp;\n          </label>\n          <input\n            id={FORM_DATA.DESCRIPTION}\n            type=\"text\"\n            name={FORM_DATA.DESCRIPTION}\n            value={value[FORM_DATA.DESCRIPTION as keyof FormDataType]}\n            onChange={handleChange}\n            placeholder={`input ${FORM_DATA.DESCRIPTION}`}\n            required\n          />\n        </FormItem>\n\n        <FormItem key={FORM_DATA.DATE}>\n          <label htmlFor={FORM_DATA.DATE}>\n            {FORM_DATA.DATE}\n            :&nbsp;\n          </label>\n          {dateValue}\n          <DatePicker\n            currentDate={currentDate}\n            onChangeDate={onChangeDate}\n            isShowDatePickerContainer={isShowDatePickerContainer}\n            onShowDatePickerHandler={onShowDatePickerHandler}\n          />\n        </FormItem>\n\n        <FormItem key={FORM_DATA.TIME}>\n          <label htmlFor={FORM_DATA.TIME}>\n            {FORM_DATA.TIME}\n            :&nbsp;\n          </label>\n          {/* {timeValue} */}\n\n          {isShowTimePicker ? (\n            <TimePicker\n              time={+value[FORM_DATA.TIME as keyof FormDataType]}\n              onChangeTime={onChangeTime}\n            />\n          ) : (\n            <Button\n              type=\"button\"\n              onClick={e => onShowTimePickerHandler(e)}\n            >\n              <IoTimeOutline size={30} />\n            </Button>\n          )}\n        </FormItem>\n\n        <FormItem key={FORM_DATA.COLOR}>\n          <label htmlFor={FORM_DATA.COLOR}>\n            {FORM_DATA.COLOR}\n            :&nbsp;\n          </label>\n\n          <select\n            name={FORM_DATA.COLOR}\n            id={FORM_DATA.COLOR}\n            value={value[FORM_DATA.COLOR as keyof FormDataType]}\n            onChange={handleChange}\n          >\n            <option\n              value=\"default\"\n              defaultValue=\"default\"\n              disabled\n            >\n              Chose color\n            </option>\n            {Object.keys(COLOR).map((item) => (\n              <option\n                key={COLOR[item as ColorKeys].value}\n                value={COLOR[item as ColorKeys].value}\n              >\n                {COLOR[item as ColorKeys].label}\n              </option>\n            ))}\n          </select>\n        </FormItem>\n\n        <Button type=\"submit\">{`${todo ? 'Change' : 'Add'} Todo`}</Button>\n      </FormContainer>\n    </Wrapper>\n  );\n};\n","import {\n  FunctionComponent,\n  useCallback,\n  useRef,\n} from 'react';\nimport styled from 'styled-components';\nimport { POPUP } from '../../constants/POPUP';\nimport {\n  selectIsShowAddItem,\n  switchPopup,\n} from '../../store/features/Controls/controlsSlice';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { Button } from '../Button';\nimport { Form } from './Form';\n\nconst Wrapper = styled.div`\n  background-color: white;\n  z-index: 150;\n`;\n\nexport const FormParentControl: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const isFormOpen = useAppSelector(selectIsShowAddItem);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n\n  const onShowFormHandler = useCallback(\n    () => dispatch(switchPopup(POPUP.IS_SHOW_FORM)), [],\n  );\n\n  return (\n    <Wrapper>\n      <Button\n        ref={buttonRef}\n        onClick={onShowFormHandler}\n      >\n        Add new item\n      </Button>\n\n      {isFormOpen && (\n        <Form\n          buttonRef={buttonRef}\n          onShowFormHandler={onShowFormHandler}\n        />\n      )}\n    </Wrapper>\n  );\n};\n","import {\n  FunctionComponent,\n} from 'react';\nimport styled from 'styled-components';\n\nimport { FORMAT } from '../constants/FORMAT';\nimport { MONTH_NAMES } from '../constants/MONTH';\nimport { POPUP } from '../constants/POPUP';\nimport {\n  closeAllPopup,\n  selectIsShowDatePicker,\n  switchPopup,\n} from '../store/features/Controls/controlsSlice';\nimport {\n  selectCurrentDate,\n  selectFormat,\n  setFormat,\n  setIntervalCalendar,\n  setSpecialDate,\n} from '../store/features/Interval/intervalSlice';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { ArrowNavigator } from './ArrowNavigator';\nimport { DatePicker } from '../UI/DatePicker/DatePicker';\nimport { FormParentControl } from '../UI/Form/FormParentControl';\nimport { Button } from '../UI/Button';\nimport { resetStateTodos } from '../store/features/Todo/todoSlice';\n\nconst Wrapper = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n`;\n\nconst Back = styled.div<{ format: string }>`\n  cursor: pointer;\n`;\n\nconst ControlsNavigate = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const Controls: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const currentDate = useAppSelector(selectCurrentDate);\n  const format = useAppSelector(selectFormat);\n  const fullNameMonth = MONTH_NAMES[new Date(currentDate).getMonth()];\n  const fullYear = new Date(currentDate).getFullYear();\n  const isShowDatePickerContainer = useAppSelector(selectIsShowDatePicker);\n\n  const onGoToPrevFormat = () => {\n    if (format === FORMAT.YEAR) {\n      return;\n    }\n\n    switch (format) {\n      case FORMAT.DAY:\n      case FORMAT.WEEK:\n        dispatch(setFormat(FORMAT.MONTH));\n        break;\n\n      case FORMAT.MONTH:\n        dispatch(setFormat(FORMAT.YEAR));\n        break;\n\n      default:\n    }\n\n    dispatch(setIntervalCalendar());\n  };\n\n  const onChangeDate = (day: number) => {\n    dispatch(closeAllPopup());\n    dispatch(setSpecialDate(new Date(day).valueOf()));\n    dispatch(setFormat(FORMAT.MONTH));\n    dispatch(setIntervalCalendar());\n  };\n\n  const onShowDatePickerHandler = () => {\n    dispatch(switchPopup(POPUP.IS_SHOW_DATE_PICKER));\n  };\n\n  return (\n    <Wrapper>\n      <Back\n        format={format}\n        onClick={onGoToPrevFormat}\n      >\n        {(format === FORMAT.DAY || format === FORMAT.WEEK) && fullNameMonth}\n        {(format === FORMAT.MONTH || format === FORMAT.YEAR) && fullYear}\n      </Back>\n\n      <Button type=\"button\" onClick={() => dispatch(resetStateTodos())}>\n        reset todos\n      </Button>\n\n      <FormParentControl />\n\n      <ControlsNavigate>\n        <ArrowNavigator />\n\n        <DatePicker\n          currentDate={currentDate}\n          onChangeDate={onChangeDate}\n          isShowDatePickerContainer={isShowDatePickerContainer}\n          onShowDatePickerHandler={onShowDatePickerHandler}\n        />\n      </ControlsNavigate>\n    </Wrapper>\n  );\n};\n","import { createHashRouter, Outlet } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { NotFound } from './pages/NotFound';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { PostPage } from './pages/PostPage/PostPage';\nimport { Controls } from './components/Controls';\n\nconst Wrapper = styled.div`\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 100vh;\n  `;\n\nconst Header = styled.header`\n  max-width: 1200px;\n  margin: 0 auto;\n  text-align: center;\n  margin-bottom: 1rem;\n`;\n\nconst Main = styled.main`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nfunction App() {\n  return (\n    <Wrapper>\n      <Header>\n        <h1>Calendar</h1>\n        <Controls />\n      </Header>\n\n      <Main>\n        <Outlet />\n      </Main>\n    </Wrapper>\n  );\n}\n\nexport const router = createHashRouter([\n  {\n    path: '/',\n    element: <App />,\n    errorElement: <NotFound />,\n    id: 'root',\n    children: [\n      {\n        path: '/',\n        element: <HomePage />,\n        id: 'homepage',\n        errorElement: <>Error on Homepage</>,\n      },\n      {\n        path: '/post/:id',\n        element: <PostPage />,\n        errorElement: <>Error on PostPage</>,\n      },\n    ],\n  },\n]);\n","/* eslint-disable import/no-cycle */\nimport {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport postsReducer from './features/Posts/postsSlice';\nimport intervalSlice from './features/Interval/intervalSlice';\nimport controlsSlice from './features/Controls/controlsSlice';\nimport todosSlice from './features/Todo/todoSlice';\n\nconst rootReducer = combineReducers({\n  posts: postsReducer,\n  interval: intervalSlice,\n  control: controlsSlice,\n  todos: todosSlice,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['interval', 'todos'],\n  // blacklist: ['interval'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [\n        FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER,\n        'posts',\n      ],\n    },\n  }),\n});\n\nexport default store;\n\nexport const persistor = persistStore(store);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n\n/* eslint-disable @typescript-eslint/indent */\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { RouterProvider } from 'react-router-dom';\nimport { router } from './App';\nimport store, { persistor } from './store';\n\nimport './index.css';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement,\n);\n\nroot.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <RouterProvider router={router} />\n    </PersistGate>\n  </Provider>,\n);\n"],"sourceRoot":""}