{"version":3,"sources":["pages/NotFound.tsx","constants/FORMAT.ts","constants/MONTH.ts","store/features/Interval/intervalSlice.ts","store/hooks.ts","constants/WEEK.ts","components/Day.tsx","customHooks/useDayHook.ts","customHooks/useCurrentHook.ts","components/Month.tsx","helpers/buildInterval.ts","helpers/divideYear.ts","components/Year.tsx","pages/HomePage/HomePage.tsx","utils/axiosClient.ts","store/features/Posts/postsSlice.ts","api/post.ts","pages/PostPage/PostPage.tsx","constants/POPUP.ts","store/features/Controls/controlsSlice.ts","constants/MOVE.ts","components/ArrowNavigator.tsx","UI/Button.tsx","helpers/buildArrOfMonths.ts","helpers/buildArrOfDays.ts","helpers/buildArrayOfYears.ts","helpers/handleClickOutside.tsx","UI/DatePicker/DatePicker.Container.tsx","UI/DatePicker/DatePicker.tsx","UI/TimePicker/TimePicker.Container.tsx","UI/TimePicker/TimePicker.tsx","UI/Form/Form.Container.tsx","UI/Form/Form.tsx","components/Controls.tsx","App.tsx","store/index.ts","index.tsx"],"names":["NotFound","FORMAT","MONTH_NAMES","MONTH_NAMES_CUT","initialState","currentDate","start","end","storage","formatCalendar","intervalSlice","createAsyncThunk","a","createSlice","name","reducers","setCurrentDate","state","Date","valueOf","setSpecialDate","action","payload","setFormat","console","log","navigateMonth","getFullYear","getMonth","Number","getDate","navigateYear","setIntervalCalendar","date","dayOfWeek","getDay","IS_MONDAY_FIRST_DAY_OF_WEEK","warn","addTodo","push","resetState","actions","selectCurrentDate","interval","selectStartInterval","selectEndInterval","selectFormat","useAppDispatch","useDispatch","useAppSelector","useSelector","WEEK","Wrapper","styled","div","format","css","isWeekend","isNotCurrentMonth","isCurrentDay","DayTitle","DayOfWeek","button","DateString","p","DayListTodos","Day","startDay","disabled","dispatch","value","day","arr","toDateString","split","fullNameDayOfWeek","month","year","useDayHook","current","anyDay","isCurrentYear","isCurrentMonth","useCurrentHook","onClick","e","dayValue","stopPropagation","target","HTMLButtonElement","dataset","onWeekClick","String","MonthTitle","MonthContainer","Month","monthName","useRef","countEmptyItem","empty","i","type","monthValue","onMonthHandler","map","emptyItem","buildInterval","Year","prepared","length","currentMonth","divideYear","HomePage","useEffect","baseURL","instance","axios","create","client","url","get","response","data","statusLoading","error","getPostsAsync","postsSlice","addPosts","setStatus","setError","extraReducers","builder","addCase","pending","fulfilled","rejected","selectPosts","posts","PostPage","id","useParams","post","find","className","to","title","body","POPUP","popup","isShowDatePicker","isShowAddItem","isShowDatePickerForm","controlSlice","switchPopupInForm","switchPopup","closeAllPopup","selectIsShowDatePicker","control","selectIsShowAddItem","MOVE","Arrow","Value","ArrowNavigator","fullNameMonth","fullYear","onNavigateHandler","currentTarget","Button","buildArrOfMonths","arrOfMonth","label","toString","buildArrOfDays","startMonth","values","buildArrayOfYears","years","handleClickOutside","event","refControl","refContainer","onShowHandler","contains","Years","Months","Days","DatePickerContainer","onChangeDate","datePickerControlRef","onShowDatePickerHandler","useState","arrOfYears","setArrOfYears","arrOfMonths","setArrOfMonths","arrOfDays","setArrOfDays","datePickerContainerRef","document","addEventListener","removeEventListener","ref","y","currentYear","onYearHandler","m","d","onDayHandler","DatePickerTitle","DatePickerButton","DatePicker","isShowDatePickerContainer","controlRef","size","Hours","Minutes","RefreshButton","TimePickerContainer","currentTime","onChangeTime","TimePickerControlRef","onShowTimePickerHandler","hours","setHours","minutes","setMinutes","TimePickerContainerRef","getHours","getMinutes","time","TimePickerTitle","TimePickerButton","TimePicker","isShowTimePickerContainer","Form","form","FormItem","FORM_DATA","FormContainer","buttonRef","onShowFormHandler","description","setValue","formRef","setIsShowDatePickerContainer","setIsShowTimePickerContainer","onChange","newDate","newTime","onSubmit","preventDefault","Object","keys","key","htmlFor","placeholder","isFormOpen","useCallback","Back","ControlsNavigate","Controls","Header","header","Main","main","App","router","createHashRouter","path","element","errorElement","children","rootReducer","combineReducers","postsReducer","controlsSlice","persistConfig","whitelist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","createRoot","getElementById","render","loading"],"mappings":"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","file":"static/js/main.5cbc08d0.chunk.js","sourcesContent":["import { FunctionComponent } from 'react';\n\nexport const NotFound: FunctionComponent = () => {\n  return (\n    <div>\n      This page doesn&nbsp;t exist.\n    </div>\n  );\n};\n","import { FormatKeys, FormatValue } from '../type/Format';\n\nexport const FORMAT: { [key in FormatKeys]: FormatValue } = {\n  DAY: 'day',\n  WEEK: 'week',\n  MONTH: 'month',\n  YEAR: 'year',\n};\n","export const MONTH_NAMES = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport const MONTH_NAMES_CUT = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n","/* eslint-disable no-case-declarations */\n/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../..';\nimport { FORMAT } from '../../../constants/FORMAT';\nimport { FormatValue } from '../../../type/Format';\nimport { Todo } from '../../../type/Todo';\n\nexport const IS_MONDAY_FIRST_DAY_OF_WEEK = 1;\n\nexport interface IntervalState {\n  currentDate: number;\n  start: number;\n  end: number;\n\n  storage: Todo[];\n  formatCalendar: FormatValue;\n}\n\nconst initialState: IntervalState = {\n  currentDate: 0,\n  start: 0,\n  end: 0,\n\n  storage: [],\n  formatCalendar: FORMAT.MONTH,\n};\n\nexport const getIntervalAsync = createAsyncThunk(\n  'Interval/fetchInterval',\n  async () => {\n    // const response: Post[] = await getAllInterval();\n\n    // eslint-disable-next-line no-console\n    // console.log(response);\n\n    // return response;\n  },\n);\n\nconst intervalSlice = createSlice({\n  name: 'interval',\n  initialState,\n  reducers: {\n    setCurrentDate: (\n      state: IntervalState,\n    ) => {\n      state.currentDate = (new Date()).valueOf();\n    },\n    setSpecialDate: (\n      state: IntervalState,\n      action,\n    ) => {\n      state.currentDate = new Date(action.payload).valueOf();\n    },\n    setFormat: (\n      state: IntervalState,\n      action: PayloadAction<FormatValue>,\n    ) => {\n      state.formatCalendar = action.payload;\n\n      // eslint-disable-next-line no-console\n      console.log('setFormat', state.formatCalendar);\n    },\n    navigateMonth: (\n      state: IntervalState,\n      action: PayloadAction<string>,\n    ) => {\n      // eslint-disable-next-line no-console\n      console.log('navigateMonth', action.payload);\n\n      state.currentDate = new Date(\n        new Date(state.currentDate).getFullYear(),\n        new Date(state.currentDate).getMonth()\n        + Number(action.payload),\n        new Date(state.currentDate).getDate(),\n      ).valueOf();\n    },\n    navigateYear: (\n      state: IntervalState,\n      action: PayloadAction<string>,\n    ) => {\n      // eslint-disable-next-line no-console\n      console.log('navigateYear', action.payload);\n\n      state.currentDate = new Date(\n        new Date(state.currentDate).getFullYear()\n        + Number(action.payload),\n        new Date(state.currentDate).getMonth(),\n        new Date(state.currentDate).getDate(),\n      ).valueOf();\n    },\n    setIntervalCalendar: (state: IntervalState) => {\n      // eslint-disable-next-line no-console\n      // console.log('setIntervalCalendar//',\n      //   'format calendar:', state.formatCalendar,\n      //   'current date:', new Date(state.currentDate).toDateString());\n\n      if (!state.currentDate) {\n        // eslint-disable-next-line no-console\n        console.warn('no currentDate in IntervalSlice');\n\n        return;\n      }\n\n      switch (state.formatCalendar) {\n        case FORMAT.DAY:\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            new Date(state.currentDate).getDate(),\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            new Date(state.currentDate).getDate() + 1,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          // console.log('day start', new Date(state.start).toString());\n          // eslint-disable-next-line no-console\n          // console.log('day end', new Date(state.end).toString());\n          break;\n\n        case FORMAT.WEEK:\n          const date = new Date(state.currentDate).getDate();\n          const dayOfWeek = new Date(state.currentDate).getDay();\n\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            dayOfWeek === 0\n              ? date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK - 7\n              : date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK,\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            (dayOfWeek === 0\n              ? date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK - 7\n              : date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK) + 7,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          // console.log('week start', new Date(state.start).toDateString());\n          // eslint-disable-next-line no-console\n          // console.log('week end', new Date(state.end).toDateString());\n          break;\n\n        case FORMAT.MONTH:\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            IS_MONDAY_FIRST_DAY_OF_WEEK\n            - (new Date(\n              new Date(state.currentDate).getFullYear(),\n              new Date(state.currentDate).getMonth(),\n              0,\n            )).getDay(),\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth() + 1,\n            (IS_MONDAY_FIRST_DAY_OF_WEEK\n            + 7\n            - (new Date(\n              new Date(state.currentDate).getFullYear(),\n              new Date(state.currentDate).getMonth() + 1,\n              0,\n            )).getDay()) % 7,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          // console.log('start month', new Date(state.start).toString());\n          // eslint-disable-next-line no-console\n          // console.log('end month', new Date(state.end).toString());\n\n          break;\n\n        case FORMAT.YEAR:\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            0,\n            1,\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear() + 1,\n            0,\n            1,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          // console.log('start year', new Date(state.start).toString());\n          // eslint-disable-next-line no-console\n          // console.log('end year', new Date(state.end).toString());\n          break;\n\n        default:\n      }\n    },\n    addTodo: (state: IntervalState, action: PayloadAction<Todo>) => {\n      state.storage.push(action.payload);\n    },\n    resetState: (state: IntervalState) => {\n      return { ...state, ...initialState };\n    },\n  },\n  // extraReducers: (builder) => {\n  //   builder\n  //     .addCase(getIntervalAsync.pending, (state: IntervalState) => {\n  //       state.statusLoading = 'loading';\n  //     })\n  //     .addCase(getIntervalAsync.fulfilled, (state, action) => {\n  //       state.storage.push(...action.payload);\n  //       state.statusLoading = 'idle';\n  //     })\n  //     .addCase(getIntervalAsync.rejected, (state, action) => {\n  //       state.statusLoading = 'failed';\n\n  //       // eslint-disable-next-line no-console\n  //       console.log(action);\n  //     });\n  // },\n});\n\nexport default intervalSlice.reducer;\nexport const {\n  setCurrentDate,\n  setSpecialDate,\n  setFormat,\n  navigateMonth,\n  navigateYear,\n  setIntervalCalendar,\n  addTodo,\n  resetState,\n} = intervalSlice.actions;\n\nexport const selectTodos = (state: RootState) => state.interval.storage;\nexport const selectCurrentDate\n= (state: RootState) => state.interval.currentDate;\nexport const selectStartInterval\n= (state: RootState) => state.interval.start;\nexport const selectEndInterval\n= (state: RootState) => state.interval.end;\n\nexport const selectFormat\n= (state: RootState) => state.interval.formatCalendar;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '.';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export const WEEK = [\n  'Sunday',\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n];\n","import {\n  FunctionComponent,\n} from 'react';\nimport styled, { css } from 'styled-components';\nimport { FORMAT } from '../constants/FORMAT';\nimport { useCurrentHook } from '../customHooks/useCurrentHook';\nimport { useDayHook } from '../customHooks/useDayHook';\nimport {\n  selectCurrentDate,\n  selectFormat,\n  setFormat,\n  setIntervalCalendar,\n  setSpecialDate,\n} from '../store/features/Interval/intervalSlice';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\n\ntype StyledProps = {\n  format?: string,\n  isWeekend?: boolean,\n  isNotCurrentMonth?: boolean,\n  isCurrentDay?: boolean;\n};\n\nconst Wrapper = styled.div<StyledProps>`\n  box-sizing: border-box;\n  padding: 0;\n  font-size: 14px;\n  cursor: pointer;\n\n  ${({ format }) => (format === FORMAT.DAY) && css`\n    height: 100vh;\n  `}\n\n  ${({ format }) => (format === FORMAT.WEEK || format === FORMAT.MONTH) && css`\n    height: 200px;\n\n    &:hover{\n      box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n    }\n  `}\n\n  ${({ format, isWeekend }) => (format === FORMAT.YEAR && isWeekend) && css`\n    color: red;\n  `}\n\n  ${({ isNotCurrentMonth }) => isNotCurrentMonth && css`\n    opacity: 0.4;\n  `}\n\n  ${({ isCurrentDay }) => isCurrentDay && css`\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n  `}\n`;\n\nconst DayTitle = styled.div<{ isCurrentDay: boolean }>`\n  box-sizing: border-box;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\n  ${({ isCurrentDay }) => isCurrentDay && css`\n    background-color: #79c6c6;\n  `}\n\n  ${({ isCurrentDay }) => !isCurrentDay && css`\n    &:hover {\n      background-color: #e6e6e6;\n    }\n  `}\n`;\n\nconst DayOfWeek = styled.button<StyledProps>`\n  background-color: transparent;\n  cursor: pointer;\n  padding: 0 10px;\n  line-height: 30px;\n  border: none;\n  outline: none;\n  position: relative;\n  cursor: pointer;\n  text-align: left;\n\n  border-right: 10px solid transparent;\n  width: 80px;\n  border-top: 10px solid transparent;\n  border-bottom: 10px solid transparent;\n\n  ${({ isWeekend }) => isWeekend && css`\n    color: #a16e73;\n    font-weight: bold;\n  `}\n\n\n  ${({ isCurrentDay, format }) => !isCurrentDay\n  && format !== FORMAT.WEEK && css`\n    &:hover {\n      transition: all 0.2s;\n      border-bottom: 10px solid #79c6c6;\n    }\n  `}\n\n  ${({ format }) => (format === FORMAT.YEAR)\n  && css`\n    display: none;\n  `}\n`;\n\nconst DateString = styled.p<{ format?: string }>`\n  margin: 0;\n  line-height: 40px;\n  position: relative;\n  overflow: hidden;\n  padding: 0 10px;\n\n  ${({ format }) => format === FORMAT.YEAR && css`\n    display: block;\n    text-align: right;\n    padding: 0;\n    margin: 0 auto;\n  `}\n`;\n\nconst DayListTodos = styled.div<{ format?: string }>`\n  box-sizing: border-box;\n  padding: 10px;\n\n  ${({ format }) => {\n    if (format === FORMAT.YEAR) {\n      return css`\n        display: none;\n      `;\n    }\n\n    return '';\n  }}\n`;\n\ninterface DayProps {\n  startDay: number;\n  // eslint-disable-next-line react/require-default-props\n  disabled?: boolean;\n}\n\nexport const Day: FunctionComponent<DayProps> = ({\n  startDay,\n  disabled = false,\n}) => {\n  const dispatch = useAppDispatch();\n  const currentDate = useAppSelector(selectCurrentDate);\n  const format = useAppSelector(selectFormat);\n  const isWeekend = (new Date(startDay).getDay() === 0\n  || new Date(startDay).getDay() === 6);\n  const {\n    dayOfWeek, month, day, year, fullNameDayOfWeek,\n  } = useDayHook(startDay);\n  const {\n    isCurrentDay,\n    isCurrentMonth,\n  } = useCurrentHook(currentDate, startDay);\n\n  const isTodosToday = false;\n\n  const onDayClick = () => {\n    // eslint-disable-next-line no-console\n    // console.log('Day onClick');\n\n    if (isCurrentDay && format === FORMAT.DAY) {\n      return;\n    }\n\n    if (isCurrentDay) {\n      dispatch(setFormat(FORMAT.DAY));\n      dispatch(setIntervalCalendar());\n\n      return;\n    }\n\n    if (!disabled) {\n      dispatch(setSpecialDate(startDay));\n    }\n\n    if (!disabled && !isCurrentMonth) {\n      dispatch(setIntervalCalendar());\n    }\n  };\n\n  const onWeekClick = (\n    e: React.MouseEvent<HTMLButtonElement | HTMLDivElement, MouseEvent>,\n  ) => {\n    if (format === FORMAT.WEEK) {\n      return;\n    }\n\n    e.stopPropagation();\n    let dayValue: string | undefined;\n\n    if (e.target instanceof HTMLButtonElement) {\n      dayValue = e.target.dataset.dayValue;\n    }\n\n    if (dayValue) {\n      dispatch(setSpecialDate(+dayValue));\n      dispatch(setFormat(FORMAT.WEEK));\n      dispatch(setIntervalCalendar());\n    }\n  };\n\n  if (disabled) {\n    return (\n      <div />\n    );\n  }\n\n  return (\n    <Wrapper\n      format={format}\n      isWeekend={isWeekend}\n      isNotCurrentMonth={!isCurrentMonth}\n      isCurrentDay={isCurrentDay}\n    >\n      <DayTitle\n        isCurrentDay={isCurrentDay}\n        onClick={onDayClick}\n      >\n        <DayOfWeek\n          isWeekend={isWeekend}\n          onClick={(e) => onWeekClick(e)}\n          data-day-value={String(startDay)}\n          isCurrentDay={isCurrentDay}\n          format={format}\n        >\n          {format === FORMAT.DAY && fullNameDayOfWeek}\n          {(format === FORMAT.WEEK || format === FORMAT.MONTH) && dayOfWeek}\n        </DayOfWeek>\n\n        <DateString format={format}>\n          {format === FORMAT.DAY ? `${day}/${month}/${year}` : day}\n        </DateString>\n      </DayTitle>\n\n      {(format !== FORMAT.YEAR) && (\n        <DayListTodos format={format}>\n          {isTodosToday && <p>List of TODOS:</p>}\n        </DayListTodos>\n      )}\n    </Wrapper>\n  );\n};\n","import { WEEK } from '../constants/WEEK';\n\nexport const useDayHook = (value: number) => {\n  const date = new Date(value);\n  const day = date.getDate();\n  const arr = date.toDateString().split(' ');\n  const fullNameDayOfWeek = WEEK[date.getDay()];\n\n  return {\n    dayOfWeek: arr[0],\n    month: arr[1],\n    day,\n    year: arr[3],\n    fullNameDayOfWeek,\n  };\n};\n","export const useCurrentHook = (current: number, anyDay: number) => {\n  const isCurrentYear\n  = new Date(current).getFullYear() === new Date(anyDay).getFullYear();\n\n  const isCurrentMonth\n  = new Date(current).getMonth() === new Date(anyDay).getMonth()\n  && new Date(current).getFullYear() === new Date(anyDay).getFullYear();\n\n  const isCurrentDay\n   = new Date(current).getDate() === new Date(anyDay).getDate()\n   && new Date(current).getMonth() === new Date(anyDay).getMonth()\n   && new Date(current).getFullYear() === new Date(anyDay).getFullYear();\n\n  return { isCurrentDay, isCurrentMonth, isCurrentYear };\n};\n","import { FunctionComponent, useRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport { FORMAT } from '../constants/FORMAT';\nimport { MONTH_NAMES } from '../constants/MONTH';\nimport {\n  IS_MONDAY_FIRST_DAY_OF_WEEK,\n  selectFormat,\n  setFormat,\n  setIntervalCalendar,\n  setSpecialDate,\n} from '../store/features/Interval/intervalSlice';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { Day } from './Day';\n\nconst Wrapper = styled.div<{ format?: string }>`\n  ${({ format }) => {\n    if (format === FORMAT.DAY) {\n      return css`\n        display: block;\n      `;\n    }\n\n    if (format === FORMAT.YEAR) {\n      return css`\n        /* max-width: 200px; */\n      `;\n    }\n\n    return '';\n  }}\n`;\n\nconst MonthTitle = styled.div<{ format?: string }>`\n  cursor: pointer;\n\n  ${({ format }) => (format === FORMAT.DAY) && css`\n    display: none;\n  `}\n\n  ${({ format }) => (format === FORMAT.YEAR) && css`\n    padding: 10px;\n  `}\n\n  & button {\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n  }\n`;\n\nconst MonthContainer = styled.div<{ format?: string }>`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n\n  ${({ format }) => (format === FORMAT.DAY) && css`\n    display: block;\n  `}\n`;\n\ninterface MonthProps {\n  interval: number[];\n}\n\nexport const Month: FunctionComponent<MonthProps> = ({ interval }) => {\n  const dispatch = useAppDispatch();\n  const format = useAppSelector(selectFormat);\n  const monthName = useRef(new Date(interval[0]).getMonth());\n  const countEmptyItem = useRef((new Date(interval[0]).getDay()\n  + 7 - IS_MONDAY_FIRST_DAY_OF_WEEK) % 7);\n  const empty = [];\n\n  for (let i = 0; i < countEmptyItem.current; i += 1) {\n    empty.push(-i);\n  }\n\n  const onMonthHandler = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    if (format === FORMAT.MONTH) {\n      return;\n    }\n\n    let monthValue: string | undefined;\n\n    if (e.target instanceof HTMLButtonElement) {\n      monthValue = e.target.dataset.monthValue;\n    }\n\n    if (monthValue) {\n      dispatch(setSpecialDate(+monthValue));\n      dispatch(setFormat(FORMAT.MONTH));\n      dispatch(setIntervalCalendar());\n    }\n  };\n\n  return (\n    <Wrapper format={format}>\n      <MonthTitle\n        format={format}\n      >\n        <button\n          type=\"button\"\n          onClick={e => onMonthHandler(e)}\n          data-month-value={String(interval[0])}\n        >\n          {format === FORMAT.YEAR && MONTH_NAMES[monthName.current]}\n          {/* {format === FORMAT.MONTH && MONTH_NAMES[currentMonthName.current]} */}\n        </button>\n      </MonthTitle>\n\n      <MonthContainer\n        format={format}\n      >\n        {empty.map((emptyItem: number) => (\n          <Day key={emptyItem} startDay={emptyItem} disabled />\n        ))}\n\n        {interval.map((day: number) => (\n          <Day key={day} startDay={day} />\n        ))}\n      </MonthContainer>\n    </Wrapper>\n  );\n};\n","export function buildInterval(start: number, end: number) {\n  const interval = [];\n  let day = start;\n\n  // eslint-disable-next-line no-console\n  // console.log('buildInterval//',\n  //   new Date(start).toDateString(),\n  //   '-----------',\n  //   new Date(end).toDateString());\n\n  while (day < end) {\n    interval.push(day);\n\n    day = new Date(\n      new Date(day).getFullYear(),\n      new Date(day).getMonth(),\n      new Date(day).getDate() + 1,\n    ).valueOf();\n  }\n\n  return interval;\n}\n","export const divideYear = (interval: number[]) => {\n  const year = [];\n  let i = 0;\n\n  while (i < interval.length) {\n    const currentMonth = new Date(interval[i]).getMonth();\n    const month = [];\n\n    while (currentMonth === new Date(interval[i]).getMonth()) {\n      month.push(interval[i]);\n\n      i += 1;\n    }\n\n    year.push(month);\n  }\n\n  return year;\n};\n","import {\n  FunctionComponent,\n} from 'react';\nimport styled from 'styled-components';\nimport { divideYear } from '../helpers/divideYear';\nimport { Month } from './Month';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 2rem;\n  min-width: 1100px;\n`;\n\ninterface YearProps {\n  interval: number[];\n}\n\nexport const Year: FunctionComponent<YearProps> = ({ interval }) => {\n  const prepared = divideYear(interval);\n\n  return (\n    <Wrapper>\n      {prepared.map((month: number[]) => (\n        <Month key={month[0]} interval={month} />\n      ))}\n    </Wrapper>\n  );\n};\n","import { FunctionComponent, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { Month } from '../../components/Month';\nimport { buildInterval } from '../../helpers/buildInterval';\nimport {\n  selectCurrentDate,\n  selectEndInterval,\n  selectFormat,\n  selectStartInterval,\n  setCurrentDate,\n  setFormat,\n  setIntervalCalendar,\n} from '../../store/features/Interval/intervalSlice';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { FORMAT } from '../../constants/FORMAT';\nimport { Year } from '../../components/Year';\nimport { Day } from '../../components/Day';\n\nconst Wrapper = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nexport const HomePage: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const currentDate = useAppSelector(selectCurrentDate);\n  const start = useAppSelector(selectStartInterval);\n  const end = useAppSelector(selectEndInterval);\n  const interval = buildInterval(start, end);\n  const format = useAppSelector(selectFormat);\n\n  useEffect(() => {\n    if (!currentDate) {\n      dispatch(setCurrentDate());\n      dispatch(setFormat(FORMAT.MONTH));\n    }\n\n    dispatch(setIntervalCalendar());\n  }, []);\n\n  return (\n    <Wrapper>\n      {format === FORMAT.YEAR && <Year interval={interval} />}\n      {(format === FORMAT.MONTH || format === FORMAT.WEEK)\n      && <Month interval={interval} />}\n      {format === FORMAT.DAY && <Day startDay={interval[0]} />}\n    </Wrapper>\n  );\n};\n","import axios from 'axios';\n\nconst baseURL = 'https://jsonplaceholder.typicode.com';\n\nconst instance = axios.create({\n  baseURL,\n});\n\ntype FetchData = {\n};\n\nexport const client = {\n  async get<T>(url: string) {\n    const response = await instance.get<T>(url);\n\n    // eslint-disable-next-line no-console\n    console.log('get', baseURL + url);\n\n    return response.data;\n  },\n\n  async post<T>(url: string, data: FetchData) {\n    const response = await instance.post<T>(url, data);\n\n    return response.data;\n  },\n\n  async patch<T>(url: string, data: FetchData) {\n    const response = await instance.patch<T>(url, data);\n\n    return response.data;\n  },\n\n  async delete(url: string) {\n    return instance.delete(url);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { getAllPosts } from '../../../api/post';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../..';\nimport { Post } from '../../../type/Post';\n\nexport interface PostsState {\n  storage: Post[];\n  statusLoading: 'idle' | 'loading' | 'failed';\n  error: unknown;\n}\n\nconst initialState: PostsState = {\n  storage: [],\n  statusLoading: 'idle',\n  error: null,\n};\n\nexport const getPostsAsync = createAsyncThunk('posts/fetchPosts', async () => {\n  const response: Post[] = await getAllPosts();\n\n  // eslint-disable-next-line no-console\n  console.log(response);\n\n  return response;\n});\n\nconst postsSlice = createSlice({\n  name: 'interval',\n  initialState,\n  reducers: {\n    addPosts: (state: PostsState, action: PayloadAction<Post[]>) => {\n      state.storage.push(...action.payload);\n    },\n    setStatus: (\n      state: PostsState,\n      action: PayloadAction<'idle' | 'loading' | 'failed'>,\n    ) => {\n      state.statusLoading = action.payload;\n    },\n    setError: (state: PostsState, action: PayloadAction<unknown>) => {\n      state.error = action.payload;\n      state.statusLoading = 'failed';\n    },\n    resetState: (state: PostsState) => {\n      return { ...state, ...initialState };\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getPostsAsync.pending, (state: PostsState) => {\n        state.statusLoading = 'loading';\n      })\n      .addCase(getPostsAsync.fulfilled, (state, action) => {\n        state.storage.push(...action.payload);\n        state.statusLoading = 'idle';\n      })\n      .addCase(getPostsAsync.rejected, (state, action) => {\n        state.statusLoading = 'failed';\n\n        // eslint-disable-next-line no-console\n        console.log(action);\n      });\n  },\n});\n\nexport default postsSlice.reducer;\nexport const {\n  addPosts,\n  setStatus,\n  setError,\n  resetState,\n} = postsSlice.actions;\n\nexport const selectPosts = (state: RootState) => state.posts.storage;\nexport const selectPostStatusLoading\n= (state: RootState) => state.posts.statusLoading;\nexport const selectPostError = (state: RootState) => state.posts.error;\n","import { client } from '../utils/axiosClient';\nimport { Post } from '../type/Post';\n\nexport const getAllPosts = () => client.get<Post[]>('/posts/');\nexport const getPostById = (postId: number) => client.get<Post[]>(`/posts/${postId}`);\n","import { FunctionComponent } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { resetState, selectPosts } from '../../store/features/Posts/postsSlice';\n\nimport './PostPage.scss';\n\nexport const PostPage: FunctionComponent = () => {\n  const { id } = useParams();\n\n  // eslint-disable-next-line no-console\n  // console.log(id);\n\n  const posts = useAppSelector(selectPosts);\n  const dispatch = useAppDispatch();\n\n  dispatch(resetState());\n\n  const post = posts.find(p => String(p.id) === String(id));\n\n  return (\n    <div\n      className=\"PostPage\"\n    >\n      <Link\n        to=\"/\"\n        className=\"PostPage__Link\"\n      >\n        Back\n      </Link>\n\n      {post ? (\n        <div>\n          <h1>{`PostPage: ${post.title}`}</h1>\n          <p>{post.body}</p>\n        </div>\n      ) : (\n        <>\n          post doesn&nbsp;t exist\n        </>\n      )}\n    </div>\n  );\n};\n","import { PopupKeys, PopupValues } from '../type/Popup';\n\nexport const POPUP: { [key in PopupKeys]: PopupValues } = {\n  IS_SHOW_DATE_PICKER: 'isShowDatePicker',\n  IS_SHOW_ADD_ITEM: 'isShowAddItem',\n};\n","/* eslint-disable no-case-declarations */\n/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../..';\nimport { PopupValues } from '../../../type/Popup';\n\nexport interface ControlState {\n  popup: {\n    isShowDatePicker: boolean;\n    isShowAddItem: boolean;\n  },\n  isShowDatePickerForm: boolean;\n}\n\nconst initialState: ControlState = {\n  popup: {\n    isShowDatePicker: false,\n    isShowAddItem: false,\n  },\n  isShowDatePickerForm: false,\n};\n\nconst controlSlice = createSlice({\n  name: 'controls',\n  initialState,\n  reducers: {\n    switchPopupInForm: (\n      state: ControlState,\n    ) => {\n      state.isShowDatePickerForm = !state.isShowDatePickerForm;\n    },\n    switchPopup: (\n      state: ControlState,\n      action: PayloadAction<PopupValues>,\n    ) => {\n      state.popup = {\n        ...initialState.popup,\n        [action.payload]: !state.popup[action.payload],\n      };\n    },\n    closeAllPopup: (\n      state: ControlState,\n    ) => {\n      state.popup = {\n        ...initialState.popup,\n      };\n    },\n    resetState: (state: ControlState) => {\n      return { ...state, ...initialState };\n    },\n  },\n});\n\nexport default controlSlice.reducer;\nexport const {\n  switchPopup,\n  closeAllPopup,\n  resetState,\n  switchPopupInForm,\n} = controlSlice.actions;\n\nexport const selectIsShowDatePicker\n = (state: RootState) => state.control.popup.isShowDatePicker;\nexport const selectIsShowAddItem\n= (state: RootState) => state.control.popup.isShowAddItem;\nexport const selectIsShowDatePickerInForm\n= (state: RootState) => state.control.isShowDatePickerForm;\n","export const MOVE: { [key in 'FORWARD' | 'BACK']: '1' | '-1' } = {\n  FORWARD: '1',\n  BACK: '-1',\n};\n","import { FunctionComponent } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { IoCaretBackOutline, IoCaretForwardOutline } from 'react-icons/io5';\nimport { FORMAT } from '../constants/FORMAT';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport {\n  navigateMonth,\n  navigateYear,\n  selectCurrentDate,\n  selectFormat,\n  setFormat,\n  setIntervalCalendar,\n} from '../store/features/Interval/intervalSlice';\nimport { MONTH_NAMES } from '../constants/MONTH';\nimport { MOVE } from '../constants/MOVE';\n\nconst Wrapper = styled.div`\n  display: flex;`;\n\nconst Arrow = styled.button`\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  outline: none;\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Value = styled.div<{ format: string }>`\n  width: 160px;\n\n  ${({ format }) => format === FORMAT.YEAR\n    && css`\n      width: 60px;\n    `}\n`;\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface ArrowNavigatorProps {}\n\nexport const ArrowNavigator: FunctionComponent<ArrowNavigatorProps> = () => {\n  const dispatch = useAppDispatch();\n  const currentDate = useAppSelector(selectCurrentDate);\n  const format = useAppSelector(selectFormat);\n  const fullNameMonth = MONTH_NAMES[new Date(currentDate).getMonth()];\n  const fullYear = new Date(currentDate).getFullYear();\n\n  const onNavigateHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (format !== FORMAT.YEAR) {\n      dispatch(navigateMonth(e.currentTarget.value));\n      dispatch(setFormat(FORMAT.MONTH));\n    }\n\n    if (format === FORMAT.YEAR) {\n      dispatch(navigateYear(e.currentTarget.value));\n    }\n\n    dispatch(setIntervalCalendar());\n  };\n\n  return (\n    <Wrapper>\n      <Arrow\n        type=\"button\"\n        value={MOVE.BACK}\n        onClick={onNavigateHandler}\n      >\n        <IoCaretBackOutline />\n      </Arrow>\n      <Value format={format}>\n        {format !== FORMAT.YEAR && (\n          <>\n            &nbsp;\n            {fullNameMonth}\n          </>\n        )}\n        &nbsp;\n        {fullYear}\n        &nbsp;\n      </Value>\n      <Arrow\n        type=\"button\"\n        value={MOVE.FORWARD}\n        onClick={onNavigateHandler}\n      >\n        <IoCaretForwardOutline />\n      </Arrow>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  outline: none;\n  justify-content: center;\n  cursor: pointer;\n`;\n","import { MONTH_NAMES_CUT } from '../constants/MONTH';\n\nexport const buildArrOfMonths = (currentDate: number) => {\n  const arrOfMonth = [];\n\n  for (let i = 0; i < 12; i += 1) {\n    arrOfMonth.push({\n      label: MONTH_NAMES_CUT[i],\n      value: new Date(\n        (new Date(currentDate).getFullYear()),\n        i,\n        1,\n      ).valueOf().toString(),\n    });\n  }\n\n  return arrOfMonth;\n};\n","import {\n  IS_MONDAY_FIRST_DAY_OF_WEEK,\n} from '../store/features/Interval/intervalSlice';\nimport { buildInterval } from './buildInterval';\n\nexport const buildArrOfDays = (startMonth: number) => {\n  const month = [];\n  const values = buildInterval(\n    startMonth,\n    new Date(\n      new Date(startMonth).getFullYear(),\n      new Date(startMonth).getMonth() + 1,\n      1,\n    ).valueOf(),\n  );\n\n  const countEmptyItem = (new Date(startMonth).getDay()\n    + 7 - IS_MONDAY_FIRST_DAY_OF_WEEK) % 7;\n\n  for (let i = 0; i < countEmptyItem; i += 1) {\n    month.push({\n      id: String(i),\n      value: '',\n      label: '',\n    });\n  }\n\n  for (let i = countEmptyItem; i < countEmptyItem + values.length; i += 1) {\n    month.push({\n      id: String(i),\n      value: String(values[i - countEmptyItem]),\n      label: String(new Date(values[i - countEmptyItem]).getDate()),\n    });\n  }\n\n  return month;\n};\n","export const buildArrayOfYears = (currentDate: number) => {\n  const years = [];\n\n  for (let i = 0; i < 12; i += 1) {\n    years.push(\n      new Date(\n        (new Date(currentDate).getFullYear()) - 4 + i,\n        0,\n        0,\n      ).valueOf().toString(),\n    );\n  }\n\n  return years;\n};\n","import { RefObject } from 'react';\n\nexport const handleClickOutside = (\n  event: MouseEvent,\n  refControl: RefObject<Element>,\n  refContainer: RefObject<Element>,\n  onShowHandler: () => void,\n) => {\n  // eslint-disable-next-line no-console\n  // console.log('start handleClickOutside');\n\n  if (refControl.current\n    && !refControl.current.contains(event.target as Node)) {\n    // eslint-disable-next-line no-console\n    // console.log('outside refControl', refControl);\n  }\n\n  if (refContainer.current\n    && !refContainer.current.contains(event.target as Node)) {\n    // eslint-disable-next-line no-console\n    // console.log('outside refContainer', refContainer);\n  }\n\n  if (refControl.current\n    && !refControl.current.contains(event.target as Node)\n    && refContainer.current\n    && !refContainer.current.contains(event.target as Node)) {\n    // eslint-disable-next-line no-console\n    // console.log('outside refControl and refContainer',\n    // refControl, refContainer);\n\n    onShowHandler();\n  }\n};\n","import {\n  FunctionComponent,\n  RefObject,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport styled from 'styled-components';\nimport {\n} from '../../store/features/Interval/intervalSlice';\nimport { Button } from '../Button';\nimport { buildArrOfMonths } from '../../helpers/buildArrOfMonths';\nimport { buildArrOfDays } from '../../helpers/buildArrOfDays';\nimport { buildArrayOfYears } from '../../helpers/buildArrayOfYears';\nimport { handleClickOutside } from '../../helpers/handleClickOutside';\n\nconst Wrapper = styled.div`\n  z-index: 50;\n  position: absolute;\n  right: 0;\n  top: 45px;\n  background-color: white;\n  width: 400px;\n  box-sizing: border-box;\n  padding: 20px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nconst Years = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  row-gap: 20px;\n  & > :hover{\n    background-color: #e6e6e6;\n  }\n`;\n\nconst Months = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  row-gap: 20px;\n  & > :hover{\n    background-color: #e6e6e6;\n  }\n`;\n\nconst Days = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  row-gap: 20px;\n  & > :hover{\n    background-color: #e6e6e6;\n  }\n`;\n\ntype DatePickerBoxProps = {\n  currentDate: number;\n  onChangeDate: (day: number) => void;\n  datePickerControlRef: RefObject<HTMLDivElement>;\n  onShowDatePickerHandler: () => void;\n};\n\nexport const DatePickerContainer: FunctionComponent<DatePickerBoxProps> = ({\n  currentDate,\n  onChangeDate,\n  datePickerControlRef,\n  onShowDatePickerHandler,\n}) => {\n  const [arrOfYears, setArrOfYears] = useState<string[]>([]);\n  const [arrOfMonths, setArrOfMonths]\n  = useState<{ label: string, value: string }[]>([]);\n  const [arrOfDays, setArrOfDays]\n  = useState<{ id: string, value: string, label: string }[]>([]);\n\n  const datePickerContainerRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-console\n  // console.log(controlRef, onShowDatePickerHandler);\n\n  useEffect(() => {\n    // eslint-disable-next-line no-console\n    console.log('useEffect mount clicker DP');\n\n    document.addEventListener('click', (event) => handleClickOutside(\n      event,\n      datePickerControlRef,\n      datePickerContainerRef,\n      onShowDatePickerHandler,\n    ));\n\n    return () => {\n      document.removeEventListener('click', (event) => handleClickOutside(\n        event,\n        datePickerControlRef,\n        datePickerContainerRef,\n        onShowDatePickerHandler,\n      ));\n    };\n  }, []);\n\n  useEffect(() => {\n    // eslint-disable-next-line no-console\n    console.log('useEffect DK');\n\n    setArrOfYears(buildArrayOfYears(currentDate));\n  }, []);\n\n  const onYearHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    // eslint-disable-next-line no-console\n    console.log('DatePicker// onYearHandler');\n\n    e.stopPropagation();\n    const currentYear = +(e.target as HTMLButtonElement).value;\n\n    setArrOfMonths(buildArrOfMonths(currentYear));\n  };\n\n  const onMonthHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    // eslint-disable-next-line no-console\n    console.log('DatePicker// onMonthHandler');\n\n    e.stopPropagation();\n    const month = +(e.target as HTMLButtonElement).value;\n\n    const currentMonth = new Date(\n      new Date(month).getFullYear(),\n      new Date(month).getMonth(),\n      1,\n    ).valueOf();\n\n    setArrOfDays(buildArrOfDays(currentMonth));\n  };\n\n  const onDayHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    // eslint-disable-next-line no-console\n    console.log('DatePicker// onDayHandler');\n\n    e.stopPropagation();\n    const day = +(e.target as HTMLButtonElement).value;\n\n    onChangeDate(day);\n    setArrOfMonths([]);\n    setArrOfDays([]);\n  };\n\n  return (\n    <Wrapper ref={datePickerContainerRef}>\n      {arrOfYears.length > 0\n      && arrOfMonths.length === 0\n      && arrOfDays.length === 0\n      && (\n        <Years>\n          {(arrOfYears.map((y:string) => (\n            <Button\n              key={y}\n              type=\"button\"\n              value={y}\n              onClick={e => onYearHandler(e)}\n            >\n              {new Date(+y).getFullYear()}\n            </Button>\n          )))}\n        </Years>\n      )}\n\n      {arrOfYears.length > 0\n      && arrOfMonths.length > 0\n      && arrOfDays.length === 0\n      && (\n        <Months>\n          {(arrOfMonths.map((m) => (\n            <Button\n              key={m.label}\n              type=\"button\"\n              value={m.value}\n              onClick={e => onMonthHandler(e)}\n            >\n              {m.label}\n            </Button>\n          )))}\n        </Months>\n      )}\n\n      {arrOfYears.length > 0\n      && arrOfMonths.length > 0\n      && arrOfDays.length > 0\n      && (\n        <Days>\n          {arrOfDays.map(\n            (d: { id: string, value: string, label: string }) => (\n              <Button\n                key={d.id}\n                type=\"button\"\n                value={d.value}\n                onClick={e => onDayHandler(e)}\n              >\n                {d.label}\n              </Button>\n            ),\n          )}\n        </Days>\n      )}\n    </Wrapper>\n  );\n};\n","import {\n  FunctionComponent,\n  useRef,\n} from 'react';\nimport styled from 'styled-components';\nimport {\n  IoCalendarOutline,\n} from 'react-icons/io5';\nimport {\n} from '../../store/features/Interval/intervalSlice';\nimport { DatePickerContainer } from './DatePicker.Container';\n\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\nconst DatePickerTitle = styled.div`\n  display: flex;\n`;\n\nconst DatePickerButton = styled.button`\n  border: none;\n  background-color: transparent;\n  outline: none;\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n  margin-left: 40px;\n`;\n\ninterface DatePickerProps {\n  currentDate: number;\n  onChangeDate: (value: number) => void;\n  isShowDatePickerContainer: boolean;\n  onShowDatePickerHandler: () => void;\n}\n\nexport const DatePicker: FunctionComponent<DatePickerProps> = ({\n  currentDate,\n  onChangeDate,\n  isShowDatePickerContainer,\n  onShowDatePickerHandler,\n}) => {\n  const controlRef = useRef<HTMLDivElement>(null);\n\n  return (\n    <Wrapper>\n      <DatePickerTitle ref={controlRef}>\n        <DatePickerButton onClick={onShowDatePickerHandler}>\n          <IoCalendarOutline size={30} />\n        </DatePickerButton>\n      </DatePickerTitle>\n\n      {isShowDatePickerContainer && (\n        <DatePickerContainer\n          currentDate={currentDate}\n          datePickerControlRef={controlRef}\n          onChangeDate={onChangeDate}\n          onShowDatePickerHandler={onShowDatePickerHandler}\n        />\n      )}\n    </Wrapper>\n  );\n};\n","import {\n  FunctionComponent,\n  RefObject,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport styled from 'styled-components';\nimport {\n  IoRefresh,\n} from 'react-icons/io5';\n\nimport {\n} from '../../store/features/Interval/intervalSlice';\nimport { Button } from '../Button';\nimport { buildArrOfMonths } from '../../helpers/buildArrOfMonths';\nimport { buildArrOfDays } from '../../helpers/buildArrOfDays';\nimport { buildArrayOfYears } from '../../helpers/buildArrayOfYears';\nimport { handleClickOutside } from '../../helpers/handleClickOutside';\n\nconst Wrapper = styled.div`\n  z-index: 50;\n  position: absolute;\n  right: 0;\n  top: 45px;\n  background-color: white;\n  width: 400px;\n  box-sizing: border-box;\n  padding: 20px;\n\n  display: flex;\n\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nconst Years = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  row-gap: 20px;\n  & > :hover{\n    background-color: #e6e6e6;\n  }\n`;\n\nconst Months = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  row-gap: 20px;\n  & > :hover{\n    background-color: #e6e6e6;\n  }\n`;\n\nconst Days = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  row-gap: 20px;\n  & > :hover{\n    background-color: #e6e6e6;\n  }\n`;\n\nconst Hours = styled.div`\n`;\n\nconst Minutes = styled.div`\n`;\n\nconst RefreshButton = styled.button`\n\n`;\n\ntype TimePickerBoxProps = {\n  currentTime: number;\n  onChangeTime: (day: number) => void;\n  TimePickerControlRef: RefObject<HTMLDivElement>;\n  onShowTimePickerHandler: () => void;\n};\n\nexport const TimePickerContainer: FunctionComponent<TimePickerBoxProps> = ({\n  currentTime,\n  onChangeTime,\n  TimePickerControlRef,\n  onShowTimePickerHandler,\n}) => {\n  const [hours, setHours] = useState<string>('');\n  const [minutes, setMinutes] = useState<string>('');\n\n  const [arrOfYears, setArrOfYears] = useState<string[]>([]);\n  const [arrOfMonths, setArrOfMonths]\n  = useState<{ label: string, value: string }[]>([]);\n  const [arrOfDays, setArrOfDays]\n  = useState<{ id: string, value: string, label: string }[]>([]);\n\n  const TimePickerContainerRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-console\n  // console.log(controlRef, onShowTimePickerHandler);\n\n  useEffect(() => {\n    // eslint-disable-next-line no-console\n    console.log('useEffect mount clicker TP');\n\n    document.addEventListener('click', (event) => handleClickOutside(\n      event,\n      TimePickerControlRef,\n      TimePickerContainerRef,\n      onShowTimePickerHandler,\n    ));\n\n    return () => {\n      document.removeEventListener('click', (event) => handleClickOutside(\n        event,\n        TimePickerControlRef,\n        TimePickerContainerRef,\n        onShowTimePickerHandler,\n      ));\n    };\n  }, []);\n\n  useEffect(() => {\n    // eslint-disable-next-line no-console\n    console.log('useEffect TK');\n    setArrOfYears(buildArrayOfYears(new Date().valueOf()));\n\n    setHours((new Date()).getHours().toString());\n    setMinutes((new Date()).getMinutes().toString());\n  }, []);\n\n  const onYearHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    // eslint-disable-next-line no-console\n    console.log('TimePicker// onYearHandler');\n\n    e.stopPropagation();\n    const currentYear = +(e.target as HTMLButtonElement).value;\n\n    setArrOfMonths(buildArrOfMonths(currentYear));\n  };\n\n  const onMonthHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    // eslint-disable-next-line no-console\n    console.log('TimePicker// onMonthHandler');\n\n    e.stopPropagation();\n    const month = +(e.target as HTMLButtonElement).value;\n\n    const currentMonth = new Date(\n      new Date(month).getFullYear(),\n      new Date(month).getMonth(),\n      1,\n    ).valueOf();\n\n    setArrOfDays(buildArrOfDays(currentMonth));\n  };\n\n  const onDayHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    // eslint-disable-next-line no-console\n    console.log('TimePicker// onDayHandler');\n\n    e.stopPropagation();\n    const day = +(e.target as HTMLButtonElement).value;\n\n    onChangeTime(day);\n    setArrOfMonths([]);\n    setArrOfDays([]);\n  };\n\n  const onTimeHandler = () => {\n    const time = new Date(\n      new Date(currentTime).getFullYear(),\n      new Date(currentTime).getMonth(),\n      new Date(currentTime).getDate(),\n      +hours,\n      +minutes,\n    ).valueOf();\n\n    onChangeTime(time);\n  };\n\n  return (\n    <Wrapper ref={TimePickerContainerRef}>\n      {false && arrOfYears.length > 0\n      && arrOfMonths.length === 0\n      && arrOfDays.length === 0\n      && (\n        <Years>\n          {(arrOfYears.map((y:string) => (\n            <Button\n              key={y}\n              type=\"button\"\n              value={y}\n              onClick={e => onYearHandler(e)}\n            >\n              {new Date(+y).getFullYear()}\n            </Button>\n          )))}\n        </Years>\n      )}\n\n      {false && arrOfYears.length > 0\n      && arrOfMonths.length > 0\n      && arrOfDays.length === 0\n      && (\n        <Months>\n          {(arrOfMonths.map((m) => (\n            <Button\n              key={m.label}\n              type=\"button\"\n              value={m.value}\n              onClick={e => onMonthHandler(e)}\n            >\n              {m.label}\n            </Button>\n          )))}\n        </Months>\n      )}\n\n      {false && arrOfYears.length > 0\n      && arrOfMonths.length > 0\n      && arrOfDays.length > 0\n      && (\n        <Days>\n          {arrOfDays.map(\n            (d: { id: string, value: string, label: string }) => (\n              <Button\n                key={d.id}\n                type=\"button\"\n                value={d.value}\n                onClick={e => onDayHandler(e)}\n              >\n                {d.label}\n              </Button>\n            ),\n          )}\n        </Days>\n      )}\n\n      <Hours>\n        {hours}\n      </Hours>\n      :\n      <Minutes>\n        {minutes}\n      </Minutes>\n\n      <RefreshButton onClick={onShowTimePickerHandler}>\n        <IoRefresh size={30} />\n      </RefreshButton>\n\n      <Button onClick={onTimeHandler}>SetTime</Button>\n    </Wrapper>\n  );\n};\n","import {\n  FunctionComponent,\n  useRef,\n} from 'react';\nimport styled from 'styled-components';\nimport {\n  IoTimeOutline,\n} from 'react-icons/io5';\nimport {\n} from '../../store/features/Interval/intervalSlice';\nimport { TimePickerContainer } from './TimePicker.Container';\n\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\nconst TimePickerTitle = styled.div`\n  display: flex;\n`;\n\nconst TimePickerButton = styled.button`\n  border: none;\n  background-color: transparent;\n  outline: none;\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n  margin-left: 40px;\n`;\n\ninterface TimePickerProps {\n  currentTime: number;\n  onChangeTime: (value: number) => void;\n  isShowTimePickerContainer: boolean;\n  onShowTimePickerHandler: () => void;\n}\n\nexport const TimePicker: FunctionComponent<TimePickerProps> = ({\n  currentTime,\n  onChangeTime,\n  isShowTimePickerContainer,\n  onShowTimePickerHandler,\n}) => {\n  const controlRef = useRef<HTMLDivElement>(null);\n\n  return (\n    <Wrapper>\n      <TimePickerTitle ref={controlRef}>\n        <TimePickerButton onClick={onShowTimePickerHandler}>\n          <IoTimeOutline size={30} />\n        </TimePickerButton>\n      </TimePickerTitle>\n\n      {isShowTimePickerContainer && (\n        <TimePickerContainer\n          currentTime={currentTime}\n          TimePickerControlRef={controlRef}\n          onChangeTime={onChangeTime}\n          onShowTimePickerHandler={onShowTimePickerHandler}\n        />\n      )}\n    </Wrapper>\n  );\n};\n","import {\n  ChangeEvent,\n  FunctionComponent,\n  RefObject,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport styled from 'styled-components';\nimport { handleClickOutside } from '../../helpers/handleClickOutside';\n// import { POPUP } from '../constants/POPUP';\nimport {\n// switchPopup,\n} from '../../store/features/Controls/controlsSlice';\nimport { selectCurrentDate } from '../../store/features/Interval/intervalSlice';\nimport {\n  // useAppDispatch,\n  useAppSelector,\n} from '../../store/hooks';\nimport { DatePicker } from '../DatePicker/DatePicker';\nimport { TimePicker } from '../TimePicker/TimePicker';\n// import { DatePicker } from './DatePicker';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  z-index: 100;\n  background-color: white;\n  opacity: 1;\n  width: 460px;\n  box-sizing: border-box;\n  padding: 20px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nconst Form = styled.form`\n`;\n\nconst FormItem = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: center;\n\n  & label {\n    width: 150px;\n    text-align: right;\n    padding-right: 10px;\n    box-sizing: border-box;\n  }\n`;\n\n// interface HOCDatePickerProps {\n//   currentDate: number;\n//   onChangeDate: (value: number) => void;\n// }\n\n// const HOCDatePicker: FunctionComponent<HOCDatePickerProps> = ({\n//   currentDate,\n//   onChangeDate,\n// }) => {\n//   const [isShowDatePicker, setIsShowDatePicker] = useState(false);\n//   const onShowHandlerDatePicker = () => setIsShowDatePicker(!isShowDatePicker);\n\n//   return (\n//     <DatePicker\n//       currentDate={currentDate}\n//       onChangeDate={onChangeDate}\n//       isShowDatePickerContainer={isShowDatePicker}\n//       onShowDatePickerHandler={onShowHandlerDatePicker}\n//     />\n//   );\n// };\n\ntype FormDataKeys = 'title' | 'description' | 'date' | 'time';\ntype FormData = { [key in FormDataKeys]: string };\nconst FORM_DATA = {\n  TITLE: 'title',\n  DESCRIPTION: 'description',\n  DATE: 'date',\n  TIME: 'time',\n};\n\ninterface FormBodyProps {\n  buttonRef: RefObject<HTMLButtonElement>;\n  onShowFormHandler: () => void;\n}\n\nexport const FormContainer: FunctionComponent<FormBodyProps>\n= ({ buttonRef, onShowFormHandler }) => {\n  // const dispatch = useAppDispatch();\n  const [value, setValue] = useState<FormData>({\n    title: '',\n    description: '',\n    date: '',\n    time: '',\n  });\n\n  const formRef = useRef<HTMLDivElement>(null);\n  const currentDate = useAppSelector(selectCurrentDate);\n  const [isShowDatePickerContainer, setIsShowDatePickerContainer]\n  = useState<boolean>(false);\n  const [isShowTimePickerContainer, setIsShowTimePickerContainer]\n  = useState<boolean>(false);\n\n  useEffect(() => {\n    document.addEventListener('click', (event) => handleClickOutside(\n      event, buttonRef, formRef, onShowFormHandler,\n    ));\n\n    return () => {\n      document.removeEventListener('click', (event) => handleClickOutside(\n        event, buttonRef, formRef, onShowFormHandler,\n      ));\n    };\n  }, []);\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setValue({\n      ...value,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    // eslint-disable-next-line no-console\n    console.log('Form onSubmit');\n  };\n\n  const onChangeDate = (newDate: number) => {\n    // eslint-disable-next-line no-console\n    // console.log('onChangeDate');\n\n    setValue({\n      ...value,\n      [FORM_DATA.DATE]: String(newDate),\n    });\n\n    setIsShowDatePickerContainer(false);\n  };\n\n  const onChangeTime = (newTime: number) => {\n    // eslint-disable-next-line no-console\n    console.log('onChangeTime');\n\n    setValue({\n      ...value,\n      [FORM_DATA.TIME]: String(newTime),\n    });\n\n    setIsShowTimePickerContainer(false);\n  };\n\n  const onShowDatePickerHandler = () => {\n    setIsShowDatePickerContainer(!isShowDatePickerContainer);\n  };\n\n  const onShowTimePickerHandler = () => {\n    setIsShowTimePickerContainer(!isShowTimePickerContainer);\n  };\n\n  return (\n    <Wrapper ref={formRef}>\n      <Form onSubmit={handleSubmit}>\n        {Object.keys(value).map(key => (\n          <FormItem key={key}>\n            <label htmlFor={key}>\n              {key}\n              :&nbsp;\n            </label>\n\n            {key === FORM_DATA.DATE && (\n              <>\n                {new Date(+value[key as FormDataKeys]\n                  || currentDate).toDateString()}\n\n                <DatePicker\n                  currentDate={currentDate}\n                  onChangeDate={onChangeDate}\n                  isShowDatePickerContainer={isShowDatePickerContainer}\n                  onShowDatePickerHandler={onShowDatePickerHandler}\n                />\n              </>\n            )}\n\n            {key === FORM_DATA.TIME && (\n              <>\n                {new Date(+value.date || currentDate).toDateString()}\n\n                <TimePicker\n                  currentTime={currentDate}\n                  onChangeTime={onChangeTime}\n                  isShowTimePickerContainer={isShowTimePickerContainer}\n                  onShowTimePickerHandler={onShowTimePickerHandler}\n                />\n              </>\n            )}\n\n            {(key !== FORM_DATA.DATE && key !== FORM_DATA.TIME) && (\n              <input\n                id={key}\n                type=\"text\"\n                name={key}\n                value={value[key as keyof FormData]}\n                onChange={onChange}\n                placeholder={`input ${key}`}\n              />\n            )}\n          </FormItem>\n        ))}\n\n        <button\n          type=\"submit\"\n        >\n          Submit\n        </button>\n\n      </Form>\n    </Wrapper>\n  );\n};\n","import {\n  FunctionComponent,\n  useCallback,\n  useRef,\n} from 'react';\nimport styled from 'styled-components';\nimport { POPUP } from '../../constants/POPUP';\nimport {\n  selectIsShowAddItem,\n  switchPopup,\n} from '../../store/features/Controls/controlsSlice';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { Button } from '../Button';\nimport { FormContainer } from './Form.Container';\n\nconst Wrapper = styled.div`\n  background-color: white;\n  z-index: 150;\n`;\n\nexport const Form: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const isFormOpen = useAppSelector(selectIsShowAddItem);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n\n  const onShowFormHandler = useCallback(\n    () => dispatch(switchPopup(POPUP.IS_SHOW_ADD_ITEM)), [],\n  );\n\n  return (\n    <Wrapper>\n      <Button\n        ref={buttonRef}\n        onClick={onShowFormHandler}\n      >\n        Add new item\n      </Button>\n\n      {isFormOpen && (\n        <FormContainer\n          buttonRef={buttonRef}\n          onShowFormHandler={onShowFormHandler}\n        />\n      )}\n    </Wrapper>\n  );\n};\n","import {\n  FunctionComponent,\n} from 'react';\nimport styled from 'styled-components';\n\nimport { FORMAT } from '../constants/FORMAT';\nimport { MONTH_NAMES } from '../constants/MONTH';\nimport { POPUP } from '../constants/POPUP';\nimport {\n  closeAllPopup,\n  selectIsShowDatePicker,\n  switchPopup,\n} from '../store/features/Controls/controlsSlice';\nimport {\n  selectCurrentDate,\n  selectFormat,\n  setFormat,\n  setIntervalCalendar,\n  setSpecialDate,\n} from '../store/features/Interval/intervalSlice';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { ArrowNavigator } from './ArrowNavigator';\nimport { DatePicker } from '../UI/DatePicker/DatePicker';\nimport { Form } from '../UI/Form/Form';\n\nconst Wrapper = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n`;\n\nconst Back = styled.div<{ format: string }>`\n  cursor: pointer;\n`;\n\nconst ControlsNavigate = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const Controls: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const currentDate = useAppSelector(selectCurrentDate);\n  const format = useAppSelector(selectFormat);\n  const fullNameMonth = MONTH_NAMES[new Date(currentDate).getMonth()];\n  const fullYear = new Date(currentDate).getFullYear();\n  const isShowDatePickerContainer = useAppSelector(selectIsShowDatePicker);\n\n  const onGoToPrevFormat = () => {\n    if (format === FORMAT.YEAR) {\n      return;\n    }\n\n    switch (format) {\n      case FORMAT.DAY:\n      case FORMAT.WEEK:\n        dispatch(setFormat(FORMAT.MONTH));\n        break;\n\n      case FORMAT.MONTH:\n        dispatch(setFormat(FORMAT.YEAR));\n        break;\n\n      default:\n    }\n\n    dispatch(setIntervalCalendar());\n  };\n\n  const onChangeDate = (day: number) => {\n    dispatch(closeAllPopup());\n    dispatch(setSpecialDate(new Date(day).valueOf()));\n    dispatch(setFormat(FORMAT.MONTH));\n    dispatch(setIntervalCalendar());\n  };\n\n  const onShowDatePickerHandler = () => {\n    dispatch(switchPopup(POPUP.IS_SHOW_DATE_PICKER));\n  };\n\n  return (\n    <Wrapper>\n      <Back\n        format={format}\n        onClick={onGoToPrevFormat}\n      >\n        {(format === FORMAT.DAY || format === FORMAT.WEEK) && fullNameMonth}\n        {(format === FORMAT.MONTH || format === FORMAT.YEAR) && fullYear}\n      </Back>\n\n      <Form />\n\n      <ControlsNavigate>\n        <ArrowNavigator />\n\n        <DatePicker\n          currentDate={currentDate}\n          onChangeDate={onChangeDate}\n          isShowDatePickerContainer={isShowDatePickerContainer}\n          onShowDatePickerHandler={onShowDatePickerHandler}\n        />\n      </ControlsNavigate>\n    </Wrapper>\n  );\n};\n","import { createHashRouter, Outlet } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { NotFound } from './pages/NotFound';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { PostPage } from './pages/PostPage/PostPage';\nimport { Controls } from './components/Controls';\n\nconst Wrapper = styled.div`\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 100vh;\n  `;\n\nconst Header = styled.header`\n  max-width: 1200px;\n  margin: 0 auto;\n  text-align: center;\n  margin-bottom: 1rem;\n`;\n\nconst Main = styled.main`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nfunction App() {\n  return (\n    <Wrapper>\n      <Header>\n        <h1>Calendar</h1>\n        <Controls />\n      </Header>\n\n      <Main>\n        <Outlet />\n      </Main>\n    </Wrapper>\n  );\n}\n\nexport const router = createHashRouter([\n  {\n    path: '/',\n    element: <App />,\n    errorElement: <NotFound />,\n    id: 'root',\n    children: [\n      {\n        path: '/',\n        element: <HomePage />,\n        id: 'homepage',\n        errorElement: <>Error on Homepage</>,\n      },\n      {\n        path: '/post/:id',\n        element: <PostPage />,\n        errorElement: <>Error on PostPage</>,\n      },\n    ],\n  },\n]);\n","/* eslint-disable import/no-cycle */\nimport {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport postsReducer from './features/Posts/postsSlice';\nimport intervalSlice from './features/Interval/intervalSlice';\nimport controlsSlice from './features/Controls/controlsSlice';\n\nconst rootReducer = combineReducers({\n  posts: postsReducer,\n  interval: intervalSlice,\n  control: controlsSlice,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['interval'],\n  // blacklist: ['interval'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [\n        FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER,\n        'posts',\n      ],\n    },\n  }),\n});\n\nexport default store;\n\nexport const persistor = persistStore(store);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n\n/* eslint-disable @typescript-eslint/indent */\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { RouterProvider } from 'react-router-dom';\nimport { router } from './App';\nimport store, { persistor } from './store';\n\nimport './index.css';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement,\n);\n\nroot.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <RouterProvider router={router} />\n    </PersistGate>\n  </Provider>,\n);\n"],"sourceRoot":""}