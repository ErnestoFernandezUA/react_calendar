{"version":3,"sources":["pages/NotFound.tsx","components/Day.tsx","components/List.tsx","type/format.ts","store/features/Interval/intervalSlice.ts","store/hooks.ts","pages/HomePage/HomePage.tsx","helpers/buildInterval.ts","utils/axiosClient.ts","store/features/Posts/postsSlice.ts","api/post.ts","pages/PostPage/PostPage.tsx","App.tsx","store/index.ts","index.tsx"],"names":["NotFound","Wrapper","styled","div","Attributes","Day","dayProps","day","console","log","date","Date","year","getFullYear","month","getMonth","getDate","dayOfWeek","List","interval","map","INTERVAL","initialState","currentDate","start","end","storage","formatCalendar","intervalSlice","createAsyncThunk","a","createSlice","name","reducers","setCurrentDate","state","valueOf","setSpecialDate","action","payload","addTodo","push","setFormat","setIntervalCalendar","toDateString","toString","getDay","daysToLastMonday","getTime","IS_MONDAY_FIRST_DAY_OF_WEEK","resetState","actions","selectCurrentDate","selectStartInterval","selectEndInterval","useAppDispatch","useDispatch","useAppSelector","useSelector","HomePage","dispatch","buildInterval","useEffect","className","baseURL","instance","axios","create","client","url","get","response","data","statusLoading","error","getPostsAsync","postsSlice","addPosts","setStatus","setError","extraReducers","builder","addCase","pending","fulfilled","rejected","selectPosts","posts","PostPage","id","useParams","post","find","p","String","to","title","body","App","router","createHashRouter","path","element","errorElement","children","rootReducer","combineReducers","postsReducer","persistConfig","key","whitelist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","createRoot","document","getElementById","render","loading"],"mappings":"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","file":"static/js/main.34f82ec9.chunk.js","sourcesContent":["import { FunctionComponent } from 'react';\n\nexport const NotFound: FunctionComponent = () => {\n  return (\n    <div>\n      This page doesn&nbsp;t exist.\n    </div>\n  );\n};\n","import { FunctionComponent } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n\n`;\n\nconst Attributes = styled.div`\n\n`;\n\ninterface DayProps {\n  day: number;\n  // eslint-disable-next-line react/require-default-props\n  // key?: number;\n}\n\nexport const Day: FunctionComponent<DayProps> = ({ day: dayProps }) => {\n  // eslint-disable-next-line no-console\n  console.log(dayProps);\n  const date = new Date(dayProps);\n\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const day = date.getDate();\n  const dayOfWeek = date.getDate();\n\n  return (\n    <Wrapper>\n      <Attributes>\n        {`${day}/${month}/${year}`}\n        {dayOfWeek}\n      </Attributes>\n    </Wrapper>\n  );\n};\n","import { FunctionComponent } from 'react';\nimport styled from 'styled-components';\nimport { Day } from './Day';\n\nconst Wrapper = styled.div`\n\n`;\n\ninterface ListProps {\n  interval: number[];\n}\n\nexport const List: FunctionComponent<ListProps> = ({ interval }) => {\n  return (\n    <Wrapper>\n      {interval.map((day: number) => (\n        <Day key={day} day={day} />\n      ))}\n    </Wrapper>\n  );\n};\n","export type Interval = 'day' | 'week' | 'month' | 'year';\n\nexport const INTERVAL: { [key: string]: Interval } = {\n  DAY: 'day',\n  WEEK: 'week',\n  MONTH: 'month',\n  YEAR: 'year',\n};\n","/* eslint-disable no-case-declarations */\n/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../..';\nimport { INTERVAL, Interval } from '../../../type/format';\nimport { Todo } from '../../../type/Todo';\n\nconst IS_MONDAY_FIRST_DAY_OF_WEEK = 1;\n\nexport interface IntervalState {\n  currentDate: number;\n  start: number;\n  end: number;\n\n  storage: Todo[];\n  formatCalendar: Interval;\n}\n\nconst initialState: IntervalState = {\n  currentDate: 0,\n  start: 0,\n  end: 0,\n\n  storage: [],\n  formatCalendar: 'month',\n};\n\nexport const getIntervalAsync = createAsyncThunk(\n  'Interval/fetchInterval',\n  async () => {\n    // const response: Post[] = await getAllInterval();\n\n    // eslint-disable-next-line no-console\n    // console.log(response);\n\n    // return response;\n  },\n);\n\nconst intervalSlice = createSlice({\n  name: 'post',\n  initialState,\n  reducers: {\n    setCurrentDate: (\n      state: IntervalState,\n    ) => {\n      state.currentDate = (new Date()).valueOf();\n    },\n    setSpecialDate: (\n      state: IntervalState,\n      action,\n    ) => {\n      state.currentDate = new Date(action.payload).valueOf();\n    },\n    addTodo: (state: IntervalState, action: PayloadAction<Todo>) => {\n      state.storage.push(action.payload);\n    },\n    setFormat: (\n      state: IntervalState,\n      action: PayloadAction<Interval>,\n    ) => {\n      state.formatCalendar = action.payload;\n    },\n    setIntervalCalendar: (state: IntervalState) => {\n      // eslint-disable-next-line no-console\n      console.log('setIntervalCalendar//',\n        'format calendar:', state.formatCalendar,\n        'current date:', new Date(state.currentDate).toDateString());\n\n      if (!state.currentDate) {\n        // eslint-disable-next-line no-console\n        console.log('break');\n\n        return;\n      }\n\n      switch (state.formatCalendar) {\n        case INTERVAL.DAY:\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            new Date(state.currentDate).getDate(),\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            new Date(state.currentDate).getDate() + 1,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          console.log('day start', new Date(state.start).toString());\n          // eslint-disable-next-line no-console\n          console.log('day end', new Date(state.end).toString());\n          break;\n\n        case INTERVAL.WEEK:\n          const date = new Date(state.currentDate);\n          const dayOfWeek = date.getDay();\n          const daysToLastMonday = dayOfWeek === 1 ? 7 : dayOfWeek - 1 || 7;\n\n          state.start = new Date(\n            date.getTime() - (daysToLastMonday\n              - IS_MONDAY_FIRST_DAY_OF_WEEK) * 24 * 60 * 60 * 1000,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          console.log('value', new Date(\n            date.getTime() - daysToLastMonday * 24 * 60 * 60 * 1000,\n          ));\n\n          // state.start = new Date(\n          //   // new Date(state.currentDate).getFullYear(),\n          //   // new Date(state.currentDate).getMonth(),\n          //   // (new Date(state.currentDate).getDate()\n          //   // - new Date(state.currentDate).getDay()\n          //   // + IS_MONDAY_FIRST_DAY_OF_WEEK\n          //   // - 7) % 7,\n          //   new Date(state.currentDate).getTime()\n          //   - (new Date(state.currentDate).getUTCDay() === 1\n          //     ? 7 : new Date(state.currentDate).getUTCDay() - 1 || 7)\n          //     * 24 * 60 * 60 * 1000,\n          // ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            (new Date(state.currentDate).getDate()\n            - new Date(state.currentDate).getDay()\n            + IS_MONDAY_FIRST_DAY_OF_WEEK\n            // eslint-disable-next-line no-mixed-operators\n            - 7) % 7 + 7,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          console.log('week start', new Date(state.start).toString());\n          // eslint-disable-next-line no-console\n          console.log('week end', new Date(state.end).toString());\n          break;\n\n        case INTERVAL.MONTH:\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            IS_MONDAY_FIRST_DAY_OF_WEEK\n            - (new Date(\n              new Date(state.currentDate).getFullYear(),\n              new Date(state.currentDate).getMonth(),\n              0,\n            )).getDay(),\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth() + 1,\n            (IS_MONDAY_FIRST_DAY_OF_WEEK\n            + 7\n            - (new Date(\n              new Date(state.currentDate).getFullYear(),\n              new Date(state.currentDate).getMonth() + 1,\n              0,\n            )).getDay()) % 7,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          // console.log('start month', new Date(state.start).toString());\n          // eslint-disable-next-line no-console\n          // console.log('end month', new Date(state.end).toString());\n\n          break;\n\n        case INTERVAL.YEAR:\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            0,\n            1,\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear() + 1,\n            0,\n            1,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          // console.log('start year', new Date(state.start).toString());\n          // eslint-disable-next-line no-console\n          // console.log('end year', new Date(state.end).toString());\n          break;\n\n        default:\n      }\n    },\n    resetState: (state: IntervalState) => {\n      return { ...state, ...initialState };\n    },\n  },\n  // extraReducers: (builder) => {\n  //   builder\n  //     .addCase(getIntervalAsync.pending, (state: IntervalState) => {\n  //       state.statusLoading = 'loading';\n  //     })\n  //     .addCase(getIntervalAsync.fulfilled, (state, action) => {\n  //       state.storage.push(...action.payload);\n  //       state.statusLoading = 'idle';\n  //     })\n  //     .addCase(getIntervalAsync.rejected, (state, action) => {\n  //       state.statusLoading = 'failed';\n\n  //       // eslint-disable-next-line no-console\n  //       console.log(action);\n  //     });\n  // },\n});\n\nexport default intervalSlice.reducer;\nexport const {\n  setCurrentDate,\n  setSpecialDate,\n  setFormat,\n  setIntervalCalendar,\n  addTodo,\n  resetState,\n} = intervalSlice.actions;\n\nexport const selectTodos = (state: RootState) => state.interval.storage;\nexport const selectCurrentDate\n= (state: RootState) => state.interval.currentDate;\nexport const selectStartInterval\n= (state: RootState) => state.interval.start;\nexport const selectEndInterval\n= (state: RootState) => state.interval.end;\n\nexport const selectIntervalFormat\n= (state: RootState) => state.interval.formatCalendar;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '.';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { FunctionComponent, useEffect } from 'react';\nimport { List } from '../../components/List';\nimport { buildInterval } from '../../helpers/buildInterval';\nimport {\n  selectCurrentDate,\n  selectEndInterval,\n  selectStartInterval,\n  setCurrentDate,\n  setFormat,\n  setIntervalCalendar,\n  setSpecialDate,\n} from '../../store/features/Interval/intervalSlice';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { INTERVAL } from '../../type/format';\n\nimport './HomePage.scss';\n\nexport const HomePage: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const currentDate = useAppSelector(selectCurrentDate);\n  const start = useAppSelector(selectStartInterval);\n  const end = useAppSelector(selectEndInterval);\n\n  // eslint-disable-next-line no-console\n  console.log('start = ', new Date(start));\n  // eslint-disable-next-line no-console\n  console.log('end = ', new Date(end));\n\n  const interval = buildInterval(start, end);\n\n  useEffect(() => {\n    if (!currentDate) {\n      dispatch(setCurrentDate());\n    }\n\n    dispatch(setSpecialDate(new Date(2023, 2, 15).valueOf()));\n    dispatch(setFormat(INTERVAL.MONTH));\n    dispatch(setIntervalCalendar());\n  }, []);\n\n  return (\n    <div className=\"HomePage\">\n      <h2>HomePage</h2>\n      <p>{new Date(currentDate).toString()}</p>\n\n      <List interval={interval} />\n\n    </div>\n  );\n};\n","export function buildInterval(start: number, end: number) {\n  const interval = [];\n  let day = start;\n\n  // eslint-disable-next-line no-console\n  console.log('buildInterval//',\n    new Date(start).toDateString(),\n    '-----------',\n    new Date(end).toDateString());\n\n  while (day < end) {\n    interval.push(day);\n\n    day = new Date(\n      new Date(day).getFullYear(),\n      new Date(day).getMonth(),\n      new Date(day).getDate() + 1,\n    ).valueOf();\n  }\n\n  return interval;\n}\n","import axios from 'axios';\n\nconst baseURL = 'https://jsonplaceholder.typicode.com';\n\nconst instance = axios.create({\n  baseURL,\n});\n\ntype FetchData = {\n};\n\nexport const client = {\n  async get<T>(url: string) {\n    const response = await instance.get<T>(url);\n\n    // eslint-disable-next-line no-console\n    console.log('get', baseURL + url);\n\n    return response.data;\n  },\n\n  async post<T>(url: string, data: FetchData) {\n    const response = await instance.post<T>(url, data);\n\n    return response.data;\n  },\n\n  async patch<T>(url: string, data: FetchData) {\n    const response = await instance.patch<T>(url, data);\n\n    return response.data;\n  },\n\n  async delete(url: string) {\n    return instance.delete(url);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { getAllPosts } from '../../../api/post';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../..';\nimport { Post } from '../../../type/Post';\n\nexport interface PostsState {\n  storage: Post[];\n  statusLoading: 'idle' | 'loading' | 'failed';\n  error: unknown;\n}\n\nconst initialState: PostsState = {\n  storage: [],\n  statusLoading: 'idle',\n  error: null,\n};\n\nexport const getPostsAsync = createAsyncThunk('posts/fetchPosts', async () => {\n  const response: Post[] = await getAllPosts();\n\n  // eslint-disable-next-line no-console\n  console.log(response);\n\n  return response;\n});\n\nconst postsSlice = createSlice({\n  name: 'post',\n  initialState,\n  reducers: {\n    addPosts: (state: PostsState, action: PayloadAction<Post[]>) => {\n      state.storage.push(...action.payload);\n    },\n    setStatus: (\n      state: PostsState,\n      action: PayloadAction<'idle' | 'loading' | 'failed'>,\n    ) => {\n      state.statusLoading = action.payload;\n    },\n    setError: (state: PostsState, action: PayloadAction<unknown>) => {\n      state.error = action.payload;\n      state.statusLoading = 'failed';\n    },\n    resetState: (state: PostsState) => {\n      return { ...state, ...initialState };\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getPostsAsync.pending, (state: PostsState) => {\n        state.statusLoading = 'loading';\n      })\n      .addCase(getPostsAsync.fulfilled, (state, action) => {\n        state.storage.push(...action.payload);\n        state.statusLoading = 'idle';\n      })\n      .addCase(getPostsAsync.rejected, (state, action) => {\n        state.statusLoading = 'failed';\n\n        // eslint-disable-next-line no-console\n        console.log(action);\n      });\n  },\n});\n\nexport default postsSlice.reducer;\nexport const {\n  addPosts,\n  setStatus,\n  setError,\n  resetState,\n} = postsSlice.actions;\n\nexport const selectPosts = (state: RootState) => state.posts.storage;\nexport const selectPostStatusLoading\n= (state: RootState) => state.posts.statusLoading;\nexport const selectPostError = (state: RootState) => state.posts.error;\n","import { client } from '../utils/axiosClient';\nimport { Post } from '../type/Post';\n\nexport const getAllPosts = () => client.get<Post[]>('/posts/');\nexport const getPostById = (postId: number) => client.get<Post[]>(`/posts/${postId}`);\n","import { FunctionComponent } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { resetState, selectPosts } from '../../store/features/Posts/postsSlice';\n\nimport './PostPage.scss';\n\nexport const PostPage: FunctionComponent = () => {\n  const { id } = useParams();\n\n  // eslint-disable-next-line no-console\n  console.log(id);\n\n  const posts = useAppSelector(selectPosts);\n  const dispatch = useAppDispatch();\n\n  dispatch(resetState());\n\n  const post = posts.find(p => String(p.id) === String(id));\n\n  return (\n    <div\n      className=\"PostPage\"\n    >\n      <Link\n        to=\"/\"\n        className=\"PostPage__Link\"\n      >\n        Back\n      </Link>\n\n      {post ? (\n        <div>\n          <h1>{`PostPage: ${post.title}`}</h1>\n          <p>{post.body}</p>\n        </div>\n      ) : (\n        <>\n          post doesn&nbsp;t exist\n        </>\n      )}\n    </div>\n  );\n};\n","import { createHashRouter, Outlet } from 'react-router-dom';\nimport { NotFound } from './pages/NotFound';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { PostPage } from './pages/PostPage/PostPage';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App__Header\">\n        <h1>Calendar</h1>\n      </header>\n\n      <main className=\"App__Container\">\n        <Outlet />\n      </main>\n    </div>\n  );\n}\n\nexport const router = createHashRouter([\n  {\n    path: '/',\n    element: <App />,\n    errorElement: <NotFound />,\n    id: 'root',\n    children: [\n      {\n        path: '/',\n        element: <HomePage />,\n        id: 'homepage',\n        errorElement: <>Error on Homepage</>,\n      },\n      {\n        path: '/post/:id',\n        element: <PostPage />,\n        errorElement: <>Error on PostPage</>,\n      },\n    ],\n  },\n]);\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n// eslint-disable-next-line import/no-cycle\nimport postsReducer from './features/Posts/postsSlice';\n// eslint-disable-next-line import/no-cycle\nimport intervalSlice from './features/Interval/intervalSlice';\n\nconst rootReducer = combineReducers({\n  posts: postsReducer,\n  interval: intervalSlice,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['interval'],\n  // blacklist: ['interval'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [\n        FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER,\n        'posts',\n      ],\n    },\n  }),\n});\n\nexport default store;\n\nexport const persistor = persistStore(store);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n\n/* eslint-disable @typescript-eslint/indent */\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { RouterProvider } from 'react-router-dom';\nimport { router } from './App';\nimport store, { persistor } from './store';\nimport './index.css';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement,\n);\n\nroot.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <RouterProvider router={router} />\n    </PersistGate>\n  </Provider>,\n);\n"],"sourceRoot":""}