{"version":3,"sources":["pages/NotFound.tsx","constants/FORMAT.ts","constants/MONTH.ts","store/features/Interval/intervalSlice.ts","store/hooks.ts","constants/WEEK.ts","components/Day.tsx","components/Month.tsx","helpers/buildInterval.ts","helpers/divideYear.ts","components/Year.tsx","pages/HomePage/HomePage.tsx","utils/axiosClient.ts","store/features/Posts/postsSlice.ts","api/post.ts","pages/PostPage/PostPage.tsx","store/features/Controls/controlsSlice.ts","constants/POPUP.ts","constants/MOVE.ts","UI/Button.tsx","components/DatePicker.tsx","components/Form.tsx","components/Controls.tsx","App.tsx","store/index.ts","index.tsx"],"names":["NotFound","FORMAT","MONTH_NAMES","MONTH_NAMES_CUT","initialState","currentDate","start","end","storage","formatCalendar","intervalSlice","createAsyncThunk","a","createSlice","name","reducers","setCurrentDate","state","Date","valueOf","setSpecialDate","action","payload","setFormat","console","log","navigateMonth","getFullYear","getMonth","Number","getDate","navigateYear","setIntervalCalendar","toDateString","toString","date","dayOfWeek","getDay","IS_MONDAY_FIRST_DAY_OF_WEEK","addTodo","push","resetState","actions","selectCurrentDate","interval","selectStartInterval","selectEndInterval","selectFormat","useAppDispatch","useDispatch","useAppSelector","useSelector","WEEK","Wrapper","styled","div","format","css","isWeekend","isNotCurrentMonth","isCurrentDay","DayTitle","DayOfWeek","button","DateString","p","DayListTodos","Day","startDay","disabled","dispatch","value","day","arr","split","fullNameDayOfWeek","month","year","useDayHook","current","anyDay","isCurrentYear","isCurrentMonth","useCurrentHook","onClick","e","dayValue","stopPropagation","target","HTMLButtonElement","dataset","onWeekClick","String","MonthTitle","MonthContainer","Month","monthName","useRef","countEmptyItem","empty","i","type","monthValue","onMonthHandler","map","emptyItem","buildInterval","Year","prepared","length","currentMonth","divideYear","HomePage","useEffect","baseURL","instance","axios","create","client","url","get","response","data","statusLoading","error","getPostsAsync","postsSlice","addPosts","setStatus","setError","extraReducers","builder","addCase","pending","fulfilled","rejected","selectPosts","posts","PostPage","id","useParams","post","find","className","to","title","body","popup","isShowDatePicker","isShowAddItem","controlSlice","switchPopup","closeAllPopup","selectIsShowDatePicker","control","selectIsShowAddItem","POPUP","MOVE","Button","DatePickerTitle","DatePickerArrow","DatePickerButton","DatePickerContainer","DatePicker","fullNameMonth","fullYear","isShowContainer","arrOfYears","useState","setYear","arrOfMonths","setMonth","arrOfDays","controlRef","formRef","years","buildArrayOfYears","handleClickOutside","event","contains","document","addEventListener","removeEventListener","onNavigateHandler","currentTarget","onYearHandler","buildArrOfMonths","startMonth","d","buildArrOfDays","ref","size","y","m","onDayHandler","Math","random","FormContainer","form","Form","isFormOpen","description","time","setValue","buttonRef","onChange","onSubmit","preventDefault","Object","keys","key","htmlFor","placeholder","Back","ControlsNavigate","Controls","Header","header","Main","main","App","router","createHashRouter","path","element","errorElement","children","rootReducer","combineReducers","postsReducer","controlsSlice","persistConfig","whitelist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","createRoot","getElementById","render","loading"],"mappings":"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","file":"static/js/main.e10e0451.chunk.js","sourcesContent":["import { FunctionComponent } from 'react';\n\nexport const NotFound: FunctionComponent = () => {\n  return (\n    <div>\n      This page doesn&nbsp;t exist.\n    </div>\n  );\n};\n","import { FormatKeys, FormatValue } from '../type/Format';\n\nexport const FORMAT: { [key in FormatKeys]: FormatValue } = {\n  DAY: 'day',\n  WEEK: 'week',\n  MONTH: 'month',\n  YEAR: 'year',\n};\n","export const MONTH_NAMES = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport const MONTH_NAMES_CUT = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n","/* eslint-disable no-case-declarations */\n/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../..';\nimport { FORMAT } from '../../../constants/FORMAT';\nimport { FormatValue } from '../../../type/Format';\nimport { Todo } from '../../../type/Todo';\n\nexport const IS_MONDAY_FIRST_DAY_OF_WEEK = 1;\n\nexport interface IntervalState {\n  currentDate: number;\n  start: number;\n  end: number;\n\n  storage: Todo[];\n  formatCalendar: FormatValue;\n}\n\nconst initialState: IntervalState = {\n  currentDate: 0,\n  start: 0,\n  end: 0,\n\n  storage: [],\n  formatCalendar: FORMAT.MONTH,\n};\n\nexport const getIntervalAsync = createAsyncThunk(\n  'Interval/fetchInterval',\n  async () => {\n    // const response: Post[] = await getAllInterval();\n\n    // eslint-disable-next-line no-console\n    // console.log(response);\n\n    // return response;\n  },\n);\n\nconst intervalSlice = createSlice({\n  name: 'interval',\n  initialState,\n  reducers: {\n    setCurrentDate: (\n      state: IntervalState,\n    ) => {\n      state.currentDate = (new Date()).valueOf();\n    },\n    setSpecialDate: (\n      state: IntervalState,\n      action,\n    ) => {\n      state.currentDate = new Date(action.payload).valueOf();\n    },\n    setFormat: (\n      state: IntervalState,\n      action: PayloadAction<FormatValue>,\n    ) => {\n      state.formatCalendar = action.payload;\n\n      // eslint-disable-next-line no-console\n      console.log('setFormat', state.formatCalendar);\n    },\n    navigateMonth: (\n      state: IntervalState,\n      action: PayloadAction<string>,\n    ) => {\n      // eslint-disable-next-line no-console\n      console.log('navigateMonth', action.payload);\n\n      state.currentDate = new Date(\n        new Date(state.currentDate).getFullYear(),\n        new Date(state.currentDate).getMonth()\n        + Number(action.payload),\n        new Date(state.currentDate).getDate(),\n      ).valueOf();\n    },\n    navigateYear: (\n      state: IntervalState,\n      action: PayloadAction<string>,\n    ) => {\n      // eslint-disable-next-line no-console\n      console.log('navigateYear', action.payload);\n\n      state.currentDate = new Date(\n        new Date(state.currentDate).getFullYear()\n        + Number(action.payload),\n        new Date(state.currentDate).getMonth(),\n        new Date(state.currentDate).getDate(),\n      ).valueOf();\n    },\n    setIntervalCalendar: (state: IntervalState) => {\n      // eslint-disable-next-line no-console\n      console.log('setIntervalCalendar//',\n        'format calendar:', state.formatCalendar,\n        'current date:', new Date(state.currentDate).toDateString());\n\n      if (!state.currentDate) {\n        // eslint-disable-next-line no-console\n        console.log('break');\n\n        return;\n      }\n\n      switch (state.formatCalendar) {\n        case FORMAT.DAY:\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            new Date(state.currentDate).getDate(),\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            new Date(state.currentDate).getDate() + 1,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          console.log('day start', new Date(state.start).toString());\n          // eslint-disable-next-line no-console\n          console.log('day end', new Date(state.end).toString());\n          break;\n\n        case FORMAT.WEEK:\n          const date = new Date(state.currentDate).getDate();\n          const dayOfWeek = new Date(state.currentDate).getDay();\n\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            dayOfWeek === 0\n              ? date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK - 7\n              : date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK,\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            (dayOfWeek === 0\n              ? date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK - 7\n              : date - dayOfWeek + IS_MONDAY_FIRST_DAY_OF_WEEK) + 7,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          console.log('week start', new Date(state.start).toDateString());\n          // eslint-disable-next-line no-console\n          console.log('week end', new Date(state.end).toDateString());\n          break;\n\n        case FORMAT.MONTH:\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth(),\n            IS_MONDAY_FIRST_DAY_OF_WEEK\n            - (new Date(\n              new Date(state.currentDate).getFullYear(),\n              new Date(state.currentDate).getMonth(),\n              0,\n            )).getDay(),\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear(),\n            new Date(state.currentDate).getMonth() + 1,\n            (IS_MONDAY_FIRST_DAY_OF_WEEK\n            + 7\n            - (new Date(\n              new Date(state.currentDate).getFullYear(),\n              new Date(state.currentDate).getMonth() + 1,\n              0,\n            )).getDay()) % 7,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          console.log('start month', new Date(state.start).toString());\n          // eslint-disable-next-line no-console\n          console.log('end month', new Date(state.end).toString());\n\n          break;\n\n        case FORMAT.YEAR:\n          state.start = new Date(\n            new Date(state.currentDate).getFullYear(),\n            0,\n            1,\n          ).valueOf();\n\n          state.end = new Date(\n            new Date(state.currentDate).getFullYear() + 1,\n            0,\n            1,\n          ).valueOf();\n\n          // eslint-disable-next-line no-console\n          console.log('start year', new Date(state.start).toString());\n          // eslint-disable-next-line no-console\n          console.log('end year', new Date(state.end).toString());\n          break;\n\n        default:\n      }\n    },\n    addTodo: (state: IntervalState, action: PayloadAction<Todo>) => {\n      state.storage.push(action.payload);\n    },\n    resetState: (state: IntervalState) => {\n      return { ...state, ...initialState };\n    },\n  },\n  // extraReducers: (builder) => {\n  //   builder\n  //     .addCase(getIntervalAsync.pending, (state: IntervalState) => {\n  //       state.statusLoading = 'loading';\n  //     })\n  //     .addCase(getIntervalAsync.fulfilled, (state, action) => {\n  //       state.storage.push(...action.payload);\n  //       state.statusLoading = 'idle';\n  //     })\n  //     .addCase(getIntervalAsync.rejected, (state, action) => {\n  //       state.statusLoading = 'failed';\n\n  //       // eslint-disable-next-line no-console\n  //       console.log(action);\n  //     });\n  // },\n});\n\nexport default intervalSlice.reducer;\nexport const {\n  setCurrentDate,\n  setSpecialDate,\n  setFormat,\n  navigateMonth,\n  navigateYear,\n  setIntervalCalendar,\n  addTodo,\n  resetState,\n} = intervalSlice.actions;\n\nexport const selectTodos = (state: RootState) => state.interval.storage;\nexport const selectCurrentDate\n= (state: RootState) => state.interval.currentDate;\nexport const selectStartInterval\n= (state: RootState) => state.interval.start;\nexport const selectEndInterval\n= (state: RootState) => state.interval.end;\n\nexport const selectFormat\n= (state: RootState) => state.interval.formatCalendar;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '.';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export const WEEK = [\n  'Sunday',\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n];\n","import {\n  FunctionComponent,\n  // MouseEvent,\n  // useEffect,\n} from 'react';\nimport styled, { css } from 'styled-components';\nimport { FORMAT } from '../constants/FORMAT';\nimport { WEEK } from '../constants/WEEK';\nimport {\n  selectCurrentDate,\n  selectFormat,\n  setFormat,\n  setIntervalCalendar,\n  setSpecialDate,\n} from '../store/features/Interval/intervalSlice';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\n\ntype StyledProps = {\n  format?: string,\n  isWeekend?: boolean,\n  isNotCurrentMonth?: boolean,\n  isCurrentDay?: boolean;\n};\n\nconst Wrapper = styled.div<StyledProps>`\n  box-sizing: border-box;\n  padding: 0;\n  font-size: 14px;\n  cursor: pointer;\n\n  ${({ format }) => (format === FORMAT.DAY) && css`\n    height: 100vh;\n  `}\n\n  ${({ format }) => (format === FORMAT.WEEK || format === FORMAT.MONTH) && css`\n    height: 200px;\n\n    &:hover{\n      box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n    }\n  `}\n\n  ${({ format, isWeekend }) => (format === FORMAT.YEAR && isWeekend) && css`\n    color: red;\n  `}\n\n  ${({ isNotCurrentMonth }) => isNotCurrentMonth && css`\n    opacity: 0.4;\n  `}\n\n  ${({ isCurrentDay }) => isCurrentDay && css`\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n  `}\n`;\n\nconst DayTitle = styled.div<{ isCurrentDay: boolean }>`\n  box-sizing: border-box;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\n  ${({ isCurrentDay }) => isCurrentDay && css`\n    background-color: #79c6c6;\n  `}\n\n  ${({ isCurrentDay }) => !isCurrentDay && css`\n    &:hover {\n      background-color: #e6e6e6;\n    }\n  `}\n`;\n\nconst DayOfWeek = styled.button<StyledProps>`\n  background-color: transparent;\n  cursor: pointer;\n  padding: 0 10px;\n  line-height: 30px;\n  border: none;\n  outline: none;\n  position: relative;\n  cursor: pointer;\n  text-align: left;\n\n  border-right: 10px solid transparent;\n  width: 80px;\n  border-top: 10px solid transparent;\n  border-bottom: 10px solid transparent;\n\n  ${({ isWeekend }) => isWeekend && css`\n    color: #a16e73;\n    font-weight: bold;\n  `}\n\n\n  ${({ isCurrentDay, format }) => !isCurrentDay\n  && format !== FORMAT.WEEK && css`\n    &:hover {\n      transition: all 0.2s;\n      border-bottom: 10px solid #79c6c6;\n    }\n  `}\n\n  ${({ format }) => (format === FORMAT.YEAR)\n  && css`\n    display: none;\n  `}\n`;\n\nconst DateString = styled.p<{ format?: string }>`\n  margin: 0;\n  line-height: 40px;\n  position: relative;\n  overflow: hidden;\n  padding: 0 10px;\n\n  ${({ format }) => format === FORMAT.YEAR && css`\n    display: block;\n    text-align: right;\n  `}\n`;\n\nconst DayListTodos = styled.div<{ format?: string }>`\n  box-sizing: border-box;\n  padding: 10px;\n\n  ${({ format }) => {\n    if (format === FORMAT.YEAR) {\n      return css`\n        display: none;\n      `;\n    }\n\n    return '';\n  }}\n`;\n\ninterface DayProps {\n  startDay: number;\n  // eslint-disable-next-line react/require-default-props\n  disabled?: boolean;\n}\n\nconst useDayHook = (value: number) => {\n  const date = new Date(value);\n  const day = date.getDate();\n  const arr = date.toDateString().split(' ');\n  const fullNameDayOfWeek = WEEK[date.getDay()];\n\n  return {\n    dayOfWeek: arr[0],\n    month: arr[1],\n    day,\n    year: arr[3],\n    fullNameDayOfWeek,\n  };\n};\n\nconst useCurrentHook = (current: number, anyDay: number) => {\n  const isCurrentYear\n  = new Date(current).getFullYear() === new Date(anyDay).getFullYear();\n\n  const isCurrentMonth\n  = new Date(current).getMonth() === new Date(anyDay).getMonth()\n  && new Date(current).getFullYear() === new Date(anyDay).getFullYear();\n\n  const isCurrentDay\n   = new Date(current).getDate() === new Date(anyDay).getDate()\n   && new Date(current).getMonth() === new Date(anyDay).getMonth()\n   && new Date(current).getFullYear() === new Date(anyDay).getFullYear();\n\n  return { isCurrentDay, isCurrentMonth, isCurrentYear };\n};\n\nexport const Day: FunctionComponent<DayProps> = ({\n  startDay,\n  disabled = false,\n}) => {\n  const dispatch = useAppDispatch();\n  const currentDate = useAppSelector(selectCurrentDate);\n  const format = useAppSelector(selectFormat);\n  const isWeekend = (new Date(startDay).getDay() === 0\n  || new Date(startDay).getDay() === 6);\n  const {\n    dayOfWeek, month, day, year, fullNameDayOfWeek,\n  } = useDayHook(startDay);\n  const {\n    isCurrentDay,\n    isCurrentMonth,\n  } = useCurrentHook(currentDate, startDay);\n\n  const isTodosToday = false;\n\n  const onDayClick = () => {\n    // eslint-disable-next-line no-console\n    console.log('Day onClick');\n\n    if (isCurrentDay && format === FORMAT.DAY) {\n      return;\n    }\n\n    if (isCurrentDay) {\n      dispatch(setFormat(FORMAT.DAY));\n      dispatch(setIntervalCalendar());\n\n      return;\n    }\n\n    if (!disabled) {\n      dispatch(setSpecialDate(startDay));\n    }\n\n    if (!disabled && !isCurrentMonth) {\n      dispatch(setIntervalCalendar());\n    }\n  };\n\n  const onWeekClick = (\n    e: React.MouseEvent<HTMLButtonElement | HTMLDivElement, MouseEvent>,\n  ) => {\n    if (format === FORMAT.WEEK) {\n      return;\n    }\n\n    e.stopPropagation();\n    let dayValue: string | undefined;\n\n    if (e.target instanceof HTMLButtonElement) {\n      dayValue = e.target.dataset.dayValue;\n    }\n\n    if (dayValue) {\n      dispatch(setSpecialDate(+dayValue));\n      dispatch(setFormat(FORMAT.WEEK));\n      dispatch(setIntervalCalendar());\n    }\n  };\n\n  if (disabled) {\n    return (\n      <div />\n    );\n  }\n\n  return (\n    <Wrapper\n      format={format}\n      isWeekend={isWeekend}\n      isNotCurrentMonth={!isCurrentMonth}\n      isCurrentDay={isCurrentDay}\n    >\n      <DayTitle\n        isCurrentDay={isCurrentDay}\n        onClick={onDayClick}\n      >\n        <DayOfWeek\n          isWeekend={isWeekend}\n          onClick={(e) => onWeekClick(e)}\n          data-day-value={String(startDay)}\n          isCurrentDay={isCurrentDay}\n          format={format}\n        >\n          {format === FORMAT.DAY && fullNameDayOfWeek}\n          {(format === FORMAT.WEEK || format === FORMAT.MONTH) && dayOfWeek}\n        </DayOfWeek>\n\n        <DateString format={format}>\n          {format === FORMAT.DAY ? `${day}/${month}/${year}` : day}\n        </DateString>\n      </DayTitle>\n\n      {(format !== FORMAT.YEAR) && (\n        <DayListTodos format={format}>\n          {isTodosToday && <p>List of TODOS:</p>}\n        </DayListTodos>\n      )}\n    </Wrapper>\n  );\n};\n","import { FunctionComponent, useRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport { FORMAT } from '../constants/FORMAT';\nimport { MONTH_NAMES } from '../constants/MONTH';\nimport {\n  IS_MONDAY_FIRST_DAY_OF_WEEK,\n  // selectCurrentDate,\n  selectFormat,\n  setFormat,\n  setIntervalCalendar,\n  setSpecialDate,\n} from '../store/features/Interval/intervalSlice';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { Day } from './Day';\n\nconst Wrapper = styled.div<{ format?: string }>`\n\n\n  ${({ format }) => {\n    if (format === FORMAT.DAY) {\n      return css`\n        display: block;\n      `;\n    }\n\n    if (format === FORMAT.YEAR) {\n      return css`\n        /* max-width: 200px; */\n      `;\n    }\n\n    return '';\n  }}\n`;\n\nconst MonthTitle = styled.div<{ format?: string }>`\n\n  cursor: pointer;\n\n  ${({ format }) => (format === FORMAT.DAY) && css`\n    display: none;\n  `}\n\n  ${({ format }) => (format === FORMAT.YEAR) && css`\n    padding: 10px;\n  `}\n\n  & button {\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n  }\n`;\n\nconst MonthContainer = styled.div<{ format?: string }>`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n\n  ${({ format }) => (format === FORMAT.DAY) && css`\n    display: block;\n  `}\n`;\n\ninterface MonthProps {\n  interval: number[];\n}\n\nexport const Month: FunctionComponent<MonthProps> = ({ interval }) => {\n  const dispatch = useAppDispatch();\n  const format = useAppSelector(selectFormat);\n  const monthName = useRef(new Date(interval[0]).getMonth());\n  const countEmptyItem = useRef((new Date(interval[0]).getDay()\n  + 7 - IS_MONDAY_FIRST_DAY_OF_WEEK) % 7);\n\n  const empty = [];\n\n  for (let i = 0; i < countEmptyItem.current; i += 1) {\n    empty.push(-i);\n  }\n\n  const onMonthHandler = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    if (format === FORMAT.MONTH) {\n      return;\n    }\n\n    let monthValue: string | undefined;\n\n    if (e.target instanceof HTMLButtonElement) {\n      monthValue = e.target.dataset.monthValue;\n    }\n\n    if (monthValue) {\n      dispatch(setSpecialDate(+monthValue));\n      dispatch(setFormat(FORMAT.MONTH));\n      dispatch(setIntervalCalendar());\n    }\n  };\n\n  return (\n    <Wrapper format={format}>\n      <MonthTitle\n        format={format}\n      >\n        <button\n          type=\"button\"\n          onClick={e => onMonthHandler(e)}\n          data-month-value={String(interval[0])}\n        >\n          {format === FORMAT.YEAR && MONTH_NAMES[monthName.current]}\n          {/* {format === FORMAT.MONTH && MONTH_NAMES[currentMonthName.current]} */}\n        </button>\n      </MonthTitle>\n\n      <MonthContainer\n        format={format}\n      >\n        {empty.map((emptyItem: number) => (\n          <Day key={emptyItem} startDay={emptyItem} disabled />\n        ))}\n\n        {interval.map((day: number) => (\n          <Day key={day} startDay={day} />\n        ))}\n      </MonthContainer>\n    </Wrapper>\n  );\n};\n","export function buildInterval(start: number, end: number) {\n  const interval = [];\n  let day = start;\n\n  // eslint-disable-next-line no-console\n  // console.log('buildInterval//',\n  //   new Date(start).toDateString(),\n  //   '-----------',\n  //   new Date(end).toDateString());\n\n  while (day < end) {\n    interval.push(day);\n\n    day = new Date(\n      new Date(day).getFullYear(),\n      new Date(day).getMonth(),\n      new Date(day).getDate() + 1,\n    ).valueOf();\n  }\n\n  return interval;\n}\n","export const divideYear = (interval: number[]) => {\n  const year = [];\n  let i = 0;\n\n  while (i < interval.length) {\n    const currentMonth = new Date(interval[i]).getMonth();\n    const month = [];\n\n    while (currentMonth === new Date(interval[i]).getMonth()) {\n      month.push(interval[i]);\n\n      i += 1;\n    }\n\n    year.push(month);\n  }\n\n  return year;\n};\n","import {\n  FunctionComponent,\n} from 'react';\nimport styled from 'styled-components';\nimport { divideYear } from '../helpers/divideYear';\nimport { Month } from './Month';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 2rem;\n  min-width: 1100px;\n`;\n\ninterface YearProps {\n  interval: number[];\n}\n\nexport const Year: FunctionComponent<YearProps> = ({ interval }) => {\n  const prepared = divideYear(interval);\n\n  return (\n    <Wrapper>\n      {prepared.map((month: number[]) => (\n        <Month key={month[0]} interval={month} />\n      ))}\n    </Wrapper>\n  );\n};\n","import { FunctionComponent, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { Month } from '../../components/Month';\nimport { buildInterval } from '../../helpers/buildInterval';\nimport {\n  selectCurrentDate,\n  selectEndInterval,\n  selectFormat,\n  selectStartInterval,\n  setCurrentDate,\n  setFormat,\n  setIntervalCalendar,\n} from '../../store/features/Interval/intervalSlice';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { FORMAT } from '../../constants/FORMAT';\nimport { Year } from '../../components/Year';\nimport { Day } from '../../components/Day';\n\nconst Wrapper = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nexport const HomePage: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const currentDate = useAppSelector(selectCurrentDate);\n  const start = useAppSelector(selectStartInterval);\n  const end = useAppSelector(selectEndInterval);\n  const interval = buildInterval(start, end);\n  const format = useAppSelector(selectFormat);\n\n  useEffect(() => {\n    if (!currentDate) {\n      dispatch(setCurrentDate());\n      dispatch(setFormat(FORMAT.MONTH));\n    }\n\n    // dispatch(setSpecialDate(new Date(2023, 2, 19).valueOf()));\n    dispatch(setIntervalCalendar());\n  }, []);\n\n  // eslint-disable-next-line no-console\n  // console.log('HomePage//',\n  //   new Date(start).toDateString(),\n  //   '-----------',\n  //   new Date(end).toDateString());\n\n  return (\n    <Wrapper>\n      {format === FORMAT.YEAR && <Year interval={interval} />}\n      {(format === FORMAT.MONTH || format === FORMAT.WEEK)\n      && <Month interval={interval} />}\n      {format === FORMAT.DAY && <Day startDay={interval[0]} />}\n    </Wrapper>\n  );\n};\n","import axios from 'axios';\n\nconst baseURL = 'https://jsonplaceholder.typicode.com';\n\nconst instance = axios.create({\n  baseURL,\n});\n\ntype FetchData = {\n};\n\nexport const client = {\n  async get<T>(url: string) {\n    const response = await instance.get<T>(url);\n\n    // eslint-disable-next-line no-console\n    console.log('get', baseURL + url);\n\n    return response.data;\n  },\n\n  async post<T>(url: string, data: FetchData) {\n    const response = await instance.post<T>(url, data);\n\n    return response.data;\n  },\n\n  async patch<T>(url: string, data: FetchData) {\n    const response = await instance.patch<T>(url, data);\n\n    return response.data;\n  },\n\n  async delete(url: string) {\n    return instance.delete(url);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { getAllPosts } from '../../../api/post';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../..';\nimport { Post } from '../../../type/Post';\n\nexport interface PostsState {\n  storage: Post[];\n  statusLoading: 'idle' | 'loading' | 'failed';\n  error: unknown;\n}\n\nconst initialState: PostsState = {\n  storage: [],\n  statusLoading: 'idle',\n  error: null,\n};\n\nexport const getPostsAsync = createAsyncThunk('posts/fetchPosts', async () => {\n  const response: Post[] = await getAllPosts();\n\n  // eslint-disable-next-line no-console\n  console.log(response);\n\n  return response;\n});\n\nconst postsSlice = createSlice({\n  name: 'interval',\n  initialState,\n  reducers: {\n    addPosts: (state: PostsState, action: PayloadAction<Post[]>) => {\n      state.storage.push(...action.payload);\n    },\n    setStatus: (\n      state: PostsState,\n      action: PayloadAction<'idle' | 'loading' | 'failed'>,\n    ) => {\n      state.statusLoading = action.payload;\n    },\n    setError: (state: PostsState, action: PayloadAction<unknown>) => {\n      state.error = action.payload;\n      state.statusLoading = 'failed';\n    },\n    resetState: (state: PostsState) => {\n      return { ...state, ...initialState };\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getPostsAsync.pending, (state: PostsState) => {\n        state.statusLoading = 'loading';\n      })\n      .addCase(getPostsAsync.fulfilled, (state, action) => {\n        state.storage.push(...action.payload);\n        state.statusLoading = 'idle';\n      })\n      .addCase(getPostsAsync.rejected, (state, action) => {\n        state.statusLoading = 'failed';\n\n        // eslint-disable-next-line no-console\n        console.log(action);\n      });\n  },\n});\n\nexport default postsSlice.reducer;\nexport const {\n  addPosts,\n  setStatus,\n  setError,\n  resetState,\n} = postsSlice.actions;\n\nexport const selectPosts = (state: RootState) => state.posts.storage;\nexport const selectPostStatusLoading\n= (state: RootState) => state.posts.statusLoading;\nexport const selectPostError = (state: RootState) => state.posts.error;\n","import { client } from '../utils/axiosClient';\nimport { Post } from '../type/Post';\n\nexport const getAllPosts = () => client.get<Post[]>('/posts/');\nexport const getPostById = (postId: number) => client.get<Post[]>(`/posts/${postId}`);\n","import { FunctionComponent } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { resetState, selectPosts } from '../../store/features/Posts/postsSlice';\n\nimport './PostPage.scss';\n\nexport const PostPage: FunctionComponent = () => {\n  const { id } = useParams();\n\n  // eslint-disable-next-line no-console\n  console.log(id);\n\n  const posts = useAppSelector(selectPosts);\n  const dispatch = useAppDispatch();\n\n  dispatch(resetState());\n\n  const post = posts.find(p => String(p.id) === String(id));\n\n  return (\n    <div\n      className=\"PostPage\"\n    >\n      <Link\n        to=\"/\"\n        className=\"PostPage__Link\"\n      >\n        Back\n      </Link>\n\n      {post ? (\n        <div>\n          <h1>{`PostPage: ${post.title}`}</h1>\n          <p>{post.body}</p>\n        </div>\n      ) : (\n        <>\n          post doesn&nbsp;t exist\n        </>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable no-case-declarations */\n/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../..';\nimport { PopupValues } from '../../../type/Popup';\n\nexport interface ControlState {\n  popup: {\n    isShowDatePicker: boolean;\n    isShowAddItem: boolean;\n  },\n}\n\nconst initialState: ControlState = {\n  popup: {\n    isShowDatePicker: false,\n    isShowAddItem: false,\n  },\n};\n\nconst controlSlice = createSlice({\n  name: 'controls',\n  initialState,\n  reducers: {\n    switchPopup: (\n      state: ControlState,\n      action: PayloadAction<PopupValues>,\n    ) => {\n      state.popup = {\n        ...initialState.popup,\n        [action.payload]: !state.popup[action.payload],\n      };\n    },\n    closeAllPopup: (\n      state: ControlState,\n    ) => {\n      state.popup = {\n        ...initialState.popup,\n      };\n    },\n    resetState: (state: ControlState) => {\n      return { ...state, ...initialState };\n    },\n  },\n});\n\nexport default controlSlice.reducer;\nexport const {\n  switchPopup,\n  closeAllPopup,\n  resetState,\n} = controlSlice.actions;\n\nexport const selectIsShowDatePicker\n = (state: RootState) => state.control.popup.isShowDatePicker;\nexport const selectIsShowAddItem\n= (state: RootState) => state.control.popup.isShowAddItem;\n","import { PopupKeys, PopupValues } from '../type/Popup';\n\nexport const POPUP: { [key in PopupKeys]: PopupValues } = {\n  IS_SHOW_DATE_PICKER: 'isShowDatePicker',\n  IS_SHOW_ADD_ITEM: 'isShowAddItem',\n};\n","export const MOVE: { [key in 'FORWARD' | 'BACK']: '1' | '-1' } = {\n  FORWARD: '1',\n  BACK: '-1',\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  outline: none;\n  justify-content: center;\n  cursor: pointer;\n`;\n","import {\n  FunctionComponent, useEffect, useRef, useState,\n} from 'react';\nimport styled from 'styled-components';\nimport {\n  IoCaretBackOutline,\n  IoCaretForwardOutline,\n  IoCalendarOutline,\n} from 'react-icons/io5';\nimport {\n  IS_MONDAY_FIRST_DAY_OF_WEEK,\n  navigateMonth,\n  navigateYear,\n  selectCurrentDate,\n  selectFormat,\n  setFormat,\n  setIntervalCalendar,\n  setSpecialDate,\n} from '../store/features/Interval/intervalSlice';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { FORMAT } from '../constants/FORMAT';\nimport { MONTH_NAMES, MONTH_NAMES_CUT } from '../constants/MONTH';\nimport {\n  closeAllPopup,\n  selectIsShowDatePicker,\n  switchPopup,\n} from '../store/features/Controls/controlsSlice';\nimport { POPUP } from '../constants/POPUP';\nimport { MOVE } from '../constants/MOVE';\nimport { Button } from '../UI/Button';\nimport { buildInterval } from '../helpers/buildInterval';\n\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\nconst DatePickerTitle = styled.div`\n  display: flex;\n`;\n\nconst DatePickerArrow = styled.button`\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  outline: none;\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst DatePickerButton = styled.button`\n  border: none;\n  background-color: transparent;\n  outline: none;\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n  margin-left: 100px;\n`;\n\nconst DatePickerContainer = styled.div`\n  z-index: 50;\n  position: absolute;\n  right: 0;\n  top: 45px;\n  background-color: white;\n  opacity: 1;\n  width: 400px;\n  box-sizing: border-box;\n  padding: 20px;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  row-gap: 20px;\n\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nconst buildArrayOfYears = (currentDate: number) => {\n  const years = [];\n\n  for (let i = 0; i < 12; i += 1) {\n    years.push(\n      new Date(\n        (new Date(currentDate).getFullYear()) - 4 + i,\n        0,\n        0,\n      ).valueOf(),\n    );\n  }\n\n  return years;\n};\n\nconst buildArrOfMonths = (currentDate: number) => {\n  const year = [];\n\n  for (let i = 0; i < 12; i += 1) {\n    year.push(\n      new Date(\n        (new Date(currentDate).getFullYear()),\n        i,\n        1,\n      ).valueOf(),\n    );\n  }\n\n  return year;\n};\n\nconst buildArrOfDays = (startMonth: number) => {\n  const month = [];\n\n  const countEmptyItem = (new Date(startMonth).getDay()\n  + 7 - IS_MONDAY_FIRST_DAY_OF_WEEK) % 7;\n\n  // eslint-disable-next-line no-console\n  console.log(countEmptyItem);\n\n  for (let i = 0; i < countEmptyItem; i += 1) {\n    month.push('');\n  }\n\n  month.push(...buildInterval(\n    startMonth,\n    new Date(\n      new Date(startMonth).getFullYear(),\n      new Date(startMonth).getMonth() + 1,\n      1,\n    ).valueOf(),\n  ).map(d => String(d)));\n\n  // eslint-disable-next-line no-console\n  console.log(month);\n\n  return month;\n};\n\nexport const DatePicker: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const currentDate = useAppSelector(selectCurrentDate);\n  const format = useAppSelector(selectFormat);\n  const fullNameMonth = MONTH_NAMES[new Date(currentDate).getMonth()];\n  const fullYear = new Date(currentDate).getFullYear();\n  const isShowContainer = useAppSelector(selectIsShowDatePicker);\n\n  const arrOfYears = useRef<number[]>([]);\n  const [year, setYear] = useState('');\n  const arrOfMonths = useRef<number[]>([]);\n  const [month, setMonth] = useState('');\n  const arrOfDays = useRef<string[]>([]);\n\n  const controlRef = useRef<HTMLDivElement>(null);\n  const formRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    arrOfYears.current = buildArrayOfYears(currentDate);\n  }, [currentDate]);\n\n  useEffect(() => {\n    const handleClickOutside\n    = (event: MouseEvent) => {\n      if (controlRef.current\n        && controlRef.current.contains(event.target as Node)) {\n        return;\n      }\n\n      if (formRef.current\n        && !formRef.current.contains(event.target as Node)) {\n        return;\n      }\n\n      if (formRef.current\n        && !formRef.current.contains(event.target as Node)\n        && controlRef.current\n        && !controlRef.current.contains(event.target as Node)\n      ) {\n        // eslint-disable-next-line no-console\n        console.log('handleClickOutside');\n        dispatch(switchPopup(POPUP.IS_SHOW_DATE_PICKER));\n      }\n    };\n\n    document.addEventListener('click', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n\n  const onNavigateHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (format !== FORMAT.YEAR) {\n      dispatch(navigateMonth(e.currentTarget.value));\n      dispatch(setFormat(FORMAT.MONTH));\n    }\n\n    if (format === FORMAT.YEAR) {\n      dispatch(navigateYear(e.currentTarget.value));\n    }\n\n    dispatch(setIntervalCalendar());\n  };\n\n  const onShowHandler = () => {\n    setYear('');\n    dispatch(switchPopup(POPUP.IS_SHOW_DATE_PICKER));\n  };\n\n  const onYearHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    setYear(e.currentTarget.value);\n    arrOfMonths.current = buildArrOfMonths(+e.currentTarget.value);\n  };\n\n  const onMonthHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const currentMonth = new Date(\n      new Date(+year).getFullYear(),\n      +e.currentTarget.value,\n      1,\n    ).valueOf();\n\n    // eslint-disable-next-line no-console\n    console.log(currentMonth);\n\n    setMonth(String(currentMonth));\n\n    arrOfDays.current.push(...buildArrOfDays(currentMonth));\n  };\n\n  const onDayHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    // eslint-disable-next-line no-console\n    console.log(new Date(+month).toDateString());\n\n    const day = e.currentTarget.value;\n\n    dispatch(closeAllPopup());\n    dispatch(setSpecialDate(new Date(\n      new Date(+month).getFullYear(),\n      new Date(+month).getMonth(),\n      +day,\n    ).valueOf()));\n    dispatch(setFormat(FORMAT.MONTH));\n    dispatch(setIntervalCalendar());\n    setMonth('');\n    setYear('');\n  };\n\n  // eslint-disable-next-line no-console\n  console.log('year', year, 'month', month, 'days', arrOfDays.current);\n\n  return (\n    <Wrapper>\n      <DatePickerTitle\n        ref={controlRef}\n      >\n        <DatePickerArrow\n          type=\"button\"\n          value={MOVE.BACK}\n          onClick={onNavigateHandler}\n        >\n          <IoCaretBackOutline />\n        </DatePickerArrow>\n\n        {format !== FORMAT.YEAR && (\n          <>\n            &nbsp;\n            {fullNameMonth}\n          </>\n        )}\n        &nbsp;\n        {fullYear}\n        &nbsp;\n\n        <DatePickerArrow\n          type=\"button\"\n          value={MOVE.FORWARD}\n          onClick={onNavigateHandler}\n        >\n          <IoCaretForwardOutline />\n        </DatePickerArrow>\n\n        <DatePickerButton\n          onClick={onShowHandler}\n        >\n          <IoCalendarOutline size={30} />\n        </DatePickerButton>\n      </DatePickerTitle>\n\n      {isShowContainer && (\n        <DatePickerContainer ref={formRef}>\n          {arrOfYears.current.length\n          && !arrOfMonths.current.length\n          && !arrOfDays.current.length\n          && arrOfYears.current.map((y:number) => (\n            <Button\n              key={y}\n              type=\"button\"\n              value={String(y)}\n              onClick={e => onYearHandler(e)}\n            >\n              {new Date(y).getFullYear()}\n            </Button>\n          ))}\n\n          {arrOfYears.current.length\n          && arrOfMonths.current.length\n          && !arrOfDays.current.length\n          && MONTH_NAMES_CUT.map((m, i) => (\n            <Button\n              key={m}\n              type=\"button\"\n              value={String(arrOfMonths.current[i])}\n              onClick={e => onMonthHandler(e)}\n            >\n              {m}\n            </Button>\n          ))}\n\n          {arrOfYears.current.length\n          && arrOfMonths.current.length\n          && arrOfDays.current.length\n          && (\n            <>\n              {arrOfDays.current.map((d: string) => (\n                <Button\n                  key={Math.random()}\n                  type=\"button\"\n                  value={String(d)}\n                  onClick={e => onDayHandler(e)}\n                >\n                  {d}\n                </Button>\n              ))}\n            </>\n          )}\n        </DatePickerContainer>\n      )}\n    </Wrapper>\n  );\n};\n","import {\n  ChangeEvent,\n  FunctionComponent,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport styled from 'styled-components';\nimport { POPUP } from '../constants/POPUP';\nimport {\n  selectIsShowAddItem,\n  switchPopup,\n} from '../store/features/Controls/controlsSlice';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { Button } from '../UI/Button';\n\nconst Wrapper = styled.div`\n  background-color: white;\n  z-index: 150;\n`;\n\nconst FormContainer = styled.form`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  z-index: 100;\n  background-color: white;\n  opacity: 1;\n  width: 400px;\n  box-sizing: border-box;\n  padding: 20px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nexport const Form: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const isFormOpen = useAppSelector(selectIsShowAddItem);\n  const [value, setValue] = useState<{ [key: string]: string }>({\n    title: '',\n    description: '',\n    date: '',\n    time: '',\n  });\n  const formRef = useRef<HTMLFormElement>(null);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n\n  const handleClickOutside\n  = (event: MouseEvent) => {\n    if (formRef.current\n      && !formRef.current.contains(event.target as Node)\n      && buttonRef.current\n      && !buttonRef.current.contains(event.target as Node)\n    ) {\n      dispatch(switchPopup(POPUP.IS_SHOW_ADD_ITEM));\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setValue({\n      ...value,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onOpenFormHandler = () => {\n    dispatch(switchPopup(POPUP.IS_SHOW_ADD_ITEM));\n  };\n\n  const onSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    // eslint-disable-next-line no-console\n    console.log('From onSubmit');\n\n    dispatch(switchPopup(POPUP.IS_SHOW_ADD_ITEM));\n  };\n\n  return (\n    <Wrapper>\n      <Button\n        ref={buttonRef}\n        onClick={onOpenFormHandler}\n      >\n        Add new item\n      </Button>\n\n      {isFormOpen && (\n        <FormContainer\n          ref={formRef}\n          onSubmit={onSubmit}\n          onClick={e => e.stopPropagation()}\n        >\n          <div>\n            {Object.keys(value).map(key => (\n              <div key={key} className=\"PageForm1__input-container\">\n                <label htmlFor={key}>\n                  {key}\n                  :&nbsp;\n                  <input\n                    id={key}\n                    type=\"text\"\n                    name={key}\n                    // value={value[key as keyof FormObject<Keys, string>]}\n                    onChange={onChange}\n                    placeholder={`input ${key}`}\n                  />\n                </label>\n              </div>\n            ))}\n\n            <button\n              type=\"submit\"\n              onClick={onSubmit}\n              className=\"PageForm1__input-submit\"\n              // disabled={isLoading}\n            >\n              Submit\n            </button>\n\n          </div>\n        </FormContainer>\n      )}\n    </Wrapper>\n  );\n};\n","import {\n  FunctionComponent,\n} from 'react';\nimport styled from 'styled-components';\n\nimport { FORMAT } from '../constants/FORMAT';\nimport { MONTH_NAMES } from '../constants/MONTH';\nimport {\n  selectCurrentDate,\n  selectFormat,\n  setFormat,\n  setIntervalCalendar,\n} from '../store/features/Interval/intervalSlice';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { DatePicker } from './DatePicker';\nimport { Form } from './Form';\n\nconst Wrapper = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n`;\n\nconst Back = styled.div<{ format: string }>`\n  cursor: pointer;\n`;\n\nconst ControlsNavigate = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const Controls: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const currentDate = useAppSelector(selectCurrentDate);\n  const format = useAppSelector(selectFormat);\n  const fullNameMonth = MONTH_NAMES[new Date(currentDate).getMonth()];\n  const fullYear = new Date(currentDate).getFullYear();\n\n  const onGoToPrevFormat = () => {\n    if (format === FORMAT.YEAR) {\n      return;\n    }\n\n    switch (format) {\n      case FORMAT.DAY:\n      case FORMAT.WEEK:\n        dispatch(setFormat(FORMAT.MONTH));\n        break;\n\n      case FORMAT.MONTH:\n        dispatch(setFormat(FORMAT.YEAR));\n        break;\n\n      default:\n    }\n\n    dispatch(setIntervalCalendar());\n  };\n\n  return (\n    <Wrapper>\n      <Back\n        format={format}\n        onClick={onGoToPrevFormat}\n      >\n        {/* {new Date(currentDate).toDateString()} */}\n        {(format === FORMAT.DAY || format === FORMAT.WEEK) && fullNameMonth}\n        {(format === FORMAT.MONTH || format === FORMAT.YEAR) && fullYear}\n      </Back>\n\n      <Form />\n\n      <ControlsNavigate>\n        <DatePicker />\n      </ControlsNavigate>\n    </Wrapper>\n  );\n};\n","import { createHashRouter, Outlet } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { NotFound } from './pages/NotFound';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { PostPage } from './pages/PostPage/PostPage';\nimport { Controls } from './components/Controls';\n\nconst Wrapper = styled.div`\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 100vh;\n  `;\n\nconst Header = styled.header`\n  max-width: 1200px;\n  margin: 0 auto;\n  text-align: center;\n  margin-bottom: 1rem;\n`;\n\nconst Main = styled.main`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nfunction App() {\n  return (\n    <Wrapper>\n      <Header>\n        <h1>Calendar</h1>\n        <Controls />\n      </Header>\n\n      <Main>\n        <Outlet />\n      </Main>\n    </Wrapper>\n  );\n}\n\nexport const router = createHashRouter([\n  {\n    path: '/',\n    element: <App />,\n    errorElement: <NotFound />,\n    id: 'root',\n    children: [\n      {\n        path: '/',\n        element: <HomePage />,\n        id: 'homepage',\n        errorElement: <>Error on Homepage</>,\n      },\n      {\n        path: '/post/:id',\n        element: <PostPage />,\n        errorElement: <>Error on PostPage</>,\n      },\n    ],\n  },\n]);\n","/* eslint-disable import/no-cycle */\nimport {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport postsReducer from './features/Posts/postsSlice';\nimport intervalSlice from './features/Interval/intervalSlice';\nimport controlsSlice from './features/Controls/controlsSlice';\n\nconst rootReducer = combineReducers({\n  posts: postsReducer,\n  interval: intervalSlice,\n  control: controlsSlice,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['interval'],\n  // blacklist: ['interval'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [\n        FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER,\n        'posts',\n      ],\n    },\n  }),\n});\n\nexport default store;\n\nexport const persistor = persistStore(store);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n\n/* eslint-disable @typescript-eslint/indent */\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { RouterProvider } from 'react-router-dom';\nimport { router } from './App';\nimport store, { persistor } from './store';\n\nimport './index.css';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement,\n);\n\nroot.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <RouterProvider router={router} />\n    </PersistGate>\n  </Provider>,\n);\n"],"sourceRoot":""}